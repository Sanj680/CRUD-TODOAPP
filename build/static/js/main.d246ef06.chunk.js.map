{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","TextArea","Input","onSubmit","e","preventDefault","trim","addTask","className","htmlFor","value","onChange","target","placeholder","autoSize","minRows","maxRows","style","marginTop","type","htmlType","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","id","viewTemplate","defaultChecked","completed","toggleTaskCompleted","EditOutlined","height","color","marginRight","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","data","tasks","setTasks","filter","updatedTasks","map","remainingTasks","localStorage","setItem","JSON","stringify","editedTaskList","getItem","storedList","parse","taskList","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d246ef06.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button,Input } from \"antd\";\nfunction Form(props) {\n  const [name, setName] = useState('');\n  \n  const { TextArea } = Input;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!name.trim()) {\n      return;\n    }\n    props.addTask(name);\n    setName(\"\");\n  }\n\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          TodoMatic\n          \n        </label>\n      </h2>\n\n      <TextArea\n        value={name}\n    onChange={handleChange}\n        placeholder=\"Add todo\"\n        autoSize={{\n          minRows: 3,\n          maxRows: 5,\n        }}\n      />\n      <Button style={{marginTop : \"10px\"}}  type=\"primary\" htmlType=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </Button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport { Button\n } from \"antd\";\nfunction FilterButton(props) {\n  return (\n    <Button\n  \n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </Button>\n\n    \n  );\n}\n\nexport default FilterButton;\n","import { EditOutlined } from \"@ant-design/icons\";\nimport { DeleteOutlined } from \"@ant-design/icons/lib/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Checkbox } from \"antd\";\nimport TextArea from \"antd/es/input/TextArea\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const onChange = (e) => {\n    console.log(`checked = ${e.target.checked}`);\n  };\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <TextArea\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName || props.name}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n\n        <Button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </Button>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </Button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n     \n            <Checkbox \n            \n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n            >\n            </Checkbox>\n          \n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        \n\n\n  \n\n\n\n<div>\n        \n        <EditOutlined\n         style = { { height : 40 ,marginTop: -30,color : \" green \", marginRight: 10 } }\n          type=\"button\"\n          className=\"btnn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n        </EditOutlined>\n\n         <DeleteOutlined\n          style = { { height : 40 ,marginTop: -30,color : \" red\"} }\n            type=\"button\"\n            className=\"btn1\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </DeleteOutlined>\n        </div>\n        </div>\n        \n  );\n\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport data from \"./data.json\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(data);\n  const [filter, setFilter] = useState(\"All\");\n\n  useEffect(()=>{   // storing data on refresh\n    if(localStorage.getItem(\"localTasks\")){\n        const storedList = JSON.parse(localStorage.getItem(\"localTasks\"));\n        setTasks(storedList);\n    }\n},[])\n\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks)\n    localStorage.setItem(\"localTasks\", JSON.stringify(remainingTasks))\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n    localStorage.setItem(\"localTasks\", JSON.stringify(editedTaskList))\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"localTasks\", JSON.stringify([...tasks,newTask]))\n  }\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}