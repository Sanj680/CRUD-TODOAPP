{"ast":null,"code":"import { presetPrimaryColors } from '@ant-design/colors';\nimport warning from '../_util/warning';\nexport function validProgress(progress) {\n  if (!progress || progress < 0) {\n    return 0;\n  }\n\n  if (progress > 100) {\n    return 100;\n  }\n\n  return progress;\n}\nexport function getSuccessPercent(_ref) {\n  var success = _ref.success,\n      successPercent = _ref.successPercent;\n  var percent = successPercent;\n  /** @deprecated Use `percent` instead */\n\n  if (success && 'progress' in success) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', '`success.progress` is deprecated. Please use `success.percent` instead.') : void 0;\n    percent = success.progress;\n  }\n\n  if (success && 'percent' in success) {\n    percent = success.percent;\n  }\n\n  return percent;\n}\nexport var getPercentage = function getPercentage(_ref2) {\n  var percent = _ref2.percent,\n      success = _ref2.success,\n      successPercent = _ref2.successPercent;\n  var realSuccessPercent = validProgress(getSuccessPercent({\n    success: success,\n    successPercent: successPercent\n  }));\n  return [realSuccessPercent, validProgress(validProgress(percent) - realSuccessPercent)];\n};\nexport var getStrokeColor = function getStrokeColor(_ref3) {\n  var _ref3$success = _ref3.success,\n      success = _ref3$success === void 0 ? {} : _ref3$success,\n      strokeColor = _ref3.strokeColor;\n  var successColor = success.strokeColor;\n  return [successColor || presetPrimaryColors.green, strokeColor || null];\n};","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/progress/utils.js"],"names":["presetPrimaryColors","warning","validProgress","progress","getSuccessPercent","_ref","success","successPercent","percent","process","env","NODE_ENV","getPercentage","_ref2","realSuccessPercent","getStrokeColor","_ref3","strokeColor","successColor","green"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,oBAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AACtC,MAAI,CAACA,QAAD,IAAaA,QAAQ,GAAG,CAA5B,EAA+B;AAC7B,WAAO,CAAP;AACD;;AACD,MAAIA,QAAQ,GAAG,GAAf,EAAoB;AAClB,WAAO,GAAP;AACD;;AACD,SAAOA,QAAP;AACD;AACD,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAAA,MAEpCC,OAFoC,GAIlCD,IAJkC,CAEpCC,OAFoC;AAAA,MAGpCC,cAHoC,GAIlCF,IAJkC,CAGpCE,cAHoC;AAKtC,MAAIC,OAAO,GAAGD,cAAd;AACA;;AACA,MAAID,OAAO,IAAI,cAAcA,OAA7B,EAAsC;AACpCG,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,OAAO,CAAC,KAAD,EAAQ,UAAR,EAAoB,yEAApB,CAA/C,GAAgJ,KAAK,CAArJ;AACAO,IAAAA,OAAO,GAAGF,OAAO,CAACH,QAAlB;AACD;;AACD,MAAIG,OAAO,IAAI,aAAaA,OAA5B,EAAqC;AACnCE,IAAAA,OAAO,GAAGF,OAAO,CAACE,OAAlB;AACD;;AACD,SAAOA,OAAP;AACD;AACD,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA,MAElCL,OAFkC,GAKhCK,KALgC,CAElCL,OAFkC;AAAA,MAGlCF,OAHkC,GAKhCO,KALgC,CAGlCP,OAHkC;AAAA,MAIlCC,cAJkC,GAKhCM,KALgC,CAIlCN,cAJkC;AAMpC,MAAMO,kBAAkB,GAAGZ,aAAa,CAACE,iBAAiB,CAAC;AACzDE,IAAAA,OAAO,EAAPA,OADyD;AAEzDC,IAAAA,cAAc,EAAdA;AAFyD,GAAD,CAAlB,CAAxC;AAIA,SAAO,CAACO,kBAAD,EAAqBZ,aAAa,CAACA,aAAa,CAACM,OAAD,CAAb,GAAyBM,kBAA1B,CAAlC,CAAP;AACD,CAXM;AAYP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,sBAIjCA,KAJiC,CAEnCV,OAFmC;AAAA,MAEnCA,OAFmC,8BAEzB,EAFyB;AAAA,MAGnCW,WAHmC,GAIjCD,KAJiC,CAGnCC,WAHmC;AAAA,MAMtBC,YANsB,GAOjCZ,OAPiC,CAMnCW,WANmC;AAQrC,SAAO,CAACC,YAAY,IAAIlB,mBAAmB,CAACmB,KAArC,EAA4CF,WAAW,IAAI,IAA3D,CAAP;AACD,CATM","sourcesContent":["import { presetPrimaryColors } from '@ant-design/colors';\nimport warning from '../_util/warning';\nexport function validProgress(progress) {\n  if (!progress || progress < 0) {\n    return 0;\n  }\n  if (progress > 100) {\n    return 100;\n  }\n  return progress;\n}\nexport function getSuccessPercent(_ref) {\n  let {\n    success,\n    successPercent\n  } = _ref;\n  let percent = successPercent;\n  /** @deprecated Use `percent` instead */\n  if (success && 'progress' in success) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', '`success.progress` is deprecated. Please use `success.percent` instead.') : void 0;\n    percent = success.progress;\n  }\n  if (success && 'percent' in success) {\n    percent = success.percent;\n  }\n  return percent;\n}\nexport const getPercentage = _ref2 => {\n  let {\n    percent,\n    success,\n    successPercent\n  } = _ref2;\n  const realSuccessPercent = validProgress(getSuccessPercent({\n    success,\n    successPercent\n  }));\n  return [realSuccessPercent, validProgress(validProgress(percent) - realSuccessPercent)];\n};\nexport const getStrokeColor = _ref3 => {\n  let {\n    success = {},\n    strokeColor\n  } = _ref3;\n  const {\n    strokeColor: successColor\n  } = success;\n  return [successColor || presetPrimaryColors.green, strokeColor || null];\n};"]},"metadata":{},"sourceType":"module"}