{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { render } from \"rc-util/es/React/render\";\nimport * as React from 'react';\nimport ConfigProvider, { globalConfig } from '../config-provider';\nimport PurePanel from './PurePanel';\nimport useMessage, { useInternalMessage } from './useMessage';\nimport { wrapPromiseFn } from './util';\nvar methods = ['success', 'info', 'warning', 'error', 'loading'];\nvar message = null;\n\nvar act = function act(callback) {\n  return callback();\n};\n\nvar taskQueue = [];\nvar defaultGlobalConfig = {};\n\nfunction getGlobalContext() {\n  var _defaultGlobalConfig = defaultGlobalConfig,\n      globalPrefixCls = _defaultGlobalConfig.prefixCls,\n      globalGetContainer = _defaultGlobalConfig.getContainer,\n      rtl = _defaultGlobalConfig.rtl,\n      maxCount = _defaultGlobalConfig.maxCount,\n      top = _defaultGlobalConfig.top;\n  var mergedPrefixCls = globalPrefixCls !== null && globalPrefixCls !== void 0 ? globalPrefixCls : globalConfig().getPrefixCls('message');\n  var mergedContainer = (globalGetContainer === null || globalGetContainer === void 0 ? void 0 : globalGetContainer()) || document.body;\n  return {\n    prefixCls: mergedPrefixCls,\n    container: mergedContainer,\n    rtl: rtl,\n    maxCount: maxCount,\n    top: top\n  };\n}\n\nvar GlobalHolder = /*#__PURE__*/React.forwardRef(function (_, ref) {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prefixCls = _React$useState2[0],\n      setPrefixCls = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      container = _React$useState4[0],\n      setContainer = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      maxCount = _React$useState6[0],\n      setMaxCount = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      rtl = _React$useState8[0],\n      setRTL = _React$useState8[1];\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      top = _React$useState10[0],\n      setTop = _React$useState10[1];\n\n  var _useInternalMessage = useInternalMessage({\n    prefixCls: prefixCls,\n    getContainer: function getContainer() {\n      return container;\n    },\n    maxCount: maxCount,\n    rtl: rtl,\n    top: top\n  }),\n      _useInternalMessage2 = _slicedToArray(_useInternalMessage, 2),\n      api = _useInternalMessage2[0],\n      holder = _useInternalMessage2[1];\n\n  var global = globalConfig();\n  var rootPrefixCls = global.getRootPrefixCls();\n  var rootIconPrefixCls = global.getIconPrefixCls();\n\n  var sync = function sync() {\n    var _getGlobalContext = getGlobalContext(),\n        nextGlobalPrefixCls = _getGlobalContext.prefixCls,\n        nextGlobalContainer = _getGlobalContext.container,\n        nextGlobalMaxCount = _getGlobalContext.maxCount,\n        nextGlobalRTL = _getGlobalContext.rtl,\n        nextTop = _getGlobalContext.top;\n\n    setPrefixCls(nextGlobalPrefixCls);\n    setContainer(nextGlobalContainer);\n    setMaxCount(nextGlobalMaxCount);\n    setRTL(nextGlobalRTL);\n    setTop(nextTop);\n  };\n\n  React.useEffect(sync, []);\n  React.useImperativeHandle(ref, function () {\n    var instance = Object.assign({}, api);\n    Object.keys(instance).forEach(function (method) {\n      instance[method] = function () {\n        sync();\n        return api[method].apply(api, arguments);\n      };\n    });\n    return {\n      instance: instance,\n      sync: sync\n    };\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: rootIconPrefixCls\n  }, holder);\n});\n\nfunction flushNotice() {\n  if (!message) {\n    var holderFragment = document.createDocumentFragment();\n    var newMessage = {\n      fragment: holderFragment\n    };\n    message = newMessage; // Delay render to avoid sync issue\n\n    act(function () {\n      render( /*#__PURE__*/React.createElement(GlobalHolder, {\n        ref: function ref(node) {\n          var _ref = node || {},\n              instance = _ref.instance,\n              sync = _ref.sync; // React 18 test env will throw if call immediately in ref\n\n\n          Promise.resolve().then(function () {\n            if (!newMessage.instance && instance) {\n              newMessage.instance = instance;\n              newMessage.sync = sync;\n              flushNotice();\n            }\n          });\n        }\n      }), holderFragment);\n    });\n    return;\n  } // Notification not ready\n\n\n  if (!message.instance) {\n    return;\n  } // >>> Execute task\n\n\n  taskQueue.forEach(function (task) {\n    var type = task.type,\n        skipped = task.skipped; // Only `skipped` when user call notice but cancel it immediately\n    // and instance not ready\n\n    if (!skipped) {\n      switch (type) {\n        case 'open':\n          {\n            act(function () {\n              var closeFn = message.instance.open(Object.assign(Object.assign({}, defaultGlobalConfig), task.config));\n              closeFn === null || closeFn === void 0 ? void 0 : closeFn.then(task.resolve);\n              task.setCloseFn(closeFn);\n            });\n            break;\n          }\n\n        case 'destroy':\n          act(function () {\n            message === null || message === void 0 ? void 0 : message.instance.destroy(task.key);\n          });\n          break;\n        // Other type open\n\n        default:\n          {\n            act(function () {\n              var _message$instance;\n\n              var closeFn = (_message$instance = message.instance)[type].apply(_message$instance, _toConsumableArray(task.args));\n\n              closeFn === null || closeFn === void 0 ? void 0 : closeFn.then(task.resolve);\n              task.setCloseFn(closeFn);\n            });\n          }\n      }\n    }\n  }); // Clean up\n\n  taskQueue = [];\n}\n\nfunction setMessageGlobalConfig(config) {\n  defaultGlobalConfig = Object.assign(Object.assign({}, defaultGlobalConfig), config); // Trigger sync for it\n\n  act(function () {\n    var _a;\n\n    (_a = message === null || message === void 0 ? void 0 : message.sync) === null || _a === void 0 ? void 0 : _a.call(message);\n  });\n}\n\nfunction open(config) {\n  var result = wrapPromiseFn(function (resolve) {\n    var closeFn;\n    var task = {\n      type: 'open',\n      config: config,\n      resolve: resolve,\n      setCloseFn: function setCloseFn(fn) {\n        closeFn = fn;\n      }\n    };\n    taskQueue.push(task);\n    return function () {\n      if (closeFn) {\n        act(function () {\n          closeFn();\n        });\n      } else {\n        task.skipped = true;\n      }\n    };\n  });\n  flushNotice();\n  return result;\n}\n\nfunction typeOpen(type, args) {\n  var result = wrapPromiseFn(function (resolve) {\n    var closeFn;\n    var task = {\n      type: type,\n      args: args,\n      resolve: resolve,\n      setCloseFn: function setCloseFn(fn) {\n        closeFn = fn;\n      }\n    };\n    taskQueue.push(task);\n    return function () {\n      if (closeFn) {\n        act(function () {\n          closeFn();\n        });\n      } else {\n        task.skipped = true;\n      }\n    };\n  });\n  flushNotice();\n  return result;\n}\n\nfunction destroy(key) {\n  taskQueue.push({\n    type: 'destroy',\n    key: key\n  });\n  flushNotice();\n}\n\nvar baseStaticMethods = {\n  open: open,\n  destroy: destroy,\n  config: setMessageGlobalConfig,\n  useMessage: useMessage,\n  _InternalPanelDoNotUseOrYouWillBeFired: PurePanel\n};\nvar staticMethods = baseStaticMethods;\nmethods.forEach(function (type) {\n  staticMethods[type] = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return typeOpen(type, args);\n  };\n}); // ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\n\nvar noop = function noop() {};\n/** @private Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\n\n\nexport var actWrapper = noop;\n\nif (process.env.NODE_ENV === 'test') {\n  actWrapper = function actWrapper(wrapper) {\n    act = wrapper;\n  };\n}\n/** @private Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\n\n\nexport var actDestroy = noop;\n\nif (process.env.NODE_ENV === 'test') {\n  actDestroy = function actDestroy() {\n    message = null;\n  };\n}\n\nexport default staticMethods;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/message/index.js"],"names":["_toConsumableArray","render","React","ConfigProvider","globalConfig","PurePanel","useMessage","useInternalMessage","wrapPromiseFn","methods","message","act","callback","taskQueue","defaultGlobalConfig","getGlobalContext","globalPrefixCls","prefixCls","globalGetContainer","getContainer","rtl","maxCount","top","mergedPrefixCls","getPrefixCls","mergedContainer","document","body","container","GlobalHolder","forwardRef","_","ref","useState","setPrefixCls","setContainer","setMaxCount","setRTL","setTop","api","holder","global","rootPrefixCls","getRootPrefixCls","rootIconPrefixCls","getIconPrefixCls","sync","nextGlobalPrefixCls","nextGlobalContainer","nextGlobalMaxCount","nextGlobalRTL","nextTop","useEffect","useImperativeHandle","instance","Object","assign","keys","forEach","method","apply","arguments","createElement","iconPrefixCls","flushNotice","holderFragment","createDocumentFragment","newMessage","fragment","node","Promise","resolve","then","task","type","skipped","closeFn","open","config","setCloseFn","destroy","key","_message$instance","args","setMessageGlobalConfig","_a","call","result","fn","push","typeOpen","baseStaticMethods","_InternalPanelDoNotUseOrYouWillBeFired","staticMethods","_len","length","Array","_key","noop","actWrapper","process","env","NODE_ENV","wrapper","actDestroy"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { render } from \"rc-util/es/React/render\";\nimport * as React from 'react';\nimport ConfigProvider, { globalConfig } from '../config-provider';\nimport PurePanel from './PurePanel';\nimport useMessage, { useInternalMessage } from './useMessage';\nimport { wrapPromiseFn } from './util';\nconst methods = ['success', 'info', 'warning', 'error', 'loading'];\nlet message = null;\nlet act = callback => callback();\nlet taskQueue = [];\nlet defaultGlobalConfig = {};\nfunction getGlobalContext() {\n  const {\n    prefixCls: globalPrefixCls,\n    getContainer: globalGetContainer,\n    rtl,\n    maxCount,\n    top\n  } = defaultGlobalConfig;\n  const mergedPrefixCls = globalPrefixCls !== null && globalPrefixCls !== void 0 ? globalPrefixCls : globalConfig().getPrefixCls('message');\n  const mergedContainer = (globalGetContainer === null || globalGetContainer === void 0 ? void 0 : globalGetContainer()) || document.body;\n  return {\n    prefixCls: mergedPrefixCls,\n    container: mergedContainer,\n    rtl,\n    maxCount,\n    top\n  };\n}\nconst GlobalHolder = /*#__PURE__*/React.forwardRef((_, ref) => {\n  const [prefixCls, setPrefixCls] = React.useState();\n  const [container, setContainer] = React.useState();\n  const [maxCount, setMaxCount] = React.useState();\n  const [rtl, setRTL] = React.useState();\n  const [top, setTop] = React.useState();\n  const [api, holder] = useInternalMessage({\n    prefixCls,\n    getContainer: () => container,\n    maxCount,\n    rtl,\n    top\n  });\n  const global = globalConfig();\n  const rootPrefixCls = global.getRootPrefixCls();\n  const rootIconPrefixCls = global.getIconPrefixCls();\n  const sync = () => {\n    const {\n      prefixCls: nextGlobalPrefixCls,\n      container: nextGlobalContainer,\n      maxCount: nextGlobalMaxCount,\n      rtl: nextGlobalRTL,\n      top: nextTop\n    } = getGlobalContext();\n    setPrefixCls(nextGlobalPrefixCls);\n    setContainer(nextGlobalContainer);\n    setMaxCount(nextGlobalMaxCount);\n    setRTL(nextGlobalRTL);\n    setTop(nextTop);\n  };\n  React.useEffect(sync, []);\n  React.useImperativeHandle(ref, () => {\n    const instance = Object.assign({}, api);\n    Object.keys(instance).forEach(method => {\n      instance[method] = function () {\n        sync();\n        return api[method].apply(api, arguments);\n      };\n    });\n    return {\n      instance,\n      sync\n    };\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: rootIconPrefixCls\n  }, holder);\n});\nfunction flushNotice() {\n  if (!message) {\n    const holderFragment = document.createDocumentFragment();\n    const newMessage = {\n      fragment: holderFragment\n    };\n    message = newMessage;\n    // Delay render to avoid sync issue\n    act(() => {\n      render( /*#__PURE__*/React.createElement(GlobalHolder, {\n        ref: node => {\n          const {\n            instance,\n            sync\n          } = node || {};\n          // React 18 test env will throw if call immediately in ref\n          Promise.resolve().then(() => {\n            if (!newMessage.instance && instance) {\n              newMessage.instance = instance;\n              newMessage.sync = sync;\n              flushNotice();\n            }\n          });\n        }\n      }), holderFragment);\n    });\n    return;\n  }\n  // Notification not ready\n  if (!message.instance) {\n    return;\n  }\n  // >>> Execute task\n  taskQueue.forEach(task => {\n    const {\n      type,\n      skipped\n    } = task;\n    // Only `skipped` when user call notice but cancel it immediately\n    // and instance not ready\n    if (!skipped) {\n      switch (type) {\n        case 'open':\n          {\n            act(() => {\n              const closeFn = message.instance.open(Object.assign(Object.assign({}, defaultGlobalConfig), task.config));\n              closeFn === null || closeFn === void 0 ? void 0 : closeFn.then(task.resolve);\n              task.setCloseFn(closeFn);\n            });\n            break;\n          }\n        case 'destroy':\n          act(() => {\n            message === null || message === void 0 ? void 0 : message.instance.destroy(task.key);\n          });\n          break;\n        // Other type open\n        default:\n          {\n            act(() => {\n              var _message$instance;\n              const closeFn = (_message$instance = message.instance)[type].apply(_message$instance, _toConsumableArray(task.args));\n              closeFn === null || closeFn === void 0 ? void 0 : closeFn.then(task.resolve);\n              task.setCloseFn(closeFn);\n            });\n          }\n      }\n    }\n  });\n  // Clean up\n  taskQueue = [];\n}\nfunction setMessageGlobalConfig(config) {\n  defaultGlobalConfig = Object.assign(Object.assign({}, defaultGlobalConfig), config);\n  // Trigger sync for it\n  act(() => {\n    var _a;\n    (_a = message === null || message === void 0 ? void 0 : message.sync) === null || _a === void 0 ? void 0 : _a.call(message);\n  });\n}\nfunction open(config) {\n  const result = wrapPromiseFn(resolve => {\n    let closeFn;\n    const task = {\n      type: 'open',\n      config,\n      resolve,\n      setCloseFn: fn => {\n        closeFn = fn;\n      }\n    };\n    taskQueue.push(task);\n    return () => {\n      if (closeFn) {\n        act(() => {\n          closeFn();\n        });\n      } else {\n        task.skipped = true;\n      }\n    };\n  });\n  flushNotice();\n  return result;\n}\nfunction typeOpen(type, args) {\n  const result = wrapPromiseFn(resolve => {\n    let closeFn;\n    const task = {\n      type,\n      args,\n      resolve,\n      setCloseFn: fn => {\n        closeFn = fn;\n      }\n    };\n    taskQueue.push(task);\n    return () => {\n      if (closeFn) {\n        act(() => {\n          closeFn();\n        });\n      } else {\n        task.skipped = true;\n      }\n    };\n  });\n  flushNotice();\n  return result;\n}\nfunction destroy(key) {\n  taskQueue.push({\n    type: 'destroy',\n    key\n  });\n  flushNotice();\n}\nconst baseStaticMethods = {\n  open,\n  destroy,\n  config: setMessageGlobalConfig,\n  useMessage,\n  _InternalPanelDoNotUseOrYouWillBeFired: PurePanel\n};\nconst staticMethods = baseStaticMethods;\nmethods.forEach(type => {\n  staticMethods[type] = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return typeOpen(type, args);\n  };\n});\n// ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\nconst noop = () => {};\n/** @private Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport let actWrapper = noop;\nif (process.env.NODE_ENV === 'test') {\n  actWrapper = wrapper => {\n    act = wrapper;\n  };\n}\n/** @private Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport let actDestroy = noop;\nif (process.env.NODE_ENV === 'test') {\n  actDestroy = () => {\n    message = null;\n  };\n}\nexport default staticMethods;"]},"metadata":{},"sourceType":"module"}