{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport ConfigProvider, { ConfigContext } from '../config-provider';\n/* istanbul ignore next */\n\nexport default function genPurePanel(Component, defaultPrefixCls, getDropdownCls) {\n  return function PurePanel(props) {\n    var customizePrefixCls = props.prefixCls,\n        style = props.style;\n    var holderRef = React.useRef(null);\n\n    var _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        popupHeight = _React$useState2[0],\n        setPopupHeight = _React$useState2[1];\n\n    var _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        popupWidth = _React$useState4[0],\n        setPopupWidth = _React$useState4[1];\n\n    var _useMergedState = useMergedState(false, {\n      value: props.open\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        open = _useMergedState2[0],\n        setOpen = _useMergedState2[1];\n\n    var _React$useContext = React.useContext(ConfigContext),\n        getPrefixCls = _React$useContext.getPrefixCls;\n\n    var prefixCls = getPrefixCls(defaultPrefixCls || 'select', customizePrefixCls);\n    React.useEffect(function () {\n      // We do not care about ssr\n      setOpen(true);\n\n      if (typeof ResizeObserver !== 'undefined') {\n        var resizeObserver = new ResizeObserver(function (entries) {\n          var element = entries[0].target;\n          setPopupHeight(element.offsetHeight + 8);\n          setPopupWidth(element.offsetWidth);\n        });\n        var interval = setInterval(function () {\n          var _a;\n\n          var dropdownCls = getDropdownCls ? \".\".concat(getDropdownCls(prefixCls)) : \".\".concat(prefixCls, \"-dropdown\");\n          var popup = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(dropdownCls);\n\n          if (popup) {\n            clearInterval(interval);\n            resizeObserver.observe(popup);\n          }\n        }, 10);\n        return function () {\n          clearInterval(interval);\n          resizeObserver.disconnect();\n        };\n      }\n    }, []);\n    return /*#__PURE__*/React.createElement(ConfigProvider, {\n      theme: {\n        token: {\n          motionDurationFast: '0.01s',\n          motionDurationMid: '0.01s',\n          motionDurationSlow: '0.01s'\n        }\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: holderRef,\n      style: {\n        paddingBottom: popupHeight,\n        position: 'relative',\n        width: 'fit-content',\n        minWidth: popupWidth\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      style: Object.assign(Object.assign({}, style), {\n        margin: 0\n      }),\n      open: open,\n      visible: open,\n      getPopupContainer: function getPopupContainer() {\n        return holderRef.current;\n      }\n    }))));\n  };\n}","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/_util/PurePanel.js"],"names":["useMergedState","React","ConfigProvider","ConfigContext","genPurePanel","Component","defaultPrefixCls","getDropdownCls","PurePanel","props","customizePrefixCls","prefixCls","style","holderRef","useRef","useState","popupHeight","setPopupHeight","popupWidth","setPopupWidth","value","open","setOpen","useContext","getPrefixCls","useEffect","ResizeObserver","resizeObserver","entries","element","target","offsetHeight","offsetWidth","interval","setInterval","_a","dropdownCls","popup","current","querySelector","clearInterval","observe","disconnect","createElement","theme","token","motionDurationFast","motionDurationMid","motionDurationSlow","ref","paddingBottom","position","width","minWidth","Object","assign","margin","visible","getPopupContainer"],"mappings":"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","sourcesContent":["import useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport ConfigProvider, { ConfigContext } from '../config-provider';\n/* istanbul ignore next */\nexport default function genPurePanel(Component, defaultPrefixCls, getDropdownCls) {\n  return function PurePanel(props) {\n    const {\n      prefixCls: customizePrefixCls,\n      style\n    } = props;\n    const holderRef = React.useRef(null);\n    const [popupHeight, setPopupHeight] = React.useState(0);\n    const [popupWidth, setPopupWidth] = React.useState(0);\n    const [open, setOpen] = useMergedState(false, {\n      value: props.open\n    });\n    const {\n      getPrefixCls\n    } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls(defaultPrefixCls || 'select', customizePrefixCls);\n    React.useEffect(() => {\n      // We do not care about ssr\n      setOpen(true);\n      if (typeof ResizeObserver !== 'undefined') {\n        const resizeObserver = new ResizeObserver(entries => {\n          const element = entries[0].target;\n          setPopupHeight(element.offsetHeight + 8);\n          setPopupWidth(element.offsetWidth);\n        });\n        const interval = setInterval(() => {\n          var _a;\n          const dropdownCls = getDropdownCls ? `.${getDropdownCls(prefixCls)}` : `.${prefixCls}-dropdown`;\n          const popup = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(dropdownCls);\n          if (popup) {\n            clearInterval(interval);\n            resizeObserver.observe(popup);\n          }\n        }, 10);\n        return () => {\n          clearInterval(interval);\n          resizeObserver.disconnect();\n        };\n      }\n    }, []);\n    return /*#__PURE__*/React.createElement(ConfigProvider, {\n      theme: {\n        token: {\n          motionDurationFast: '0.01s',\n          motionDurationMid: '0.01s',\n          motionDurationSlow: '0.01s'\n        }\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: holderRef,\n      style: {\n        paddingBottom: popupHeight,\n        position: 'relative',\n        width: 'fit-content',\n        minWidth: popupWidth\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      style: Object.assign(Object.assign({}, style), {\n        margin: 0\n      }),\n      open: open,\n      visible: open,\n      getPopupContainer: () => holderRef.current\n    }))));\n  };\n}"]},"metadata":{},"sourceType":"module"}