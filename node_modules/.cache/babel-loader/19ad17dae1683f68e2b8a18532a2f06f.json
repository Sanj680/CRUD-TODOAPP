{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport Checkbox from '../checkbox';\nimport Dropdown from '../dropdown';\nimport { isValidElement } from '../_util/reactNode';\nimport { groupKeysMap } from '../_util/transKeys';\nimport DefaultListBody, { OmitProps } from './ListBody';\nimport Search from './search';\n\nconst defaultRender = () => null;\n\nfunction isRenderResultPlainObject(result) {\n  return !!(result && !isValidElement(result) && Object.prototype.toString.call(result) === '[object Object]');\n}\n\nfunction getEnabledItemKeys(items) {\n  return items.filter(data => !data.disabled).map(data => data.key);\n}\n\nlet TransferList = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(TransferList, _React$PureComponent);\n\n  var _super = _createSuper(TransferList);\n\n  function TransferList(props) {\n    var _this;\n\n    _classCallCheck(this, TransferList);\n\n    _this = _super.call(this, props);\n    _this.defaultListBodyRef = /*#__PURE__*/React.createRef(); // =============================== Filter ===============================\n\n    _this.handleFilter = e => {\n      const {\n        handleFilter\n      } = _this.props;\n      const {\n        target: {\n          value: filterValue\n        }\n      } = e;\n\n      _this.setState({\n        filterValue\n      });\n\n      handleFilter(e);\n    };\n\n    _this.handleClear = () => {\n      const {\n        handleClear\n      } = _this.props;\n\n      _this.setState({\n        filterValue: ''\n      });\n\n      handleClear();\n    };\n\n    _this.matchFilter = (text, item) => {\n      const {\n        filterValue\n      } = _this.state;\n      const {\n        filterOption\n      } = _this.props;\n\n      if (filterOption) {\n        return filterOption(filterValue, item);\n      }\n\n      return text.includes(filterValue);\n    }; // =============================== Render ===============================\n\n\n    _this.renderListBody = (renderList, props) => {\n      let bodyContent = renderList ? renderList(props) : null;\n      const customize = !!bodyContent;\n\n      if (!customize) {\n        bodyContent = /*#__PURE__*/React.createElement(DefaultListBody, Object.assign({\n          ref: _this.defaultListBodyRef\n        }, props));\n      }\n\n      return {\n        customize,\n        bodyContent\n      };\n    };\n\n    _this.renderItem = item => {\n      const {\n        render = defaultRender\n      } = _this.props;\n      const renderResult = render(item);\n      const isRenderResultPlain = isRenderResultPlainObject(renderResult);\n      return {\n        renderedText: isRenderResultPlain ? renderResult.value : renderResult,\n        renderedEl: isRenderResultPlain ? renderResult.label : renderResult,\n        item\n      };\n    };\n\n    _this.getSelectAllLabel = (selectedCount, totalCount) => {\n      const {\n        itemsUnit,\n        itemUnit,\n        selectAllLabel\n      } = _this.props;\n\n      if (selectAllLabel) {\n        return typeof selectAllLabel === 'function' ? selectAllLabel({\n          selectedCount,\n          totalCount\n        }) : selectAllLabel;\n      }\n\n      const unit = totalCount > 1 ? itemsUnit : itemUnit;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, (selectedCount > 0 ? `${selectedCount}/` : '') + totalCount, \" \", unit);\n    };\n\n    _this.state = {\n      filterValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransferList, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.triggerScrollTimer);\n    }\n  }, {\n    key: \"getCheckStatus\",\n    value: function getCheckStatus(filteredItems) {\n      const {\n        checkedKeys\n      } = this.props;\n\n      if (checkedKeys.length === 0) {\n        return 'none';\n      }\n\n      const checkedKeysMap = groupKeysMap(checkedKeys);\n\n      if (filteredItems.every(item => checkedKeysMap.has(item.key) || !!item.disabled)) {\n        return 'all';\n      }\n\n      return 'part';\n    } // ================================ Item ================================\n\n  }, {\n    key: \"getFilteredItems\",\n    value: function getFilteredItems(dataSource, filterValue) {\n      const filteredItems = [];\n      const filteredRenderItems = [];\n      dataSource.forEach(item => {\n        const renderedItem = this.renderItem(item);\n        const {\n          renderedText\n        } = renderedItem; // Filter skip\n\n        if (filterValue && !this.matchFilter(renderedText, item)) {\n          return null;\n        }\n\n        filteredItems.push(item);\n        filteredRenderItems.push(renderedItem);\n      });\n      return {\n        filteredItems,\n        filteredRenderItems\n      };\n    }\n  }, {\n    key: \"getListBody\",\n    value: function getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, filteredRenderItems, checkedKeys, renderList, showSearch, disabled) {\n      const search = showSearch ? /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-body-search-wrapper`\n      }, /*#__PURE__*/React.createElement(Search, {\n        prefixCls: `${prefixCls}-search`,\n        onChange: this.handleFilter,\n        handleClear: this.handleClear,\n        placeholder: searchPlaceholder,\n        value: filterValue,\n        disabled: disabled\n      })) : null;\n      const {\n        bodyContent,\n        customize\n      } = this.renderListBody(renderList, Object.assign(Object.assign({}, omit(this.props, OmitProps)), {\n        filteredItems,\n        filteredRenderItems,\n        selectedKeys: checkedKeys\n      }));\n\n      const getNotFoundContent = () => {\n        const contentIndex = this.props.direction === 'left' ? 0 : 1;\n        return Array.isArray(notFoundContent) ? notFoundContent[contentIndex] : notFoundContent;\n      };\n\n      let bodyNode; // We should wrap customize list body in a classNamed div to use flex layout.\n\n      if (customize) {\n        bodyNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: `${prefixCls}-body-customize-wrapper`\n        }, bodyContent);\n      } else {\n        bodyNode = filteredItems.length ? bodyContent : /*#__PURE__*/React.createElement(\"div\", {\n          className: `${prefixCls}-body-not-found`\n        }, getNotFoundContent());\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(showSearch ? `${prefixCls}-body ${prefixCls}-body-with-search` : `${prefixCls}-body`)\n      }, search, bodyNode);\n    }\n  }, {\n    key: \"getCheckBox\",\n    value: function getCheckBox(_ref) {\n      let {\n        filteredItems,\n        onItemSelectAll,\n        disabled,\n        prefixCls\n      } = _ref;\n      const checkStatus = this.getCheckStatus(filteredItems);\n      const checkedAll = checkStatus === 'all';\n      const checkAllCheckbox = /*#__PURE__*/React.createElement(Checkbox, {\n        disabled: disabled,\n        checked: checkedAll,\n        indeterminate: checkStatus === 'part',\n        className: `${prefixCls}-checkbox`,\n        onChange: () => {\n          // Only select enabled items\n          onItemSelectAll(filteredItems.filter(item => !item.disabled).map(_ref2 => {\n            let {\n              key\n            } = _ref2;\n            return key;\n          }), !checkedAll);\n        }\n      });\n      return checkAllCheckbox;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      const {\n        filterValue\n      } = this.state;\n      const {\n        prefixCls,\n        dataSource = [],\n        titleText = '',\n        checkedKeys,\n        disabled,\n        footer,\n        showSearch = false,\n        style,\n        searchPlaceholder,\n        notFoundContent,\n        selectAll,\n        selectCurrent,\n        selectInvert,\n        removeAll,\n        removeCurrent,\n        renderList,\n        onItemSelectAll,\n        onItemRemove,\n        showSelectAll = true,\n        showRemove,\n        pagination,\n        direction\n      } = this.props; // Custom Layout\n\n      const footerDom = footer && (footer.length < 2 ? footer(this.props) : footer(this.props, {\n        direction\n      }));\n      const listCls = classNames(prefixCls, {\n        [`${prefixCls}-with-pagination`]: !!pagination,\n        [`${prefixCls}-with-footer`]: !!footerDom\n      }); // ====================== Get filtered, checked item list ======================\n\n      const {\n        filteredItems,\n        filteredRenderItems\n      } = this.getFilteredItems(dataSource, filterValue); // ================================= List Body =================================\n\n      const listBody = this.getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, filteredRenderItems, checkedKeys, renderList, showSearch, disabled); // ================================ List Footer ================================\n\n      const listFooter = footerDom ? /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-footer`\n      }, footerDom) : null;\n      const checkAllCheckbox = !showRemove && !pagination && this.getCheckBox({\n        filteredItems,\n        onItemSelectAll,\n        disabled,\n        prefixCls\n      });\n      let items;\n\n      if (showRemove) {\n        items = [\n        /* Remove Current Page */\n        pagination ? {\n          key: 'removeCurrent',\n          onClick: () => {\n            var _a;\n\n            const pageKeys = getEnabledItemKeys((((_a = this.defaultListBodyRef.current) === null || _a === void 0 ? void 0 : _a.getItems()) || []).map(entity => entity.item));\n            onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove(pageKeys);\n          },\n          label: removeCurrent\n        } : null,\n        /* Remove All */\n        {\n          key: 'removeAll',\n          onClick: () => {\n            onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove(getEnabledItemKeys(filteredItems));\n          },\n          label: removeAll\n        }].filter(item => item);\n      } else {\n        items = [{\n          key: 'selectAll',\n          onClick: () => {\n            const keys = getEnabledItemKeys(filteredItems);\n            onItemSelectAll(keys, keys.length !== checkedKeys.length);\n          },\n          label: selectAll\n        }, pagination ? {\n          key: 'selectCurrent',\n          onClick: () => {\n            var _a;\n\n            const pageItems = ((_a = this.defaultListBodyRef.current) === null || _a === void 0 ? void 0 : _a.getItems()) || [];\n            onItemSelectAll(getEnabledItemKeys(pageItems.map(entity => entity.item)), true);\n          },\n          label: selectCurrent\n        } : null, {\n          key: 'selectInvert',\n          onClick: () => {\n            var _a;\n\n            let availableKeys;\n\n            if (pagination) {\n              availableKeys = getEnabledItemKeys((((_a = this.defaultListBodyRef.current) === null || _a === void 0 ? void 0 : _a.getItems()) || []).map(entity => entity.item));\n            } else {\n              availableKeys = getEnabledItemKeys(filteredItems);\n            }\n\n            const checkedKeySet = new Set(checkedKeys);\n            const newCheckedKeys = [];\n            const newUnCheckedKeys = [];\n            availableKeys.forEach(key => {\n              if (checkedKeySet.has(key)) {\n                newUnCheckedKeys.push(key);\n              } else {\n                newCheckedKeys.push(key);\n              }\n            });\n            onItemSelectAll(newCheckedKeys, true);\n            onItemSelectAll(newUnCheckedKeys, false);\n          },\n          label: selectInvert\n        }];\n      }\n\n      const dropdown = /*#__PURE__*/React.createElement(Dropdown, {\n        className: `${prefixCls}-header-dropdown`,\n        menu: {\n          items\n        },\n        disabled: disabled\n      }, /*#__PURE__*/React.createElement(DownOutlined, null)); // ================================== Render ===================================\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: listCls,\n        style: style\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, showSelectAll ? /*#__PURE__*/React.createElement(React.Fragment, null, checkAllCheckbox, dropdown) : null, /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-header-selected`\n      }, this.getSelectAllLabel(checkedKeys.length, filteredItems.length)), /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-header-title`\n      }, titleText)), listBody, listFooter);\n    }\n  }]);\n\n  return TransferList;\n}(React.PureComponent);\n\nexport { TransferList as default };","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/transfer/list.js"],"names":["_classCallCheck","_createClass","_inherits","_createSuper","DownOutlined","classNames","omit","React","Checkbox","Dropdown","isValidElement","groupKeysMap","DefaultListBody","OmitProps","Search","defaultRender","isRenderResultPlainObject","result","Object","prototype","toString","call","getEnabledItemKeys","items","filter","data","disabled","map","key","TransferList","_React$PureComponent","_super","props","_this","defaultListBodyRef","createRef","handleFilter","e","target","value","filterValue","setState","handleClear","matchFilter","text","item","state","filterOption","includes","renderListBody","renderList","bodyContent","customize","createElement","assign","ref","renderItem","render","renderResult","isRenderResultPlain","renderedText","renderedEl","label","getSelectAllLabel","selectedCount","totalCount","itemsUnit","itemUnit","selectAllLabel","unit","Fragment","componentWillUnmount","clearTimeout","triggerScrollTimer","getCheckStatus","filteredItems","checkedKeys","length","checkedKeysMap","every","has","getFilteredItems","dataSource","filteredRenderItems","forEach","renderedItem","push","getListBody","prefixCls","searchPlaceholder","notFoundContent","showSearch","search","className","onChange","placeholder","selectedKeys","getNotFoundContent","contentIndex","direction","Array","isArray","bodyNode","getCheckBox","_ref","onItemSelectAll","checkStatus","checkedAll","checkAllCheckbox","checked","indeterminate","_ref2","titleText","footer","style","selectAll","selectCurrent","selectInvert","removeAll","removeCurrent","onItemRemove","showSelectAll","showRemove","pagination","footerDom","listCls","listBody","listFooter","onClick","_a","pageKeys","current","getItems","entity","keys","pageItems","availableKeys","checkedKeySet","Set","newCheckedKeys","newUnCheckedKeys","dropdown","menu","PureComponent","default"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport Checkbox from '../checkbox';\nimport Dropdown from '../dropdown';\nimport { isValidElement } from '../_util/reactNode';\nimport { groupKeysMap } from '../_util/transKeys';\nimport DefaultListBody, { OmitProps } from './ListBody';\nimport Search from './search';\nconst defaultRender = () => null;\nfunction isRenderResultPlainObject(result) {\n  return !!(result && !isValidElement(result) && Object.prototype.toString.call(result) === '[object Object]');\n}\nfunction getEnabledItemKeys(items) {\n  return items.filter(data => !data.disabled).map(data => data.key);\n}\nlet TransferList = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(TransferList, _React$PureComponent);\n  var _super = _createSuper(TransferList);\n  function TransferList(props) {\n    var _this;\n    _classCallCheck(this, TransferList);\n    _this = _super.call(this, props);\n    _this.defaultListBodyRef = /*#__PURE__*/React.createRef();\n    // =============================== Filter ===============================\n    _this.handleFilter = e => {\n      const {\n        handleFilter\n      } = _this.props;\n      const {\n        target: {\n          value: filterValue\n        }\n      } = e;\n      _this.setState({\n        filterValue\n      });\n      handleFilter(e);\n    };\n    _this.handleClear = () => {\n      const {\n        handleClear\n      } = _this.props;\n      _this.setState({\n        filterValue: ''\n      });\n      handleClear();\n    };\n    _this.matchFilter = (text, item) => {\n      const {\n        filterValue\n      } = _this.state;\n      const {\n        filterOption\n      } = _this.props;\n      if (filterOption) {\n        return filterOption(filterValue, item);\n      }\n      return text.includes(filterValue);\n    };\n    // =============================== Render ===============================\n    _this.renderListBody = (renderList, props) => {\n      let bodyContent = renderList ? renderList(props) : null;\n      const customize = !!bodyContent;\n      if (!customize) {\n        bodyContent = /*#__PURE__*/React.createElement(DefaultListBody, Object.assign({\n          ref: _this.defaultListBodyRef\n        }, props));\n      }\n      return {\n        customize,\n        bodyContent\n      };\n    };\n    _this.renderItem = item => {\n      const {\n        render = defaultRender\n      } = _this.props;\n      const renderResult = render(item);\n      const isRenderResultPlain = isRenderResultPlainObject(renderResult);\n      return {\n        renderedText: isRenderResultPlain ? renderResult.value : renderResult,\n        renderedEl: isRenderResultPlain ? renderResult.label : renderResult,\n        item\n      };\n    };\n    _this.getSelectAllLabel = (selectedCount, totalCount) => {\n      const {\n        itemsUnit,\n        itemUnit,\n        selectAllLabel\n      } = _this.props;\n      if (selectAllLabel) {\n        return typeof selectAllLabel === 'function' ? selectAllLabel({\n          selectedCount,\n          totalCount\n        }) : selectAllLabel;\n      }\n      const unit = totalCount > 1 ? itemsUnit : itemUnit;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, (selectedCount > 0 ? `${selectedCount}/` : '') + totalCount, \" \", unit);\n    };\n    _this.state = {\n      filterValue: ''\n    };\n    return _this;\n  }\n  _createClass(TransferList, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.triggerScrollTimer);\n    }\n  }, {\n    key: \"getCheckStatus\",\n    value: function getCheckStatus(filteredItems) {\n      const {\n        checkedKeys\n      } = this.props;\n      if (checkedKeys.length === 0) {\n        return 'none';\n      }\n      const checkedKeysMap = groupKeysMap(checkedKeys);\n      if (filteredItems.every(item => checkedKeysMap.has(item.key) || !!item.disabled)) {\n        return 'all';\n      }\n      return 'part';\n    }\n    // ================================ Item ================================\n  }, {\n    key: \"getFilteredItems\",\n    value: function getFilteredItems(dataSource, filterValue) {\n      const filteredItems = [];\n      const filteredRenderItems = [];\n      dataSource.forEach(item => {\n        const renderedItem = this.renderItem(item);\n        const {\n          renderedText\n        } = renderedItem;\n        // Filter skip\n        if (filterValue && !this.matchFilter(renderedText, item)) {\n          return null;\n        }\n        filteredItems.push(item);\n        filteredRenderItems.push(renderedItem);\n      });\n      return {\n        filteredItems,\n        filteredRenderItems\n      };\n    }\n  }, {\n    key: \"getListBody\",\n    value: function getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, filteredRenderItems, checkedKeys, renderList, showSearch, disabled) {\n      const search = showSearch ? /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-body-search-wrapper`\n      }, /*#__PURE__*/React.createElement(Search, {\n        prefixCls: `${prefixCls}-search`,\n        onChange: this.handleFilter,\n        handleClear: this.handleClear,\n        placeholder: searchPlaceholder,\n        value: filterValue,\n        disabled: disabled\n      })) : null;\n      const {\n        bodyContent,\n        customize\n      } = this.renderListBody(renderList, Object.assign(Object.assign({}, omit(this.props, OmitProps)), {\n        filteredItems,\n        filteredRenderItems,\n        selectedKeys: checkedKeys\n      }));\n      const getNotFoundContent = () => {\n        const contentIndex = this.props.direction === 'left' ? 0 : 1;\n        return Array.isArray(notFoundContent) ? notFoundContent[contentIndex] : notFoundContent;\n      };\n      let bodyNode;\n      // We should wrap customize list body in a classNamed div to use flex layout.\n      if (customize) {\n        bodyNode = /*#__PURE__*/React.createElement(\"div\", {\n          className: `${prefixCls}-body-customize-wrapper`\n        }, bodyContent);\n      } else {\n        bodyNode = filteredItems.length ? bodyContent : /*#__PURE__*/React.createElement(\"div\", {\n          className: `${prefixCls}-body-not-found`\n        }, getNotFoundContent());\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(showSearch ? `${prefixCls}-body ${prefixCls}-body-with-search` : `${prefixCls}-body`)\n      }, search, bodyNode);\n    }\n  }, {\n    key: \"getCheckBox\",\n    value: function getCheckBox(_ref) {\n      let {\n        filteredItems,\n        onItemSelectAll,\n        disabled,\n        prefixCls\n      } = _ref;\n      const checkStatus = this.getCheckStatus(filteredItems);\n      const checkedAll = checkStatus === 'all';\n      const checkAllCheckbox = /*#__PURE__*/React.createElement(Checkbox, {\n        disabled: disabled,\n        checked: checkedAll,\n        indeterminate: checkStatus === 'part',\n        className: `${prefixCls}-checkbox`,\n        onChange: () => {\n          // Only select enabled items\n          onItemSelectAll(filteredItems.filter(item => !item.disabled).map(_ref2 => {\n            let {\n              key\n            } = _ref2;\n            return key;\n          }), !checkedAll);\n        }\n      });\n      return checkAllCheckbox;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      const {\n        filterValue\n      } = this.state;\n      const {\n        prefixCls,\n        dataSource = [],\n        titleText = '',\n        checkedKeys,\n        disabled,\n        footer,\n        showSearch = false,\n        style,\n        searchPlaceholder,\n        notFoundContent,\n        selectAll,\n        selectCurrent,\n        selectInvert,\n        removeAll,\n        removeCurrent,\n        renderList,\n        onItemSelectAll,\n        onItemRemove,\n        showSelectAll = true,\n        showRemove,\n        pagination,\n        direction\n      } = this.props;\n      // Custom Layout\n      const footerDom = footer && (footer.length < 2 ? footer(this.props) : footer(this.props, {\n        direction\n      }));\n      const listCls = classNames(prefixCls, {\n        [`${prefixCls}-with-pagination`]: !!pagination,\n        [`${prefixCls}-with-footer`]: !!footerDom\n      });\n      // ====================== Get filtered, checked item list ======================\n      const {\n        filteredItems,\n        filteredRenderItems\n      } = this.getFilteredItems(dataSource, filterValue);\n      // ================================= List Body =================================\n      const listBody = this.getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, filteredRenderItems, checkedKeys, renderList, showSearch, disabled);\n      // ================================ List Footer ================================\n      const listFooter = footerDom ? /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-footer`\n      }, footerDom) : null;\n      const checkAllCheckbox = !showRemove && !pagination && this.getCheckBox({\n        filteredItems,\n        onItemSelectAll,\n        disabled,\n        prefixCls\n      });\n      let items;\n      if (showRemove) {\n        items = [/* Remove Current Page */\n        pagination ? {\n          key: 'removeCurrent',\n          onClick: () => {\n            var _a;\n            const pageKeys = getEnabledItemKeys((((_a = this.defaultListBodyRef.current) === null || _a === void 0 ? void 0 : _a.getItems()) || []).map(entity => entity.item));\n            onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove(pageKeys);\n          },\n          label: removeCurrent\n        } : null, /* Remove All */\n        {\n          key: 'removeAll',\n          onClick: () => {\n            onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove(getEnabledItemKeys(filteredItems));\n          },\n          label: removeAll\n        }].filter(item => item);\n      } else {\n        items = [{\n          key: 'selectAll',\n          onClick: () => {\n            const keys = getEnabledItemKeys(filteredItems);\n            onItemSelectAll(keys, keys.length !== checkedKeys.length);\n          },\n          label: selectAll\n        }, pagination ? {\n          key: 'selectCurrent',\n          onClick: () => {\n            var _a;\n            const pageItems = ((_a = this.defaultListBodyRef.current) === null || _a === void 0 ? void 0 : _a.getItems()) || [];\n            onItemSelectAll(getEnabledItemKeys(pageItems.map(entity => entity.item)), true);\n          },\n          label: selectCurrent\n        } : null, {\n          key: 'selectInvert',\n          onClick: () => {\n            var _a;\n            let availableKeys;\n            if (pagination) {\n              availableKeys = getEnabledItemKeys((((_a = this.defaultListBodyRef.current) === null || _a === void 0 ? void 0 : _a.getItems()) || []).map(entity => entity.item));\n            } else {\n              availableKeys = getEnabledItemKeys(filteredItems);\n            }\n            const checkedKeySet = new Set(checkedKeys);\n            const newCheckedKeys = [];\n            const newUnCheckedKeys = [];\n            availableKeys.forEach(key => {\n              if (checkedKeySet.has(key)) {\n                newUnCheckedKeys.push(key);\n              } else {\n                newCheckedKeys.push(key);\n              }\n            });\n            onItemSelectAll(newCheckedKeys, true);\n            onItemSelectAll(newUnCheckedKeys, false);\n          },\n          label: selectInvert\n        }];\n      }\n      const dropdown = /*#__PURE__*/React.createElement(Dropdown, {\n        className: `${prefixCls}-header-dropdown`,\n        menu: {\n          items\n        },\n        disabled: disabled\n      }, /*#__PURE__*/React.createElement(DownOutlined, null));\n      // ================================== Render ===================================\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: listCls,\n        style: style\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, showSelectAll ? /*#__PURE__*/React.createElement(React.Fragment, null, checkAllCheckbox, dropdown) : null, /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-header-selected`\n      }, this.getSelectAllLabel(checkedKeys.length, filteredItems.length)), /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-header-title`\n      }, titleText)), listBody, listFooter);\n    }\n  }]);\n  return TransferList;\n}(React.PureComponent);\nexport { TransferList as default };"]},"metadata":{},"sourceType":"module"}