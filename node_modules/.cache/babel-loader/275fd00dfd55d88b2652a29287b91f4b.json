{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nimport getArrowStyle, { MAX_VERTICAL_CONTENT_RADIUS } from '../../style/placementArrow'; // =============================== Base ===============================\n\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    lineHeight,\n    padding,\n    paddingXS,\n    borderRadius,\n    borderRadiusXS,\n    colorPrimary,\n    colorText,\n    colorFill,\n    sliderHeight,\n    sliderWidth,\n    boxShadow,\n    tourZIndexPopup,\n    fontSize,\n    colorBgContainer,\n    fontWeightStrong,\n    marginXS,\n    colorTextLightSolid,\n    tourBorderRadius,\n    colorWhite,\n    colorBgTextHover,\n    tourCloseSize,\n    motionDurationSlow\n  } = token;\n  return [{\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      color: colorText,\n      position: 'absolute',\n      zIndex: tourZIndexPopup,\n      display: 'block',\n      visibility: 'visible',\n      fontSize,\n      lineHeight,\n      width: 520,\n      '--antd-arrow-background-color': colorBgContainer,\n      '&-pure': {\n        maxWidth: '100%',\n        position: 'relative'\n      },\n      [`&${componentCls}-hidden`]: {\n        display: 'none'\n      },\n      // ============================= panel content ============================\n      [`${componentCls}-content`]: {\n        position: 'relative'\n      },\n      [`${componentCls}-inner`]: {\n        textAlign: 'start',\n        textDecoration: 'none',\n        borderRadius: tourBorderRadius,\n        boxShadow,\n        position: 'relative',\n        backgroundColor: colorBgContainer,\n        border: 'none',\n        backgroundClip: 'padding-box',\n        [`${componentCls}-close`]: {\n          position: 'absolute',\n          top: padding,\n          insetInlineEnd: padding,\n          color: token.colorIcon,\n          outline: 'none',\n          width: tourCloseSize,\n          height: tourCloseSize,\n          borderRadius: token.borderRadiusSM,\n          transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '&:hover': {\n            color: token.colorIconHover,\n            backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n          }\n        },\n        [`${componentCls}-cover`]: {\n          textAlign: 'center',\n          padding: `${padding + tourCloseSize + paddingXS}px ${padding}px 0`,\n          img: {\n            width: '100%'\n          }\n        },\n        [`${componentCls}-header`]: {\n          padding: `${padding}px ${padding}px ${paddingXS}px`,\n          [`${componentCls}-title`]: {\n            lineHeight,\n            fontSize,\n            fontWeight: fontWeightStrong\n          }\n        },\n        [`${componentCls}-description`]: {\n          padding: `0 ${padding}px`,\n          lineHeight,\n          wordWrap: 'break-word'\n        },\n        [`${componentCls}-footer`]: {\n          padding: `${paddingXS}px ${padding}px ${padding}px`,\n          textAlign: 'end',\n          borderRadius: `0 0 ${borderRadiusXS}px ${borderRadiusXS}px`,\n          display: 'flex',\n          justifyContent: 'space-between',\n          [`${componentCls}-sliders`]: {\n            display: 'inline-block',\n            [`${componentCls}-slider`]: {\n              width: `${sliderWidth}px`,\n              height: `${sliderHeight}px`,\n              display: 'inline-block',\n              borderRadius: '50%',\n              background: colorFill,\n              marginInlineEnd: sliderHeight,\n              '&-active': {\n                background: colorPrimary\n              }\n            }\n          },\n          [`${componentCls}-buttons button`]: {\n            marginInlineStart: marginXS\n          }\n        }\n      },\n      // =============================  primary type  ===========================\n      // `$` for panel, `&$` for pure panel\n      [`${componentCls}-primary, &${componentCls}-primary`]: {\n        '--antd-arrow-background-color': colorPrimary\n      },\n      [`${componentCls}-primary`]: {\n        [`${componentCls}-inner`]: {\n          color: colorTextLightSolid,\n          textAlign: 'start',\n          textDecoration: 'none',\n          backgroundColor: colorPrimary,\n          borderRadius,\n          boxShadow,\n          [`${componentCls}-close`]: {\n            color: colorTextLightSolid\n          },\n          [`${componentCls}-sliders`]: {\n            [`${componentCls}-slider`]: {\n              background: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n              '&-active': {\n                background: colorTextLightSolid\n              }\n            }\n          },\n          [`${componentCls}-prev-btn`]: {\n            color: colorTextLightSolid,\n            borderColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n            backgroundColor: colorPrimary,\n            '&:hover': {\n              backgroundColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n              borderColor: 'transparent'\n            }\n          },\n          [`${componentCls}-next-btn`]: {\n            color: colorPrimary,\n            borderColor: 'transparent',\n            background: colorWhite,\n            '&:hover': {\n              background: new TinyColor(colorBgTextHover).onBackground(colorWhite).toRgbString()\n            }\n          }\n        }\n      }\n    }),\n    // ============================= mask ===========================\n    [`${componentCls}-mask`]: {\n      [`${componentCls}-placeholder-animated`]: {\n        transition: `all ${motionDurationSlow}`\n      }\n    },\n    // =========== Limit left and right placement radius ==============\n    [['&-placement-left', '&-placement-leftTop', '&-placement-leftBottom', '&-placement-right', '&-placement-rightTop', '&-placement-rightBottom'].join(',')]: {\n      [`${componentCls}-inner`]: {\n        borderRadius: tourBorderRadius > MAX_VERTICAL_CONTENT_RADIUS ? MAX_VERTICAL_CONTENT_RADIUS : tourBorderRadius\n      }\n    }\n  }, // ============================= Arrow ===========================\n  getArrowStyle(token, {\n    colorBg: 'var(--antd-arrow-background-color)',\n    showArrowCls: '',\n    contentRadius: tourBorderRadius,\n    limitVerticalRadius: true\n  })];\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Tour', token => {\n  const {\n    borderRadiusLG,\n    fontSize,\n    lineHeight\n  } = token;\n  const TourToken = mergeToken(token, {\n    tourZIndexPopup: token.zIndexPopupBase + 70,\n    sliderWidth: 6,\n    sliderHeight: 6,\n    tourBorderRadius: borderRadiusLG,\n    tourCloseSize: fontSize * lineHeight\n  });\n  return [genBaseStyle(TourToken)];\n});","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/tour/style/index.js"],"names":["TinyColor","genComponentStyleHook","mergeToken","resetComponent","getArrowStyle","MAX_VERTICAL_CONTENT_RADIUS","genBaseStyle","token","componentCls","lineHeight","padding","paddingXS","borderRadius","borderRadiusXS","colorPrimary","colorText","colorFill","sliderHeight","sliderWidth","boxShadow","tourZIndexPopup","fontSize","colorBgContainer","fontWeightStrong","marginXS","colorTextLightSolid","tourBorderRadius","colorWhite","colorBgTextHover","tourCloseSize","motionDurationSlow","Object","assign","color","position","zIndex","display","visibility","width","maxWidth","textAlign","textDecoration","backgroundColor","border","backgroundClip","top","insetInlineEnd","colorIcon","outline","height","borderRadiusSM","transition","motionDurationMid","alignItems","justifyContent","colorIconHover","wireframe","colorFillContent","img","fontWeight","wordWrap","background","marginInlineEnd","marginInlineStart","setAlpha","toRgbString","borderColor","onBackground","join","colorBg","showArrowCls","contentRadius","limitVerticalRadius","borderRadiusLG","TourToken","zIndexPopupBase"],"mappings":"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","sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nimport getArrowStyle, { MAX_VERTICAL_CONTENT_RADIUS } from '../../style/placementArrow';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    lineHeight,\n    padding,\n    paddingXS,\n    borderRadius,\n    borderRadiusXS,\n    colorPrimary,\n    colorText,\n    colorFill,\n    sliderHeight,\n    sliderWidth,\n    boxShadow,\n    tourZIndexPopup,\n    fontSize,\n    colorBgContainer,\n    fontWeightStrong,\n    marginXS,\n    colorTextLightSolid,\n    tourBorderRadius,\n    colorWhite,\n    colorBgTextHover,\n    tourCloseSize,\n    motionDurationSlow\n  } = token;\n  return [{\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      color: colorText,\n      position: 'absolute',\n      zIndex: tourZIndexPopup,\n      display: 'block',\n      visibility: 'visible',\n      fontSize,\n      lineHeight,\n      width: 520,\n      '--antd-arrow-background-color': colorBgContainer,\n      '&-pure': {\n        maxWidth: '100%',\n        position: 'relative'\n      },\n      [`&${componentCls}-hidden`]: {\n        display: 'none'\n      },\n      // ============================= panel content ============================\n      [`${componentCls}-content`]: {\n        position: 'relative'\n      },\n      [`${componentCls}-inner`]: {\n        textAlign: 'start',\n        textDecoration: 'none',\n        borderRadius: tourBorderRadius,\n        boxShadow,\n        position: 'relative',\n        backgroundColor: colorBgContainer,\n        border: 'none',\n        backgroundClip: 'padding-box',\n        [`${componentCls}-close`]: {\n          position: 'absolute',\n          top: padding,\n          insetInlineEnd: padding,\n          color: token.colorIcon,\n          outline: 'none',\n          width: tourCloseSize,\n          height: tourCloseSize,\n          borderRadius: token.borderRadiusSM,\n          transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '&:hover': {\n            color: token.colorIconHover,\n            backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n          }\n        },\n        [`${componentCls}-cover`]: {\n          textAlign: 'center',\n          padding: `${padding + tourCloseSize + paddingXS}px ${padding}px 0`,\n          img: {\n            width: '100%'\n          }\n        },\n        [`${componentCls}-header`]: {\n          padding: `${padding}px ${padding}px ${paddingXS}px`,\n          [`${componentCls}-title`]: {\n            lineHeight,\n            fontSize,\n            fontWeight: fontWeightStrong\n          }\n        },\n        [`${componentCls}-description`]: {\n          padding: `0 ${padding}px`,\n          lineHeight,\n          wordWrap: 'break-word'\n        },\n        [`${componentCls}-footer`]: {\n          padding: `${paddingXS}px ${padding}px ${padding}px`,\n          textAlign: 'end',\n          borderRadius: `0 0 ${borderRadiusXS}px ${borderRadiusXS}px`,\n          display: 'flex',\n          justifyContent: 'space-between',\n          [`${componentCls}-sliders`]: {\n            display: 'inline-block',\n            [`${componentCls}-slider`]: {\n              width: `${sliderWidth}px`,\n              height: `${sliderHeight}px`,\n              display: 'inline-block',\n              borderRadius: '50%',\n              background: colorFill,\n              marginInlineEnd: sliderHeight,\n              '&-active': {\n                background: colorPrimary\n              }\n            }\n          },\n          [`${componentCls}-buttons button`]: {\n            marginInlineStart: marginXS\n          }\n        }\n      },\n      // =============================  primary type  ===========================\n      // `$` for panel, `&$` for pure panel\n      [`${componentCls}-primary, &${componentCls}-primary`]: {\n        '--antd-arrow-background-color': colorPrimary\n      },\n      [`${componentCls}-primary`]: {\n        [`${componentCls}-inner`]: {\n          color: colorTextLightSolid,\n          textAlign: 'start',\n          textDecoration: 'none',\n          backgroundColor: colorPrimary,\n          borderRadius,\n          boxShadow,\n          [`${componentCls}-close`]: {\n            color: colorTextLightSolid\n          },\n          [`${componentCls}-sliders`]: {\n            [`${componentCls}-slider`]: {\n              background: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n              '&-active': {\n                background: colorTextLightSolid\n              }\n            }\n          },\n          [`${componentCls}-prev-btn`]: {\n            color: colorTextLightSolid,\n            borderColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n            backgroundColor: colorPrimary,\n            '&:hover': {\n              backgroundColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n              borderColor: 'transparent'\n            }\n          },\n          [`${componentCls}-next-btn`]: {\n            color: colorPrimary,\n            borderColor: 'transparent',\n            background: colorWhite,\n            '&:hover': {\n              background: new TinyColor(colorBgTextHover).onBackground(colorWhite).toRgbString()\n            }\n          }\n        }\n      }\n    }),\n    // ============================= mask ===========================\n    [`${componentCls}-mask`]: {\n      [`${componentCls}-placeholder-animated`]: {\n        transition: `all ${motionDurationSlow}`\n      }\n    },\n    // =========== Limit left and right placement radius ==============\n    [['&-placement-left', '&-placement-leftTop', '&-placement-leftBottom', '&-placement-right', '&-placement-rightTop', '&-placement-rightBottom'].join(',')]: {\n      [`${componentCls}-inner`]: {\n        borderRadius: tourBorderRadius > MAX_VERTICAL_CONTENT_RADIUS ? MAX_VERTICAL_CONTENT_RADIUS : tourBorderRadius\n      }\n    }\n  },\n  // ============================= Arrow ===========================\n  getArrowStyle(token, {\n    colorBg: 'var(--antd-arrow-background-color)',\n    showArrowCls: '',\n    contentRadius: tourBorderRadius,\n    limitVerticalRadius: true\n  })];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tour', token => {\n  const {\n    borderRadiusLG,\n    fontSize,\n    lineHeight\n  } = token;\n  const TourToken = mergeToken(token, {\n    tourZIndexPopup: token.zIndexPopupBase + 70,\n    sliderWidth: 6,\n    sliderHeight: 6,\n    tourBorderRadius: borderRadiusLG,\n    tourCloseSize: fontSize * lineHeight\n  });\n  return [genBaseStyle(TourToken)];\n});"]},"metadata":{},"sourceType":"module"}