{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport classNames from 'classnames';\nimport RcUpload from 'rc-upload';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport warning from '../_util/warning';\nimport UploadList from './UploadList';\nimport { file2Obj, getFileItem, removeFileItem, updateFileList } from './utils';\nimport useStyle from './style';\nexport var LIST_IGNORE = \"__LIST_IGNORE_\".concat(Date.now(), \"__\");\n\nvar InternalUpload = function InternalUpload(props, ref) {\n  var fileList = props.fileList,\n      defaultFileList = props.defaultFileList,\n      onRemove = props.onRemove,\n      _props$showUploadList = props.showUploadList,\n      showUploadList = _props$showUploadList === void 0 ? true : _props$showUploadList,\n      _props$listType = props.listType,\n      listType = _props$listType === void 0 ? 'text' : _props$listType,\n      onPreview = props.onPreview,\n      onDownload = props.onDownload,\n      onChange = props.onChange,\n      onDrop = props.onDrop,\n      previewFile = props.previewFile,\n      customDisabled = props.disabled,\n      propLocale = props.locale,\n      iconRender = props.iconRender,\n      isImageUrl = props.isImageUrl,\n      progress = props.progress,\n      customizePrefixCls = props.prefixCls,\n      className = props.className,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'select' : _props$type,\n      children = props.children,\n      style = props.style,\n      itemRender = props.itemRender,\n      maxCount = props.maxCount,\n      _props$data = props.data,\n      data = _props$data === void 0 ? {} : _props$data,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$action = props.action,\n      action = _props$action === void 0 ? '' : _props$action,\n      _props$accept = props.accept,\n      accept = _props$accept === void 0 ? '' : _props$accept,\n      _props$supportServerR = props.supportServerRender,\n      supportServerRender = _props$supportServerR === void 0 ? true : _props$supportServerR; // ===================== Disabled =====================\n\n  var disabled = React.useContext(DisabledContext);\n  var mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n\n  var _useMergedState = useMergedState(defaultFileList || [], {\n    value: fileList,\n    postState: function postState(list) {\n      return list !== null && list !== void 0 ? list : [];\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedFileList = _useMergedState2[0],\n      setMergedFileList = _useMergedState2[1];\n\n  var _React$useState = React.useState('drop'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dragState = _React$useState2[0],\n      setDragState = _React$useState2[1];\n\n  var upload = React.useRef(null);\n  process.env.NODE_ENV !== \"production\" ? warning('fileList' in props || !('value' in props), 'Upload', '`value` is not a valid prop, do you mean `fileList`?') : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!('transformFile' in props), 'Upload', '`transformFile` is deprecated. Please use `beforeUpload` directly.') : void 0; // Control mode will auto fill file uid if not provided\n\n  React.useMemo(function () {\n    var timestamp = Date.now();\n    (fileList || []).forEach(function (file, index) {\n      if (!file.uid && !Object.isFrozen(file)) {\n        file.uid = \"__AUTO__\".concat(timestamp, \"_\").concat(index, \"__\");\n      }\n    });\n  }, [fileList]);\n\n  var onInternalChange = function onInternalChange(file, changedFileList, event) {\n    var cloneList = _toConsumableArray(changedFileList); // Cut to match count\n\n\n    if (maxCount === 1) {\n      cloneList = cloneList.slice(-1);\n    } else if (maxCount) {\n      cloneList = cloneList.slice(0, maxCount);\n    } // Prevent React18 auto batch since input[upload] trigger process at same time\n    // which makes fileList closure problem\n\n\n    flushSync(function () {\n      setMergedFileList(cloneList);\n    });\n    var changeInfo = {\n      file: file,\n      fileList: cloneList\n    };\n\n    if (event) {\n      changeInfo.event = event;\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo);\n  };\n\n  var mergedBeforeUpload = function mergedBeforeUpload(file, fileListArgs) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var beforeUpload, transformFile, parsedFile, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              beforeUpload = props.beforeUpload, transformFile = props.transformFile;\n              parsedFile = file;\n\n              if (!beforeUpload) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 5;\n              return beforeUpload(file, fileListArgs);\n\n            case 5:\n              result = _context.sent;\n\n              if (!(result === false)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 8:\n              // Hack for LIST_IGNORE, we add additional info to remove from the list\n              delete file[LIST_IGNORE];\n\n              if (!(result === LIST_IGNORE)) {\n                _context.next = 12;\n                break;\n              }\n\n              Object.defineProperty(file, LIST_IGNORE, {\n                value: true,\n                configurable: true\n              });\n              return _context.abrupt(\"return\", false);\n\n            case 12:\n              if (typeof result === 'object' && result) {\n                parsedFile = result;\n              }\n\n            case 13:\n              if (!transformFile) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 16;\n              return transformFile(parsedFile);\n\n            case 16:\n              parsedFile = _context.sent;\n\n            case 17:\n              return _context.abrupt(\"return\", parsedFile);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  var onBatchStart = function onBatchStart(batchFileInfoList) {\n    // Skip file which marked as `LIST_IGNORE`, these file will not add to file list\n    var filteredFileInfoList = batchFileInfoList.filter(function (info) {\n      return !info.file[LIST_IGNORE];\n    }); // Nothing to do since no file need upload\n\n    if (!filteredFileInfoList.length) {\n      return;\n    }\n\n    var objectFileList = filteredFileInfoList.map(function (info) {\n      return file2Obj(info.file);\n    }); // Concat new files with prev files\n\n    var newFileList = _toConsumableArray(mergedFileList);\n\n    objectFileList.forEach(function (fileObj) {\n      // Replace file if exist\n      newFileList = updateFileList(fileObj, newFileList);\n    });\n    objectFileList.forEach(function (fileObj, index) {\n      // Repeat trigger `onChange` event for compatible\n      var triggerFileObj = fileObj;\n\n      if (!filteredFileInfoList[index].parsedFile) {\n        // `beforeUpload` return false\n        var originFileObj = fileObj.originFileObj;\n        var clone;\n\n        try {\n          clone = new File([originFileObj], originFileObj.name, {\n            type: originFileObj.type\n          });\n        } catch (e) {\n          clone = new Blob([originFileObj], {\n            type: originFileObj.type\n          });\n          clone.name = originFileObj.name;\n          clone.lastModifiedDate = new Date();\n          clone.lastModified = new Date().getTime();\n        }\n\n        clone.uid = fileObj.uid;\n        triggerFileObj = clone;\n      } else {\n        // Inject `uploading` status\n        fileObj.status = 'uploading';\n      }\n\n      onInternalChange(triggerFileObj, newFileList);\n    });\n  };\n\n  var onSuccess = function onSuccess(response, file, xhr) {\n    try {\n      if (typeof response === 'string') {\n        response = JSON.parse(response);\n      }\n    } catch (e) {}\n    /* do nothing */\n    // removed\n\n\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.status = 'done';\n    targetItem.percent = 100;\n    targetItem.response = response;\n    targetItem.xhr = xhr;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n\n  var onProgress = function onProgress(e, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.status = 'uploading';\n    targetItem.percent = e.percent;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList, e);\n  };\n\n  var onError = function onError(error, response, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.error = error;\n    targetItem.response = response;\n    targetItem.status = 'error';\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n\n  var handleRemove = function handleRemove(file) {\n    var currentFile;\n    Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(function (ret) {\n      var _a; // Prevent removing file\n\n\n      if (ret === false) {\n        return;\n      }\n\n      var removedFileList = removeFileItem(file, mergedFileList);\n\n      if (removedFileList) {\n        currentFile = Object.assign(Object.assign({}, file), {\n          status: 'removed'\n        });\n        mergedFileList === null || mergedFileList === void 0 ? void 0 : mergedFileList.forEach(function (item) {\n          var matchKey = currentFile.uid !== undefined ? 'uid' : 'name';\n\n          if (item[matchKey] === currentFile[matchKey] && !Object.isFrozen(item)) {\n            item.status = 'removed';\n          }\n        });\n        (_a = upload.current) === null || _a === void 0 ? void 0 : _a.abort(currentFile);\n        onInternalChange(currentFile, removedFileList);\n      }\n    });\n  };\n\n  var onFileDrop = function onFileDrop(e) {\n    setDragState(e.type);\n\n    if (e.type === 'drop') {\n      onDrop === null || onDrop === void 0 ? void 0 : onDrop(e);\n    }\n  }; // Test needs\n\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      onBatchStart: onBatchStart,\n      onSuccess: onSuccess,\n      onProgress: onProgress,\n      onError: onError,\n      fileList: mergedFileList,\n      upload: upload.current\n    };\n  });\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('upload', customizePrefixCls);\n  var rcUploadProps = Object.assign(Object.assign({\n    onBatchStart: onBatchStart,\n    onError: onError,\n    onProgress: onProgress,\n    onSuccess: onSuccess\n  }, props), {\n    data: data,\n    multiple: multiple,\n    action: action,\n    accept: accept,\n    supportServerRender: supportServerRender,\n    prefixCls: prefixCls,\n    disabled: mergedDisabled,\n    beforeUpload: mergedBeforeUpload,\n    onChange: undefined\n  });\n  delete rcUploadProps.className;\n  delete rcUploadProps.style; // Remove id to avoid open by label when trigger is hidden\n  // !children: https://github.com/ant-design/ant-design/issues/14298\n  // disabled: https://github.com/ant-design/ant-design/issues/16478\n  //           https://github.com/ant-design/ant-design/issues/24197\n\n  if (!children || mergedDisabled) {\n    delete rcUploadProps.id;\n  }\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var renderUploadList = function renderUploadList(button, buttonVisible) {\n    return showUploadList ? /*#__PURE__*/React.createElement(LocaleReceiver, {\n      componentName: \"Upload\",\n      defaultLocale: defaultLocale.Upload\n    }, function (contextLocale) {\n      var _ref = typeof showUploadList === 'boolean' ? {} : showUploadList,\n          showRemoveIcon = _ref.showRemoveIcon,\n          showPreviewIcon = _ref.showPreviewIcon,\n          showDownloadIcon = _ref.showDownloadIcon,\n          removeIcon = _ref.removeIcon,\n          previewIcon = _ref.previewIcon,\n          downloadIcon = _ref.downloadIcon;\n\n      return /*#__PURE__*/React.createElement(UploadList, {\n        prefixCls: prefixCls,\n        listType: listType,\n        items: mergedFileList,\n        previewFile: previewFile,\n        onPreview: onPreview,\n        onDownload: onDownload,\n        onRemove: handleRemove,\n        showRemoveIcon: !mergedDisabled && showRemoveIcon,\n        showPreviewIcon: showPreviewIcon,\n        showDownloadIcon: showDownloadIcon,\n        removeIcon: removeIcon,\n        previewIcon: previewIcon,\n        downloadIcon: downloadIcon,\n        iconRender: iconRender,\n        locale: Object.assign(Object.assign({}, contextLocale), propLocale),\n        isImageUrl: isImageUrl,\n        progress: progress,\n        appendAction: button,\n        appendActionVisible: buttonVisible,\n        itemRender: itemRender\n      });\n    }) : button;\n  };\n\n  var rtlCls = _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl');\n\n  if (type === 'drag') {\n    var _classNames;\n\n    var dragCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-uploading\"), mergedFileList.some(function (file) {\n      return file.status === 'uploading';\n    })), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-hover\"), dragState === 'dragover'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), mergedDisabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(prefixCls, \"-wrapper\"), rtlCls, className, hashId)\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: dragCls,\n      onDrop: onFileDrop,\n      onDragOver: onFileDrop,\n      onDragLeave: onFileDrop,\n      style: style\n    }, /*#__PURE__*/React.createElement(RcUpload, Object.assign({}, rcUploadProps, {\n      ref: upload,\n      className: \"\".concat(prefixCls, \"-btn\")\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-drag-container\")\n    }, children))), renderUploadList()));\n  }\n\n  var uploadButtonCls = classNames(prefixCls, \"\".concat(prefixCls, \"-select\"), _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), mergedDisabled));\n\n  var renderUploadButton = function renderUploadButton(uploadButtonStyle) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: uploadButtonCls,\n      style: uploadButtonStyle\n    }, /*#__PURE__*/React.createElement(RcUpload, Object.assign({}, rcUploadProps, {\n      ref: upload\n    })));\n  };\n\n  var uploadButton = renderUploadButton(children ? undefined : {\n    display: 'none'\n  });\n\n  if (listType === 'picture-card') {\n    return wrapSSR( /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(prefixCls, \"-wrapper\"), \"\".concat(prefixCls, \"-picture-card-wrapper\"), rtlCls, className, hashId)\n    }, renderUploadList(uploadButton, !!children)));\n  }\n\n  return wrapSSR( /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"\".concat(prefixCls, \"-wrapper\"), rtlCls, className, hashId)\n  }, uploadButton, renderUploadList()));\n};\n\nvar Upload = /*#__PURE__*/React.forwardRef(InternalUpload);\n\nif (process.env.NODE_ENV !== 'production') {\n  Upload.displayName = 'Upload';\n}\n\nexport default Upload;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/upload/Upload.js"],"names":["_toConsumableArray","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","classNames","RcUpload","useMergedState","React","flushSync","ConfigContext","DisabledContext","LocaleReceiver","defaultLocale","warning","UploadList","file2Obj","getFileItem","removeFileItem","updateFileList","useStyle","LIST_IGNORE","Date","now","InternalUpload","props","ref","fileList","defaultFileList","onRemove","showUploadList","listType","onPreview","onDownload","onChange","onDrop","previewFile","customDisabled","disabled","propLocale","locale","iconRender","isImageUrl","progress","customizePrefixCls","prefixCls","className","type","children","style","itemRender","maxCount","data","multiple","action","accept","supportServerRender","useContext","mergedDisabled","postState","list","mergedFileList","setMergedFileList","useState","dragState","setDragState","upload","useRef","process","env","NODE_ENV","useMemo","timestamp","forEach","file","index","uid","Object","isFrozen","onInternalChange","changedFileList","event","cloneList","slice","changeInfo","mergedBeforeUpload","fileListArgs","beforeUpload","transformFile","parsedFile","defineProperty","configurable","onBatchStart","batchFileInfoList","filteredFileInfoList","filter","info","length","objectFileList","map","newFileList","fileObj","triggerFileObj","originFileObj","clone","File","name","Blob","lastModifiedDate","lastModified","getTime","status","onSuccess","response","xhr","JSON","parse","targetItem","percent","nextFileList","onProgress","onError","error","handleRemove","currentFile","ret","_a","removedFileList","assign","item","matchKey","undefined","current","abort","onFileDrop","useImperativeHandle","getPrefixCls","direction","rcUploadProps","id","wrapSSR","hashId","renderUploadList","button","buttonVisible","createElement","componentName","Upload","contextLocale","showRemoveIcon","showPreviewIcon","showDownloadIcon","removeIcon","previewIcon","downloadIcon","items","appendAction","appendActionVisible","rtlCls","dragCls","some","onDragOver","onDragLeave","uploadButtonCls","renderUploadButton","uploadButtonStyle","uploadButton","display","forwardRef","displayName"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport classNames from 'classnames';\nimport RcUpload from 'rc-upload';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport warning from '../_util/warning';\nimport UploadList from './UploadList';\nimport { file2Obj, getFileItem, removeFileItem, updateFileList } from './utils';\nimport useStyle from './style';\nexport const LIST_IGNORE = `__LIST_IGNORE_${Date.now()}__`;\nconst InternalUpload = (props, ref) => {\n  const {\n    fileList,\n    defaultFileList,\n    onRemove,\n    showUploadList = true,\n    listType = 'text',\n    onPreview,\n    onDownload,\n    onChange,\n    onDrop,\n    previewFile,\n    disabled: customDisabled,\n    locale: propLocale,\n    iconRender,\n    isImageUrl,\n    progress,\n    prefixCls: customizePrefixCls,\n    className,\n    type = 'select',\n    children,\n    style,\n    itemRender,\n    maxCount,\n    data = {},\n    multiple = false,\n    action = '',\n    accept = '',\n    supportServerRender = true\n  } = props;\n  // ===================== Disabled =====================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const [mergedFileList, setMergedFileList] = useMergedState(defaultFileList || [], {\n    value: fileList,\n    postState: list => list !== null && list !== void 0 ? list : []\n  });\n  const [dragState, setDragState] = React.useState('drop');\n  const upload = React.useRef(null);\n  process.env.NODE_ENV !== \"production\" ? warning('fileList' in props || !('value' in props), 'Upload', '`value` is not a valid prop, do you mean `fileList`?') : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!('transformFile' in props), 'Upload', '`transformFile` is deprecated. Please use `beforeUpload` directly.') : void 0;\n  // Control mode will auto fill file uid if not provided\n  React.useMemo(() => {\n    const timestamp = Date.now();\n    (fileList || []).forEach((file, index) => {\n      if (!file.uid && !Object.isFrozen(file)) {\n        file.uid = `__AUTO__${timestamp}_${index}__`;\n      }\n    });\n  }, [fileList]);\n  const onInternalChange = (file, changedFileList, event) => {\n    let cloneList = _toConsumableArray(changedFileList);\n    // Cut to match count\n    if (maxCount === 1) {\n      cloneList = cloneList.slice(-1);\n    } else if (maxCount) {\n      cloneList = cloneList.slice(0, maxCount);\n    }\n    // Prevent React18 auto batch since input[upload] trigger process at same time\n    // which makes fileList closure problem\n    flushSync(() => {\n      setMergedFileList(cloneList);\n    });\n    const changeInfo = {\n      file: file,\n      fileList: cloneList\n    };\n    if (event) {\n      changeInfo.event = event;\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo);\n  };\n  const mergedBeforeUpload = (file, fileListArgs) => __awaiter(void 0, void 0, void 0, function* () {\n    const {\n      beforeUpload,\n      transformFile\n    } = props;\n    let parsedFile = file;\n    if (beforeUpload) {\n      const result = yield beforeUpload(file, fileListArgs);\n      if (result === false) {\n        return false;\n      }\n      // Hack for LIST_IGNORE, we add additional info to remove from the list\n      delete file[LIST_IGNORE];\n      if (result === LIST_IGNORE) {\n        Object.defineProperty(file, LIST_IGNORE, {\n          value: true,\n          configurable: true\n        });\n        return false;\n      }\n      if (typeof result === 'object' && result) {\n        parsedFile = result;\n      }\n    }\n    if (transformFile) {\n      parsedFile = yield transformFile(parsedFile);\n    }\n    return parsedFile;\n  });\n  const onBatchStart = batchFileInfoList => {\n    // Skip file which marked as `LIST_IGNORE`, these file will not add to file list\n    const filteredFileInfoList = batchFileInfoList.filter(info => !info.file[LIST_IGNORE]);\n    // Nothing to do since no file need upload\n    if (!filteredFileInfoList.length) {\n      return;\n    }\n    const objectFileList = filteredFileInfoList.map(info => file2Obj(info.file));\n    // Concat new files with prev files\n    let newFileList = _toConsumableArray(mergedFileList);\n    objectFileList.forEach(fileObj => {\n      // Replace file if exist\n      newFileList = updateFileList(fileObj, newFileList);\n    });\n    objectFileList.forEach((fileObj, index) => {\n      // Repeat trigger `onChange` event for compatible\n      let triggerFileObj = fileObj;\n      if (!filteredFileInfoList[index].parsedFile) {\n        // `beforeUpload` return false\n        const {\n          originFileObj\n        } = fileObj;\n        let clone;\n        try {\n          clone = new File([originFileObj], originFileObj.name, {\n            type: originFileObj.type\n          });\n        } catch (e) {\n          clone = new Blob([originFileObj], {\n            type: originFileObj.type\n          });\n          clone.name = originFileObj.name;\n          clone.lastModifiedDate = new Date();\n          clone.lastModified = new Date().getTime();\n        }\n        clone.uid = fileObj.uid;\n        triggerFileObj = clone;\n      } else {\n        // Inject `uploading` status\n        fileObj.status = 'uploading';\n      }\n      onInternalChange(triggerFileObj, newFileList);\n    });\n  };\n  const onSuccess = (response, file, xhr) => {\n    try {\n      if (typeof response === 'string') {\n        response = JSON.parse(response);\n      }\n    } catch (e) {\n      /* do nothing */\n    }\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n    const targetItem = file2Obj(file);\n    targetItem.status = 'done';\n    targetItem.percent = 100;\n    targetItem.response = response;\n    targetItem.xhr = xhr;\n    const nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n  const onProgress = (e, file) => {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n    const targetItem = file2Obj(file);\n    targetItem.status = 'uploading';\n    targetItem.percent = e.percent;\n    const nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList, e);\n  };\n  const onError = (error, response, file) => {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n    const targetItem = file2Obj(file);\n    targetItem.error = error;\n    targetItem.response = response;\n    targetItem.status = 'error';\n    const nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n  const handleRemove = file => {\n    let currentFile;\n    Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(ret => {\n      var _a;\n      // Prevent removing file\n      if (ret === false) {\n        return;\n      }\n      const removedFileList = removeFileItem(file, mergedFileList);\n      if (removedFileList) {\n        currentFile = Object.assign(Object.assign({}, file), {\n          status: 'removed'\n        });\n        mergedFileList === null || mergedFileList === void 0 ? void 0 : mergedFileList.forEach(item => {\n          const matchKey = currentFile.uid !== undefined ? 'uid' : 'name';\n          if (item[matchKey] === currentFile[matchKey] && !Object.isFrozen(item)) {\n            item.status = 'removed';\n          }\n        });\n        (_a = upload.current) === null || _a === void 0 ? void 0 : _a.abort(currentFile);\n        onInternalChange(currentFile, removedFileList);\n      }\n    });\n  };\n  const onFileDrop = e => {\n    setDragState(e.type);\n    if (e.type === 'drop') {\n      onDrop === null || onDrop === void 0 ? void 0 : onDrop(e);\n    }\n  };\n  // Test needs\n  React.useImperativeHandle(ref, () => ({\n    onBatchStart,\n    onSuccess,\n    onProgress,\n    onError,\n    fileList: mergedFileList,\n    upload: upload.current\n  }));\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('upload', customizePrefixCls);\n  const rcUploadProps = Object.assign(Object.assign({\n    onBatchStart,\n    onError,\n    onProgress,\n    onSuccess\n  }, props), {\n    data,\n    multiple,\n    action,\n    accept,\n    supportServerRender,\n    prefixCls,\n    disabled: mergedDisabled,\n    beforeUpload: mergedBeforeUpload,\n    onChange: undefined\n  });\n  delete rcUploadProps.className;\n  delete rcUploadProps.style;\n  // Remove id to avoid open by label when trigger is hidden\n  // !children: https://github.com/ant-design/ant-design/issues/14298\n  // disabled: https://github.com/ant-design/ant-design/issues/16478\n  //           https://github.com/ant-design/ant-design/issues/24197\n  if (!children || mergedDisabled) {\n    delete rcUploadProps.id;\n  }\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const renderUploadList = (button, buttonVisible) => showUploadList ? /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Upload\",\n    defaultLocale: defaultLocale.Upload\n  }, contextLocale => {\n    const {\n      showRemoveIcon,\n      showPreviewIcon,\n      showDownloadIcon,\n      removeIcon,\n      previewIcon,\n      downloadIcon\n    } = typeof showUploadList === 'boolean' ? {} : showUploadList;\n    return /*#__PURE__*/React.createElement(UploadList, {\n      prefixCls: prefixCls,\n      listType: listType,\n      items: mergedFileList,\n      previewFile: previewFile,\n      onPreview: onPreview,\n      onDownload: onDownload,\n      onRemove: handleRemove,\n      showRemoveIcon: !mergedDisabled && showRemoveIcon,\n      showPreviewIcon: showPreviewIcon,\n      showDownloadIcon: showDownloadIcon,\n      removeIcon: removeIcon,\n      previewIcon: previewIcon,\n      downloadIcon: downloadIcon,\n      iconRender: iconRender,\n      locale: Object.assign(Object.assign({}, contextLocale), propLocale),\n      isImageUrl: isImageUrl,\n      progress: progress,\n      appendAction: button,\n      appendActionVisible: buttonVisible,\n      itemRender: itemRender\n    });\n  }) : button;\n  const rtlCls = {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  };\n  if (type === 'drag') {\n    const dragCls = classNames(prefixCls, {\n      [`${prefixCls}-drag`]: true,\n      [`${prefixCls}-drag-uploading`]: mergedFileList.some(file => file.status === 'uploading'),\n      [`${prefixCls}-drag-hover`]: dragState === 'dragover',\n      [`${prefixCls}-disabled`]: mergedDisabled,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(`${prefixCls}-wrapper`, rtlCls, className, hashId)\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: dragCls,\n      onDrop: onFileDrop,\n      onDragOver: onFileDrop,\n      onDragLeave: onFileDrop,\n      style: style\n    }, /*#__PURE__*/React.createElement(RcUpload, Object.assign({}, rcUploadProps, {\n      ref: upload,\n      className: `${prefixCls}-btn`\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-drag-container`\n    }, children))), renderUploadList()));\n  }\n  const uploadButtonCls = classNames(prefixCls, `${prefixCls}-select`, {\n    [`${prefixCls}-disabled`]: mergedDisabled\n  });\n  const renderUploadButton = uploadButtonStyle => /*#__PURE__*/React.createElement(\"div\", {\n    className: uploadButtonCls,\n    style: uploadButtonStyle\n  }, /*#__PURE__*/React.createElement(RcUpload, Object.assign({}, rcUploadProps, {\n    ref: upload\n  })));\n  const uploadButton = renderUploadButton(children ? undefined : {\n    display: 'none'\n  });\n  if (listType === 'picture-card') {\n    return wrapSSR( /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(`${prefixCls}-wrapper`, `${prefixCls}-picture-card-wrapper`, rtlCls, className, hashId)\n    }, renderUploadList(uploadButton, !!children)));\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${prefixCls}-wrapper`, rtlCls, className, hashId)\n  }, uploadButton, renderUploadList()));\n};\nconst Upload = /*#__PURE__*/React.forwardRef(InternalUpload);\nif (process.env.NODE_ENV !== 'production') {\n  Upload.displayName = 'Upload';\n}\nexport default Upload;"]},"metadata":{},"sourceType":"module"}