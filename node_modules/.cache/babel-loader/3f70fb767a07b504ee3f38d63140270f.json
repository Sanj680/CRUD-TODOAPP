{"ast":null,"code":"import classNames from 'classnames';\nimport RcTable, { Summary } from 'rc-table';\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\nimport { INTERNAL_HOOKS } from \"rc-table/es/Table\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider/context';\nimport defaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport SizeContext from '../config-provider/SizeContext';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport defaultLocale from '../locale/en_US';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport scrollTo from '../_util/scrollTo';\nimport warning from '../_util/warning';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport renderExpandIcon from './ExpandIcon';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useSelection, { SELECTION_ALL, SELECTION_COLUMN, SELECTION_INVERT, SELECTION_NONE } from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport useStyle from './style';\nconst EMPTY_LIST = [];\n\nfunction InternalTable(props, ref) {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    style,\n    size: customizeSize,\n    bordered,\n    dropdownPrefixCls: customizeDropdownPrefixCls,\n    dataSource,\n    pagination,\n    rowSelection,\n    rowKey = 'key',\n    rowClassName,\n    columns,\n    children,\n    childrenColumnName: legacyChildrenColumnName,\n    onChange,\n    getPopupContainer,\n    loading,\n    expandIcon,\n    expandable,\n    expandedRowRender,\n    expandIconColumnIndex,\n    indentSize,\n    scroll,\n    sortDirections,\n    locale,\n    showSorterTooltip = true\n  } = props;\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'Table', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\n  }\n\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\n  const screens = useBreakpoint(needResponsive);\n  const mergedColumns = React.useMemo(() => {\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n  }, [baseColumns, screens]);\n  const tableProps = omit(props, ['className', 'style', 'columns']);\n  const size = React.useContext(SizeContext);\n  const {\n    locale: contextLocale = defaultLocale,\n    renderEmpty,\n    direction\n  } = React.useContext(ConfigContext);\n  const mergedSize = customizeSize || size;\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n  const rawData = dataSource || EMPTY_LIST;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n  const mergedExpandable = Object.assign({\n    childrenColumnName: legacyChildrenColumnName,\n    expandIconColumnIndex\n  }, expandable);\n  const {\n    childrenColumnName = 'children'\n  } = mergedExpandable;\n  const expandType = React.useMemo(() => {\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\n      return 'nest';\n    }\n\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n\n    return null;\n  }, [rawData]);\n  const internalRefs = {\n    body: React.useRef()\n  }; // ============================ RowKey ============================\n\n  const getRowKey = React.useMemo(() => {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\n  }, [rowKey]);\n  const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey); // ============================ Events =============================\n\n  const changeEventInfo = {};\n\n  const triggerOnChange = function (info, action) {\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n\n    if (reset) {\n      changeEventInfo.resetPagination(); // Reset event param\n\n      if (changeInfo.pagination.current) {\n        changeInfo.pagination.current = 1;\n      } // Trigger pagination events\n\n\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, changeInfo.pagination.pageSize);\n      }\n    }\n\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      scrollTo(0, {\n        getContainer: () => internalRefs.body.current\n      });\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n      action\n    });\n  };\n  /**\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n   * state out and then put it back to title render. Move these code into `hooks` but still too\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\n   * version.\n   */\n  // ============================ Sorter =============================\n\n\n  const onSorterChange = (sorter, sorterStates) => {\n    triggerOnChange({\n      sorter,\n      sorterStates\n    }, 'sort', false);\n  };\n\n  const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n    prefixCls,\n    mergedColumns,\n    onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend'],\n    tableLocale,\n    showSorterTooltip\n  });\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates; // ============================ Filter ============================\n\n  const onFilterChange = (filters, filterStates) => {\n    triggerOnChange({\n      filters,\n      filterStates\n    }, 'filter', true);\n  };\n\n  const [transformFilterColumns, filterStates, filters] = useFilter({\n    prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer\n  });\n  const mergedData = getFilterData(sortedData, filterStates);\n  changeEventInfo.filters = filters;\n  changeEventInfo.filterStates = filterStates; // ============================ Column ============================\n\n  const columnTitleProps = React.useMemo(() => {\n    const mergedFilters = {};\n    Object.keys(filters).forEach(filterKey => {\n      if (filters[filterKey] !== null) {\n        mergedFilters[filterKey] = filters[filterKey];\n      }\n    });\n    return Object.assign(Object.assign({}, sorterTitleProps), {\n      filters: mergedFilters\n    });\n  }, [sorterTitleProps, filters]);\n  const [transformTitleColumns] = useTitleColumns(columnTitleProps); // ========================== Pagination ==========================\n\n  const onPaginationChange = (current, pageSize) => {\n    triggerOnChange({\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\n        current,\n        pageSize\n      })\n    }, 'paginate');\n  };\n\n  const [mergedPagination, resetPagination] = usePagination(mergedData.length, pagination, onPaginationChange);\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(pagination, mergedPagination);\n  changeEventInfo.resetPagination = resetPagination; // ============================= Data =============================\n\n  const pageData = React.useMemo(() => {\n    if (pagination === false || !mergedPagination.pageSize) {\n      return mergedData;\n    }\n\n    const {\n      current = 1,\n      total,\n      pageSize = DEFAULT_PAGE_SIZE\n    } = mergedPagination;\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'Table', '`current` should be positive number.') : void 0; // Dynamic table data\n\n    if (mergedData.length < total) {\n      if (mergedData.length > pageSize) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\n      }\n\n      return mergedData;\n    }\n\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]); // ========================== Selections ==========================\n\n  const [transformSelectionColumns, selectedKeySet] = useSelection(rowSelection, {\n    prefixCls,\n    data: mergedData,\n    pageData,\n    getRowKey,\n    getRecordByKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer\n  });\n\n  const internalRowClassName = (record, index, indent) => {\n    let mergedRowClassName;\n\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = classNames(rowClassName);\n    }\n\n    return classNames({\n      [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index))\n    }, mergedRowClassName);\n  }; // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n\n\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon; // Customize expandable icon\n\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale); // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  } // Indent size\n\n\n  if (typeof mergedExpandable.indentSize !== 'number') {\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\n  } // ============================ Render ============================\n\n\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  let topPaginationNode;\n  let bottomPaginationNode;\n\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\n    let paginationSize;\n\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n\n    const renderPagination = position => /*#__PURE__*/React.createElement(Pagination, Object.assign({}, mergedPagination, {\n      className: classNames(`${prefixCls}-pagination ${prefixCls}-pagination-${position}`, mergedPagination.className),\n      size: paginationSize\n    }));\n\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\n    const {\n      position\n    } = mergedPagination;\n\n    if (position !== null && Array.isArray(position)) {\n      const topPos = position.find(p => p.includes('top'));\n      const bottomPos = position.find(p => p.includes('bottom'));\n      const isDisable = position.every(p => `${p}` === 'none');\n\n      if (!topPos && !bottomPos && !isDisable) {\n        bottomPaginationNode = renderPagination(defaultPosition);\n      }\n\n      if (topPos) {\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n      }\n\n      if (bottomPos) {\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n      }\n    } else {\n      bottomPaginationNode = renderPagination(defaultPosition);\n    }\n  } // >>>>>>>>> Spinning\n\n\n  let spinProps;\n\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else if (typeof loading === 'object') {\n    spinProps = Object.assign({\n      spinning: true\n    }, loading);\n  } // Style\n\n\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const wrapperClassNames = classNames(`${prefixCls}-wrapper`, {\n    [`${prefixCls}-wrapper-rtl`]: direction === 'rtl'\n  }, className, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: wrapperClassNames,\n    style: style\n  }, /*#__PURE__*/React.createElement(Spin, Object.assign({\n    spinning: false\n  }, spinProps), topPaginationNode, /*#__PURE__*/React.createElement(RcTable, Object.assign({}, tableProps, {\n    columns: mergedColumns,\n    direction: direction,\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-middle`]: mergedSize === 'middle',\n      [`${prefixCls}-small`]: mergedSize === 'small',\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-empty`]: rawData.length === 0\n    }),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: locale && locale.emptyText || (renderEmpty || defaultRenderEmpty)('Table'),\n    // Internal\n    internalHooks: INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns\n  })), bottomPaginationNode)));\n}\n\nconst ForwardTable = /*#__PURE__*/React.forwardRef(InternalTable);\nconst Table = ForwardTable;\nTable.SELECTION_COLUMN = SELECTION_COLUMN;\nTable.EXPAND_COLUMN = RcTable.EXPAND_COLUMN;\nTable.SELECTION_ALL = SELECTION_ALL;\nTable.SELECTION_INVERT = SELECTION_INVERT;\nTable.SELECTION_NONE = SELECTION_NONE;\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nTable.Summary = Summary;\nexport default Table;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/table/Table.js"],"names":["classNames","RcTable","Summary","convertChildrenToColumns","INTERNAL_HOOKS","omit","React","ConfigContext","defaultRenderEmpty","SizeContext","useBreakpoint","defaultLocale","Pagination","Spin","scrollTo","warning","Column","ColumnGroup","renderExpandIcon","useFilter","getFilterData","useLazyKVMap","usePagination","DEFAULT_PAGE_SIZE","getPaginationParam","useSelection","SELECTION_ALL","SELECTION_COLUMN","SELECTION_INVERT","SELECTION_NONE","useSorter","getSortData","useTitleColumns","useStyle","EMPTY_LIST","InternalTable","props","ref","prefixCls","customizePrefixCls","className","style","size","customizeSize","bordered","dropdownPrefixCls","customizeDropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","children","childrenColumnName","legacyChildrenColumnName","onChange","getPopupContainer","loading","expandIcon","expandable","expandedRowRender","expandIconColumnIndex","indentSize","scroll","sortDirections","locale","showSorterTooltip","process","env","NODE_ENV","length","baseColumns","useMemo","needResponsive","some","col","responsive","screens","mergedColumns","matched","Set","Object","keys","filter","m","c","r","has","tableProps","useContext","contextLocale","renderEmpty","direction","mergedSize","tableLocale","assign","Table","rawData","getPrefixCls","mergedExpandable","expandType","item","internalRefs","body","useRef","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","action","reset","arguments","undefined","changeInfo","resetPagination","current","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","transformFilterColumns","mergedData","columnTitleProps","mergedFilters","forEach","filterKey","transformTitleColumns","onPaginationChange","mergedPagination","pageData","total","slice","transformSelectionColumns","selectedKeySet","data","internalRowClassName","index","indent","mergedRowClassName","__PARENT_RENDER_ICON__","transformColumns","useCallback","innerColumns","topPaginationNode","bottomPaginationNode","paginationSize","renderPagination","position","createElement","defaultPosition","Array","isArray","topPos","find","p","includes","bottomPos","isDisable","every","toLowerCase","replace","spinProps","spinning","wrapSSR","hashId","wrapperClassNames","emptyText","internalHooks","ForwardTable","forwardRef","EXPAND_COLUMN"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,IAAkBC,OAAlB,QAAiC,UAAjC;AACA,SAASC,wBAAT,QAAyC,8BAAzC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAOC,SAAP,IAAoBC,aAApB,QAAyC,mBAAzC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,aAAP,IAAwBC,iBAAxB,EAA2CC,kBAA3C,QAAqE,uBAArE;AACA,OAAOC,YAAP,IAAuBC,aAAvB,EAAsCC,gBAAtC,EAAwDC,gBAAxD,EAA0EC,cAA1E,QAAgG,sBAAhG;AACA,OAAOC,SAAP,IAAoBC,WAApB,QAAuC,mBAAvC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,MAAMC,UAAU,GAAG,EAAnB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,GAA9B,EAAmC;AACjC,QAAM;AACJC,IAAAA,SAAS,EAAEC,kBADP;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,IAAI,EAAEC,aAJF;AAKJC,IAAAA,QALI;AAMJC,IAAAA,iBAAiB,EAAEC,0BANf;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,UARI;AASJC,IAAAA,YATI;AAUJC,IAAAA,MAAM,GAAG,KAVL;AAWJC,IAAAA,YAXI;AAYJC,IAAAA,OAZI;AAaJC,IAAAA,QAbI;AAcJC,IAAAA,kBAAkB,EAAEC,wBAdhB;AAeJC,IAAAA,QAfI;AAgBJC,IAAAA,iBAhBI;AAiBJC,IAAAA,OAjBI;AAkBJC,IAAAA,UAlBI;AAmBJC,IAAAA,UAnBI;AAoBJC,IAAAA,iBApBI;AAqBJC,IAAAA,qBArBI;AAsBJC,IAAAA,UAtBI;AAuBJC,IAAAA,MAvBI;AAwBJC,IAAAA,cAxBI;AAyBJC,IAAAA,MAzBI;AA0BJC,IAAAA,iBAAiB,GAAG;AA1BhB,MA2BF/B,KA3BJ;;AA4BA,MAAIgC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvD,OAAO,CAAC,EAAE,OAAOmC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACqB,MAAP,GAAgB,CAAlD,CAAD,EAAuD,OAAvD,EAAgE,4GAAhE,CAA/C,GAA+N,KAAK,CAApO;AACD;;AACD,QAAMC,WAAW,GAAGlE,KAAK,CAACmE,OAAN,CAAc,MAAMrB,OAAO,IAAIjD,wBAAwB,CAACkD,QAAD,CAAvD,EAAmE,CAACD,OAAD,EAAUC,QAAV,CAAnE,CAApB;AACA,QAAMqB,cAAc,GAAGpE,KAAK,CAACmE,OAAN,CAAc,MAAMD,WAAW,CAACG,IAAZ,CAAiBC,GAAG,IAAIA,GAAG,CAACC,UAA5B,CAApB,EAA6D,CAACL,WAAD,CAA7D,CAAvB;AACA,QAAMM,OAAO,GAAGpE,aAAa,CAACgE,cAAD,CAA7B;AACA,QAAMK,aAAa,GAAGzE,KAAK,CAACmE,OAAN,CAAc,MAAM;AACxC,UAAMO,OAAO,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBM,MAArB,CAA4BC,CAAC,IAAIP,OAAO,CAACO,CAAD,CAAxC,CAAR,CAAhB;AACA,WAAOb,WAAW,CAACY,MAAZ,CAAmBE,CAAC,IAAI,CAACA,CAAC,CAACT,UAAH,IAAiBS,CAAC,CAACT,UAAF,CAAaF,IAAb,CAAkBY,CAAC,IAAIP,OAAO,CAACQ,GAAR,CAAYD,CAAZ,CAAvB,CAAzC,CAAP;AACD,GAHqB,EAGnB,CAACf,WAAD,EAAcM,OAAd,CAHmB,CAAtB;AAIA,QAAMW,UAAU,GAAGpF,IAAI,CAAC+B,KAAD,EAAQ,CAAC,WAAD,EAAc,OAAd,EAAuB,SAAvB,CAAR,CAAvB;AACA,QAAMM,IAAI,GAAGpC,KAAK,CAACoF,UAAN,CAAiBjF,WAAjB,CAAb;AACA,QAAM;AACJyD,IAAAA,MAAM,EAAEyB,aAAa,GAAGhF,aADpB;AAEJiF,IAAAA,WAFI;AAGJC,IAAAA;AAHI,MAIFvF,KAAK,CAACoF,UAAN,CAAiBnF,aAAjB,CAJJ;AAKA,QAAMuF,UAAU,GAAGnD,aAAa,IAAID,IAApC;AACA,QAAMqD,WAAW,GAAGb,MAAM,CAACc,MAAP,CAAcd,MAAM,CAACc,MAAP,CAAc,EAAd,EAAkBL,aAAa,CAACM,KAAhC,CAAd,EAAsD/B,MAAtD,CAApB;AACA,QAAMgC,OAAO,GAAGnD,UAAU,IAAIb,UAA9B;AACA,QAAM;AACJiE,IAAAA;AADI,MAEF7F,KAAK,CAACoF,UAAN,CAAiBnF,aAAjB,CAFJ;AAGA,QAAM+B,SAAS,GAAG6D,YAAY,CAAC,OAAD,EAAU5D,kBAAV,CAA9B;AACA,QAAMM,iBAAiB,GAAGsD,YAAY,CAAC,UAAD,EAAarD,0BAAb,CAAtC;AACA,QAAMsD,gBAAgB,GAAGlB,MAAM,CAACc,MAAP,CAAc;AACrC1C,IAAAA,kBAAkB,EAAEC,wBADiB;AAErCO,IAAAA;AAFqC,GAAd,EAGtBF,UAHsB,CAAzB;AAIA,QAAM;AACJN,IAAAA,kBAAkB,GAAG;AADjB,MAEF8C,gBAFJ;AAGA,QAAMC,UAAU,GAAG/F,KAAK,CAACmE,OAAN,CAAc,MAAM;AACrC,QAAIyB,OAAO,CAACvB,IAAR,CAAa2B,IAAI,IAAIA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAAChD,kBAAD,CAArE,CAAJ,EAAgG;AAC9F,aAAO,MAAP;AACD;;AACD,QAAIO,iBAAiB,IAAID,UAAU,IAAIA,UAAU,CAACC,iBAAlD,EAAqE;AACnE,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GARkB,EAQhB,CAACqC,OAAD,CARgB,CAAnB;AASA,QAAMK,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAElG,KAAK,CAACmG,MAAN;AADa,GAArB,CAtEiC,CAyEjC;;AACA,QAAMC,SAAS,GAAGpG,KAAK,CAACmE,OAAN,CAAc,MAAM;AACpC,QAAI,OAAOvB,MAAP,KAAkB,UAAtB,EAAkC;AAChC,aAAOA,MAAP;AACD;;AACD,WAAOyD,MAAM,IAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACzD,MAAD,CAAvE;AACD,GALiB,EAKf,CAACA,MAAD,CALe,CAAlB;AAMA,QAAM,CAAC0D,cAAD,IAAmBvF,YAAY,CAAC6E,OAAD,EAAU5C,kBAAV,EAA8BoD,SAA9B,CAArC,CAhFiC,CAiFjC;;AACA,QAAMG,eAAe,GAAG,EAAxB;;AACA,QAAMC,eAAe,GAAG,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC9C,QAAIC,KAAK,GAAGC,SAAS,CAAC3C,MAAV,GAAmB,CAAnB,IAAwB2C,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAhF;AACA,UAAME,UAAU,GAAGlC,MAAM,CAACc,MAAP,CAAcd,MAAM,CAACc,MAAP,CAAc,EAAd,EAAkBa,eAAlB,CAAd,EAAkDE,IAAlD,CAAnB;;AACA,QAAIE,KAAJ,EAAW;AACTJ,MAAAA,eAAe,CAACQ,eAAhB,GADS,CAET;;AACA,UAAID,UAAU,CAACpE,UAAX,CAAsBsE,OAA1B,EAAmC;AACjCF,QAAAA,UAAU,CAACpE,UAAX,CAAsBsE,OAAtB,GAAgC,CAAhC;AACD,OALQ,CAMT;;;AACA,UAAItE,UAAU,IAAIA,UAAU,CAACQ,QAA7B,EAAuC;AACrCR,QAAAA,UAAU,CAACQ,QAAX,CAAoB,CAApB,EAAuB4D,UAAU,CAACpE,UAAX,CAAsBuE,QAA7C;AACD;AACF;;AACD,QAAIvD,MAAM,IAAIA,MAAM,CAACwD,wBAAP,KAAoC,KAA9C,IAAuDjB,YAAY,CAACC,IAAb,CAAkBc,OAA7E,EAAsF;AACpFxG,MAAAA,QAAQ,CAAC,CAAD,EAAI;AACV2G,QAAAA,YAAY,EAAE,MAAMlB,YAAY,CAACC,IAAb,CAAkBc;AAD5B,OAAJ,CAAR;AAGD;;AACD9D,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC4D,UAAU,CAACpE,UAAZ,EAAwBoE,UAAU,CAACM,OAAnC,EAA4CN,UAAU,CAACO,MAAvD,EAA+D;AACzHC,MAAAA,iBAAiB,EAAExG,aAAa,CAACW,WAAW,CAACmE,OAAD,EAAUkB,UAAU,CAACS,YAArB,EAAmCvE,kBAAnC,CAAZ,EAAoE8D,UAAU,CAACU,YAA/E,CADyF;AAEzHd,MAAAA;AAFyH,KAA/D,CAA5D;AAID,GAvBD;AAwBA;;;;;;AAMA;;;AACA,QAAMe,cAAc,GAAG,CAACJ,MAAD,EAASE,YAAT,KAA0B;AAC/Cf,IAAAA,eAAe,CAAC;AACda,MAAAA,MADc;AAEdE,MAAAA;AAFc,KAAD,EAGZ,MAHY,EAGJ,KAHI,CAAf;AAID,GALD;;AAMA,QAAM,CAACG,sBAAD,EAAyBC,UAAzB,EAAqCC,gBAArC,EAAuDC,UAAvD,IAAqErG,SAAS,CAAC;AACnFQ,IAAAA,SADmF;AAEnFyC,IAAAA,aAFmF;AAGnFgD,IAAAA,cAHmF;AAInF9D,IAAAA,cAAc,EAAEA,cAAc,IAAI,CAAC,QAAD,EAAW,SAAX,CAJiD;AAKnF8B,IAAAA,WALmF;AAMnF5B,IAAAA;AANmF,GAAD,CAApF;AAQA,QAAMiE,UAAU,GAAG9H,KAAK,CAACmE,OAAN,CAAc,MAAM1C,WAAW,CAACmE,OAAD,EAAU+B,UAAV,EAAsB3E,kBAAtB,CAA/B,EAA0E,CAAC4C,OAAD,EAAU+B,UAAV,CAA1E,CAAnB;AACApB,EAAAA,eAAe,CAACc,MAAhB,GAAyBQ,UAAU,EAAnC;AACAtB,EAAAA,eAAe,CAACgB,YAAhB,GAA+BI,UAA/B,CAlIiC,CAmIjC;;AACA,QAAMI,cAAc,GAAG,CAACX,OAAD,EAAUI,YAAV,KAA2B;AAChDhB,IAAAA,eAAe,CAAC;AACdY,MAAAA,OADc;AAEdI,MAAAA;AAFc,KAAD,EAGZ,QAHY,EAGF,IAHE,CAAf;AAID,GALD;;AAMA,QAAM,CAACQ,sBAAD,EAAyBR,YAAzB,EAAuCJ,OAAvC,IAAkDvG,SAAS,CAAC;AAChEmB,IAAAA,SADgE;AAEhE4B,IAAAA,MAAM,EAAE6B,WAFwD;AAGhElD,IAAAA,iBAHgE;AAIhEkC,IAAAA,aAJgE;AAKhEsD,IAAAA,cALgE;AAMhE5E,IAAAA;AANgE,GAAD,CAAjE;AAQA,QAAM8E,UAAU,GAAGnH,aAAa,CAACgH,UAAD,EAAaN,YAAb,CAAhC;AACAjB,EAAAA,eAAe,CAACa,OAAhB,GAA0BA,OAA1B;AACAb,EAAAA,eAAe,CAACiB,YAAhB,GAA+BA,YAA/B,CApJiC,CAqJjC;;AACA,QAAMU,gBAAgB,GAAGlI,KAAK,CAACmE,OAAN,CAAc,MAAM;AAC3C,UAAMgE,aAAa,GAAG,EAAtB;AACAvD,IAAAA,MAAM,CAACC,IAAP,CAAYuC,OAAZ,EAAqBgB,OAArB,CAA6BC,SAAS,IAAI;AACxC,UAAIjB,OAAO,CAACiB,SAAD,CAAP,KAAuB,IAA3B,EAAiC;AAC/BF,QAAAA,aAAa,CAACE,SAAD,CAAb,GAA2BjB,OAAO,CAACiB,SAAD,CAAlC;AACD;AACF,KAJD;AAKA,WAAOzD,MAAM,CAACc,MAAP,CAAcd,MAAM,CAACc,MAAP,CAAc,EAAd,EAAkBkC,gBAAlB,CAAd,EAAmD;AACxDR,MAAAA,OAAO,EAAEe;AAD+C,KAAnD,CAAP;AAGD,GAVwB,EAUtB,CAACP,gBAAD,EAAmBR,OAAnB,CAVsB,CAAzB;AAWA,QAAM,CAACkB,qBAAD,IAA0B5G,eAAe,CAACwG,gBAAD,CAA/C,CAjKiC,CAkKjC;;AACA,QAAMK,kBAAkB,GAAG,CAACvB,OAAD,EAAUC,QAAV,KAAuB;AAChDT,IAAAA,eAAe,CAAC;AACd9D,MAAAA,UAAU,EAAEkC,MAAM,CAACc,MAAP,CAAcd,MAAM,CAACc,MAAP,CAAc,EAAd,EAAkBa,eAAe,CAAC7D,UAAlC,CAAd,EAA6D;AACvEsE,QAAAA,OADuE;AAEvEC,QAAAA;AAFuE,OAA7D;AADE,KAAD,EAKZ,UALY,CAAf;AAMD,GAPD;;AAQA,QAAM,CAACuB,gBAAD,EAAmBzB,eAAnB,IAAsC/F,aAAa,CAACiH,UAAU,CAAChE,MAAZ,EAAoBvB,UAApB,EAAgC6F,kBAAhC,CAAzD;AACAhC,EAAAA,eAAe,CAAC7D,UAAhB,GAA6BA,UAAU,KAAK,KAAf,GAAuB,EAAvB,GAA4BxB,kBAAkB,CAACwB,UAAD,EAAa8F,gBAAb,CAA3E;AACAjC,EAAAA,eAAe,CAACQ,eAAhB,GAAkCA,eAAlC,CA7KiC,CA8KjC;;AACA,QAAM0B,QAAQ,GAAGzI,KAAK,CAACmE,OAAN,CAAc,MAAM;AACnC,QAAIzB,UAAU,KAAK,KAAf,IAAwB,CAAC8F,gBAAgB,CAACvB,QAA9C,EAAwD;AACtD,aAAOgB,UAAP;AACD;;AACD,UAAM;AACJjB,MAAAA,OAAO,GAAG,CADN;AAEJ0B,MAAAA,KAFI;AAGJzB,MAAAA,QAAQ,GAAGhG;AAHP,QAIFuH,gBAJJ;AAKA1E,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvD,OAAO,CAACuG,OAAO,GAAG,CAAX,EAAc,OAAd,EAAuB,sCAAvB,CAA/C,GAAgH,KAAK,CAArH,CATmC,CAUnC;;AACA,QAAIiB,UAAU,CAAChE,MAAX,GAAoByE,KAAxB,EAA+B;AAC7B,UAAIT,UAAU,CAAChE,MAAX,GAAoBgD,QAAxB,EAAkC;AAChCnD,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvD,OAAO,CAAC,KAAD,EAAQ,OAAR,EAAiB,sJAAjB,CAA/C,GAA0N,KAAK,CAA/N;AACA,eAAOwH,UAAU,CAACU,KAAX,CAAiB,CAAC3B,OAAO,GAAG,CAAX,IAAgBC,QAAjC,EAA2CD,OAAO,GAAGC,QAArD,CAAP;AACD;;AACD,aAAOgB,UAAP;AACD;;AACD,WAAOA,UAAU,CAACU,KAAX,CAAiB,CAAC3B,OAAO,GAAG,CAAX,IAAgBC,QAAjC,EAA2CD,OAAO,GAAGC,QAArD,CAAP;AACD,GAnBgB,EAmBd,CAAC,CAAC,CAACvE,UAAH,EAAeuF,UAAf,EAA2BO,gBAAgB,IAAIA,gBAAgB,CAACxB,OAAhE,EAAyEwB,gBAAgB,IAAIA,gBAAgB,CAACvB,QAA9G,EAAwHuB,gBAAgB,IAAIA,gBAAgB,CAACE,KAA7J,CAnBc,CAAjB,CA/KiC,CAmMjC;;AACA,QAAM,CAACE,yBAAD,EAA4BC,cAA5B,IAA8C1H,YAAY,CAACwB,YAAD,EAAe;AAC7EX,IAAAA,SAD6E;AAE7E8G,IAAAA,IAAI,EAAEb,UAFuE;AAG7EQ,IAAAA,QAH6E;AAI7ErC,IAAAA,SAJ6E;AAK7EE,IAAAA,cAL6E;AAM7EP,IAAAA,UAN6E;AAO7E/C,IAAAA,kBAP6E;AAQ7EY,IAAAA,MAAM,EAAE6B,WARqE;AAS7EtC,IAAAA;AAT6E,GAAf,CAAhE;;AAWA,QAAM4F,oBAAoB,GAAG,CAAC1C,MAAD,EAAS2C,KAAT,EAAgBC,MAAhB,KAA2B;AACtD,QAAIC,kBAAJ;;AACA,QAAI,OAAOrG,YAAP,KAAwB,UAA5B,EAAwC;AACtCqG,MAAAA,kBAAkB,GAAGxJ,UAAU,CAACmD,YAAY,CAACwD,MAAD,EAAS2C,KAAT,EAAgBC,MAAhB,CAAb,CAA/B;AACD,KAFD,MAEO;AACLC,MAAAA,kBAAkB,GAAGxJ,UAAU,CAACmD,YAAD,CAA/B;AACD;;AACD,WAAOnD,UAAU,CAAC;AAChB,OAAE,GAAEsC,SAAU,eAAd,GAA+B6G,cAAc,CAAC3D,GAAf,CAAmBkB,SAAS,CAACC,MAAD,EAAS2C,KAAT,CAA5B;AADf,KAAD,EAEdE,kBAFc,CAAjB;AAGD,GAVD,CA/MiC,CA0NjC;AACA;;;AACApD,EAAAA,gBAAgB,CAACqD,sBAAjB,GAA0CrD,gBAAgB,CAACzC,UAA3D,CA5NiC,CA6NjC;;AACAyC,EAAAA,gBAAgB,CAACzC,UAAjB,GAA8ByC,gBAAgB,CAACzC,UAAjB,IAA+BA,UAA/B,IAA6CzC,gBAAgB,CAAC6E,WAAD,CAA3F,CA9NiC,CA+NjC;;AACA,MAAIM,UAAU,KAAK,MAAf,IAAyBD,gBAAgB,CAACtC,qBAAjB,KAA2CqD,SAAxE,EAAmF;AACjFf,IAAAA,gBAAgB,CAACtC,qBAAjB,GAAyCb,YAAY,GAAG,CAAH,GAAO,CAA5D;AACD,GAFD,MAEO,IAAImD,gBAAgB,CAACtC,qBAAjB,GAAyC,CAAzC,IAA8Cb,YAAlD,EAAgE;AACrEmD,IAAAA,gBAAgB,CAACtC,qBAAjB,IAA0C,CAA1C;AACD,GApOgC,CAqOjC;;;AACA,MAAI,OAAOsC,gBAAgB,CAACrC,UAAxB,KAAuC,QAA3C,EAAqD;AACnDqC,IAAAA,gBAAgB,CAACrC,UAAjB,GAA8B,OAAOA,UAAP,KAAsB,QAAtB,GAAiCA,UAAjC,GAA8C,EAA5E;AACD,GAxOgC,CAyOjC;;;AACA,QAAM2F,gBAAgB,GAAGpJ,KAAK,CAACqJ,WAAN,CAAkBC,YAAY,IAAIhB,qBAAqB,CAACM,yBAAyB,CAACZ,sBAAsB,CAACN,sBAAsB,CAAC4B,YAAD,CAAvB,CAAvB,CAA1B,CAAvD,EAAkJ,CAAC5B,sBAAD,EAAyBM,sBAAzB,EAAiDY,yBAAjD,CAAlJ,CAAzB;AACA,MAAIW,iBAAJ;AACA,MAAIC,oBAAJ;;AACA,MAAI9G,UAAU,KAAK,KAAf,KAAyB8F,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACE,KAA9G,CAAJ,EAA0H;AACxH,QAAIe,cAAJ;;AACA,QAAIjB,gBAAgB,CAACpG,IAArB,EAA2B;AACzBqH,MAAAA,cAAc,GAAGjB,gBAAgB,CAACpG,IAAlC;AACD,KAFD,MAEO;AACLqH,MAAAA,cAAc,GAAGjE,UAAU,KAAK,OAAf,IAA0BA,UAAU,KAAK,QAAzC,GAAoD,OAApD,GAA8DqB,SAA/E;AACD;;AACD,UAAM6C,gBAAgB,GAAGC,QAAQ,IAAI,aAAa3J,KAAK,CAAC4J,aAAN,CAAoBtJ,UAApB,EAAgCsE,MAAM,CAACc,MAAP,CAAc,EAAd,EAAkB8C,gBAAlB,EAAoC;AACpHtG,MAAAA,SAAS,EAAExC,UAAU,CAAE,GAAEsC,SAAU,eAAcA,SAAU,eAAc2H,QAAS,EAA7D,EAAgEnB,gBAAgB,CAACtG,SAAjF,CAD+F;AAEpHE,MAAAA,IAAI,EAAEqH;AAF8G,KAApC,CAAhC,CAAlD;;AAIA,UAAMI,eAAe,GAAGtE,SAAS,KAAK,KAAd,GAAsB,MAAtB,GAA+B,OAAvD;AACA,UAAM;AACJoE,MAAAA;AADI,QAEFnB,gBAFJ;;AAGA,QAAImB,QAAQ,KAAK,IAAb,IAAqBG,KAAK,CAACC,OAAN,CAAcJ,QAAd,CAAzB,EAAkD;AAChD,YAAMK,MAAM,GAAGL,QAAQ,CAACM,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAW,KAAX,CAAnB,CAAf;AACA,YAAMC,SAAS,GAAGT,QAAQ,CAACM,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAW,QAAX,CAAnB,CAAlB;AACA,YAAME,SAAS,GAAGV,QAAQ,CAACW,KAAT,CAAeJ,CAAC,IAAK,GAAEA,CAAE,EAAL,KAAW,MAA/B,CAAlB;;AACA,UAAI,CAACF,MAAD,IAAW,CAACI,SAAZ,IAAyB,CAACC,SAA9B,EAAyC;AACvCb,QAAAA,oBAAoB,GAAGE,gBAAgB,CAACG,eAAD,CAAvC;AACD;;AACD,UAAIG,MAAJ,EAAY;AACVT,QAAAA,iBAAiB,GAAGG,gBAAgB,CAACM,MAAM,CAACO,WAAP,GAAqBC,OAArB,CAA6B,KAA7B,EAAoC,EAApC,CAAD,CAApC;AACD;;AACD,UAAIJ,SAAJ,EAAe;AACbZ,QAAAA,oBAAoB,GAAGE,gBAAgB,CAACU,SAAS,CAACG,WAAV,GAAwBC,OAAxB,CAAgC,QAAhC,EAA0C,EAA1C,CAAD,CAAvC;AACD;AACF,KAbD,MAaO;AACLhB,MAAAA,oBAAoB,GAAGE,gBAAgB,CAACG,eAAD,CAAvC;AACD;AACF,GA5QgC,CA6QjC;;;AACA,MAAIY,SAAJ;;AACA,MAAI,OAAOrH,OAAP,KAAmB,SAAvB,EAAkC;AAChCqH,IAAAA,SAAS,GAAG;AACVC,MAAAA,QAAQ,EAAEtH;AADA,KAAZ;AAGD,GAJD,MAIO,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AACtCqH,IAAAA,SAAS,GAAG7F,MAAM,CAACc,MAAP,CAAc;AACxBgF,MAAAA,QAAQ,EAAE;AADc,KAAd,EAETtH,OAFS,CAAZ;AAGD,GAvRgC,CAwRjC;;;AACA,QAAM,CAACuH,OAAD,EAAUC,MAAV,IAAoBjJ,QAAQ,CAACK,SAAD,CAAlC;AACA,QAAM6I,iBAAiB,GAAGnL,UAAU,CAAE,GAAEsC,SAAU,UAAd,EAAyB;AAC3D,KAAE,GAAEA,SAAU,cAAd,GAA8BuD,SAAS,KAAK;AADe,GAAzB,EAEjCrD,SAFiC,EAEtB0I,MAFsB,CAApC;AAGA,SAAOD,OAAO,EAAE,aAAa3K,KAAK,CAAC4J,aAAN,CAAoB,KAApB,EAA2B;AACtD7H,IAAAA,GAAG,EAAEA,GADiD;AAEtDG,IAAAA,SAAS,EAAE2I,iBAF2C;AAGtD1I,IAAAA,KAAK,EAAEA;AAH+C,GAA3B,EAI1B,aAAanC,KAAK,CAAC4J,aAAN,CAAoBrJ,IAApB,EAA0BqE,MAAM,CAACc,MAAP,CAAc;AACtDgF,IAAAA,QAAQ,EAAE;AAD4C,GAAd,EAEvCD,SAFuC,CAA1B,EAEDlB,iBAFC,EAEkB,aAAavJ,KAAK,CAAC4J,aAAN,CAAoBjK,OAApB,EAA6BiF,MAAM,CAACc,MAAP,CAAc,EAAd,EAAkBP,UAAlB,EAA8B;AACxGrC,IAAAA,OAAO,EAAE2B,aAD+F;AAExGc,IAAAA,SAAS,EAAEA,SAF6F;AAGxGjC,IAAAA,UAAU,EAAEwC,gBAH4F;AAIxG9D,IAAAA,SAAS,EAAEA,SAJ6F;AAKxGE,IAAAA,SAAS,EAAExC,UAAU,CAAC;AACpB,OAAE,GAAEsC,SAAU,SAAd,GAAyBwD,UAAU,KAAK,QADpB;AAEpB,OAAE,GAAExD,SAAU,QAAd,GAAwBwD,UAAU,KAAK,OAFnB;AAGpB,OAAE,GAAExD,SAAU,WAAd,GAA2BM,QAHP;AAIpB,OAAE,GAAEN,SAAU,QAAd,GAAwB4D,OAAO,CAAC3B,MAAR,KAAmB;AAJvB,KAAD,CALmF;AAWxG6E,IAAAA,IAAI,EAAEL,QAXkG;AAYxG7F,IAAAA,MAAM,EAAEwD,SAZgG;AAaxGvD,IAAAA,YAAY,EAAEkG,oBAb0F;AAcxG+B,IAAAA,SAAS,EAAElH,MAAM,IAAIA,MAAM,CAACkH,SAAjB,IAA8B,CAACxF,WAAW,IAAIpF,kBAAhB,EAAoC,OAApC,CAd+D;AAexG;AACA6K,IAAAA,aAAa,EAAEjL,cAhByF;AAiBxGmG,IAAAA,YAAY,EAAEA,YAjB0F;AAkBxGmD,IAAAA,gBAAgB,EAAEA;AAlBsF,GAA9B,CAA7B,CAF/B,EAqBXI,oBArBW,CAJa,CAAf,CAAd;AA0BD;;AACD,MAAMwB,YAAY,GAAG,aAAahL,KAAK,CAACiL,UAAN,CAAiBpJ,aAAjB,CAAlC;AACA,MAAM8D,KAAK,GAAGqF,YAAd;AACArF,KAAK,CAACtE,gBAAN,GAAyBA,gBAAzB;AACAsE,KAAK,CAACuF,aAAN,GAAsBvL,OAAO,CAACuL,aAA9B;AACAvF,KAAK,CAACvE,aAAN,GAAsBA,aAAtB;AACAuE,KAAK,CAACrE,gBAAN,GAAyBA,gBAAzB;AACAqE,KAAK,CAACpE,cAAN,GAAuBA,cAAvB;AACAoE,KAAK,CAACjF,MAAN,GAAeA,MAAf;AACAiF,KAAK,CAAChF,WAAN,GAAoBA,WAApB;AACAgF,KAAK,CAAC/F,OAAN,GAAgBA,OAAhB;AACA,eAAe+F,KAAf","sourcesContent":["import classNames from 'classnames';\nimport RcTable, { Summary } from 'rc-table';\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\nimport { INTERNAL_HOOKS } from \"rc-table/es/Table\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider/context';\nimport defaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport SizeContext from '../config-provider/SizeContext';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport defaultLocale from '../locale/en_US';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport scrollTo from '../_util/scrollTo';\nimport warning from '../_util/warning';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport renderExpandIcon from './ExpandIcon';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useSelection, { SELECTION_ALL, SELECTION_COLUMN, SELECTION_INVERT, SELECTION_NONE } from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport useStyle from './style';\nconst EMPTY_LIST = [];\nfunction InternalTable(props, ref) {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    style,\n    size: customizeSize,\n    bordered,\n    dropdownPrefixCls: customizeDropdownPrefixCls,\n    dataSource,\n    pagination,\n    rowSelection,\n    rowKey = 'key',\n    rowClassName,\n    columns,\n    children,\n    childrenColumnName: legacyChildrenColumnName,\n    onChange,\n    getPopupContainer,\n    loading,\n    expandIcon,\n    expandable,\n    expandedRowRender,\n    expandIconColumnIndex,\n    indentSize,\n    scroll,\n    sortDirections,\n    locale,\n    showSorterTooltip = true\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'Table', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\n  }\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\n  const screens = useBreakpoint(needResponsive);\n  const mergedColumns = React.useMemo(() => {\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n  }, [baseColumns, screens]);\n  const tableProps = omit(props, ['className', 'style', 'columns']);\n  const size = React.useContext(SizeContext);\n  const {\n    locale: contextLocale = defaultLocale,\n    renderEmpty,\n    direction\n  } = React.useContext(ConfigContext);\n  const mergedSize = customizeSize || size;\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n  const rawData = dataSource || EMPTY_LIST;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n  const mergedExpandable = Object.assign({\n    childrenColumnName: legacyChildrenColumnName,\n    expandIconColumnIndex\n  }, expandable);\n  const {\n    childrenColumnName = 'children'\n  } = mergedExpandable;\n  const expandType = React.useMemo(() => {\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\n      return 'nest';\n    }\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n    return null;\n  }, [rawData]);\n  const internalRefs = {\n    body: React.useRef()\n  };\n  // ============================ RowKey ============================\n  const getRowKey = React.useMemo(() => {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\n  }, [rowKey]);\n  const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n  // ============================ Events =============================\n  const changeEventInfo = {};\n  const triggerOnChange = function (info, action) {\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n    if (reset) {\n      changeEventInfo.resetPagination();\n      // Reset event param\n      if (changeInfo.pagination.current) {\n        changeInfo.pagination.current = 1;\n      }\n      // Trigger pagination events\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, changeInfo.pagination.pageSize);\n      }\n    }\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      scrollTo(0, {\n        getContainer: () => internalRefs.body.current\n      });\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n      action\n    });\n  };\n  /**\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n   * state out and then put it back to title render. Move these code into `hooks` but still too\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\n   * version.\n   */\n  // ============================ Sorter =============================\n  const onSorterChange = (sorter, sorterStates) => {\n    triggerOnChange({\n      sorter,\n      sorterStates\n    }, 'sort', false);\n  };\n  const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n    prefixCls,\n    mergedColumns,\n    onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend'],\n    tableLocale,\n    showSorterTooltip\n  });\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates;\n  // ============================ Filter ============================\n  const onFilterChange = (filters, filterStates) => {\n    triggerOnChange({\n      filters,\n      filterStates\n    }, 'filter', true);\n  };\n  const [transformFilterColumns, filterStates, filters] = useFilter({\n    prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer\n  });\n  const mergedData = getFilterData(sortedData, filterStates);\n  changeEventInfo.filters = filters;\n  changeEventInfo.filterStates = filterStates;\n  // ============================ Column ============================\n  const columnTitleProps = React.useMemo(() => {\n    const mergedFilters = {};\n    Object.keys(filters).forEach(filterKey => {\n      if (filters[filterKey] !== null) {\n        mergedFilters[filterKey] = filters[filterKey];\n      }\n    });\n    return Object.assign(Object.assign({}, sorterTitleProps), {\n      filters: mergedFilters\n    });\n  }, [sorterTitleProps, filters]);\n  const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n  // ========================== Pagination ==========================\n  const onPaginationChange = (current, pageSize) => {\n    triggerOnChange({\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\n        current,\n        pageSize\n      })\n    }, 'paginate');\n  };\n  const [mergedPagination, resetPagination] = usePagination(mergedData.length, pagination, onPaginationChange);\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(pagination, mergedPagination);\n  changeEventInfo.resetPagination = resetPagination;\n  // ============================= Data =============================\n  const pageData = React.useMemo(() => {\n    if (pagination === false || !mergedPagination.pageSize) {\n      return mergedData;\n    }\n    const {\n      current = 1,\n      total,\n      pageSize = DEFAULT_PAGE_SIZE\n    } = mergedPagination;\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'Table', '`current` should be positive number.') : void 0;\n    // Dynamic table data\n    if (mergedData.length < total) {\n      if (mergedData.length > pageSize) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\n      }\n      return mergedData;\n    }\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]);\n  // ========================== Selections ==========================\n  const [transformSelectionColumns, selectedKeySet] = useSelection(rowSelection, {\n    prefixCls,\n    data: mergedData,\n    pageData,\n    getRowKey,\n    getRecordByKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer\n  });\n  const internalRowClassName = (record, index, indent) => {\n    let mergedRowClassName;\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = classNames(rowClassName);\n    }\n    return classNames({\n      [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index))\n    }, mergedRowClassName);\n  };\n  // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\n  // Customize expandable icon\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n  // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  }\n  // Indent size\n  if (typeof mergedExpandable.indentSize !== 'number') {\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\n  }\n  // ============================ Render ============================\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  let topPaginationNode;\n  let bottomPaginationNode;\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\n    let paginationSize;\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n    const renderPagination = position => /*#__PURE__*/React.createElement(Pagination, Object.assign({}, mergedPagination, {\n      className: classNames(`${prefixCls}-pagination ${prefixCls}-pagination-${position}`, mergedPagination.className),\n      size: paginationSize\n    }));\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\n    const {\n      position\n    } = mergedPagination;\n    if (position !== null && Array.isArray(position)) {\n      const topPos = position.find(p => p.includes('top'));\n      const bottomPos = position.find(p => p.includes('bottom'));\n      const isDisable = position.every(p => `${p}` === 'none');\n      if (!topPos && !bottomPos && !isDisable) {\n        bottomPaginationNode = renderPagination(defaultPosition);\n      }\n      if (topPos) {\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n      }\n      if (bottomPos) {\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n      }\n    } else {\n      bottomPaginationNode = renderPagination(defaultPosition);\n    }\n  }\n  // >>>>>>>>> Spinning\n  let spinProps;\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else if (typeof loading === 'object') {\n    spinProps = Object.assign({\n      spinning: true\n    }, loading);\n  }\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const wrapperClassNames = classNames(`${prefixCls}-wrapper`, {\n    [`${prefixCls}-wrapper-rtl`]: direction === 'rtl'\n  }, className, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: wrapperClassNames,\n    style: style\n  }, /*#__PURE__*/React.createElement(Spin, Object.assign({\n    spinning: false\n  }, spinProps), topPaginationNode, /*#__PURE__*/React.createElement(RcTable, Object.assign({}, tableProps, {\n    columns: mergedColumns,\n    direction: direction,\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-middle`]: mergedSize === 'middle',\n      [`${prefixCls}-small`]: mergedSize === 'small',\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-empty`]: rawData.length === 0\n    }),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: locale && locale.emptyText || (renderEmpty || defaultRenderEmpty)('Table'),\n    // Internal\n    internalHooks: INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns\n  })), bottomPaginationNode)));\n}\nconst ForwardTable = /*#__PURE__*/React.forwardRef(InternalTable);\nconst Table = ForwardTable;\nTable.SELECTION_COLUMN = SELECTION_COLUMN;\nTable.EXPAND_COLUMN = RcTable.EXPAND_COLUMN;\nTable.SELECTION_ALL = SELECTION_ALL;\nTable.SELECTION_INVERT = SELECTION_INVERT;\nTable.SELECTION_NONE = SELECTION_NONE;\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nTable.Summary = Summary;\nexport default Table;"]},"metadata":{},"sourceType":"module"}