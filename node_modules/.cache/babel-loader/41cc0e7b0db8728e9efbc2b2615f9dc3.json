{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { cloneElement } from '../_util/reactNode';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nconst ClearableInputType = ['text', 'input'];\n\nfunction hasAddon(props) {\n  return !!(props.addonBefore || props.addonAfter);\n}\n\nlet ClearableLabeledInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClearableLabeledInput, _React$Component);\n\n  var _super = _createSuper(ClearableLabeledInput);\n\n  function ClearableLabeledInput() {\n    _classCallCheck(this, ClearableLabeledInput);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ClearableLabeledInput, [{\n    key: \"renderClearIcon\",\n    value: function renderClearIcon(prefixCls) {\n      const {\n        value,\n        disabled,\n        readOnly,\n        handleReset,\n        suffix\n      } = this.props;\n      const needClear = !disabled && !readOnly && value;\n      const className = `${prefixCls}-clear-icon`;\n      return /*#__PURE__*/React.createElement(CloseCircleFilled, {\n        onClick: handleReset,\n        // Do not trigger onBlur when clear input\n        // https://github.com/ant-design/ant-design/issues/31200\n        onMouseDown: e => e.preventDefault(),\n        className: classNames({\n          [`${className}-hidden`]: !needClear,\n          [`${className}-has-suffix`]: !!suffix\n        }, className),\n        role: \"button\"\n      });\n    }\n  }, {\n    key: \"renderTextAreaWithClearIcon\",\n    value: function renderTextAreaWithClearIcon(prefixCls, element, statusContext) {\n      const {\n        value,\n        allowClear,\n        className,\n        style,\n        direction,\n        bordered,\n        hidden,\n        status: customStatus,\n        hashId\n      } = this.props;\n      const {\n        status: contextStatus,\n        hasFeedback\n      } = statusContext;\n\n      if (!allowClear) {\n        return cloneElement(element, {\n          value\n        });\n      }\n\n      const affixWrapperCls = classNames(`${prefixCls}-affix-wrapper`, `${prefixCls}-affix-wrapper-textarea-with-clear-btn`, getStatusClassNames(`${prefixCls}-affix-wrapper`, getMergedStatus(contextStatus, customStatus), hasFeedback), {\n        [`${prefixCls}-affix-wrapper-rtl`]: direction === 'rtl',\n        [`${prefixCls}-affix-wrapper-borderless`]: !bordered,\n        // className will go to addon wrapper\n        [`${className}`]: !hasAddon(this.props) && className\n      }, hashId);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: affixWrapperCls,\n        style: style,\n        hidden: hidden\n      }, cloneElement(element, {\n        style: null,\n        value\n      }), this.renderClearIcon(prefixCls));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(FormItemInputContext.Consumer, null, statusContext => {\n        const {\n          prefixCls,\n          inputType,\n          element\n        } = this.props;\n\n        if (inputType === ClearableInputType[0]) {\n          return this.renderTextAreaWithClearIcon(prefixCls, element, statusContext);\n        }\n      });\n    }\n  }]);\n\n  return ClearableLabeledInput;\n}(React.Component);\n\nexport default ClearableLabeledInput;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/input/ClearableLabeledInput.js"],"names":["_classCallCheck","_createClass","_inherits","_createSuper","CloseCircleFilled","classNames","React","FormItemInputContext","cloneElement","getMergedStatus","getStatusClassNames","ClearableInputType","hasAddon","props","addonBefore","addonAfter","ClearableLabeledInput","_React$Component","_super","apply","arguments","key","value","renderClearIcon","prefixCls","disabled","readOnly","handleReset","suffix","needClear","className","createElement","onClick","onMouseDown","e","preventDefault","role","renderTextAreaWithClearIcon","element","statusContext","allowClear","style","direction","bordered","hidden","status","customStatus","hashId","contextStatus","hasFeedback","affixWrapperCls","render","Consumer","inputType","Component"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { cloneElement } from '../_util/reactNode';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nconst ClearableInputType = ['text', 'input'];\nfunction hasAddon(props) {\n  return !!(props.addonBefore || props.addonAfter);\n}\nlet ClearableLabeledInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClearableLabeledInput, _React$Component);\n  var _super = _createSuper(ClearableLabeledInput);\n  function ClearableLabeledInput() {\n    _classCallCheck(this, ClearableLabeledInput);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ClearableLabeledInput, [{\n    key: \"renderClearIcon\",\n    value: function renderClearIcon(prefixCls) {\n      const {\n        value,\n        disabled,\n        readOnly,\n        handleReset,\n        suffix\n      } = this.props;\n      const needClear = !disabled && !readOnly && value;\n      const className = `${prefixCls}-clear-icon`;\n      return /*#__PURE__*/React.createElement(CloseCircleFilled, {\n        onClick: handleReset,\n        // Do not trigger onBlur when clear input\n        // https://github.com/ant-design/ant-design/issues/31200\n        onMouseDown: e => e.preventDefault(),\n        className: classNames({\n          [`${className}-hidden`]: !needClear,\n          [`${className}-has-suffix`]: !!suffix\n        }, className),\n        role: \"button\"\n      });\n    }\n  }, {\n    key: \"renderTextAreaWithClearIcon\",\n    value: function renderTextAreaWithClearIcon(prefixCls, element, statusContext) {\n      const {\n        value,\n        allowClear,\n        className,\n        style,\n        direction,\n        bordered,\n        hidden,\n        status: customStatus,\n        hashId\n      } = this.props;\n      const {\n        status: contextStatus,\n        hasFeedback\n      } = statusContext;\n      if (!allowClear) {\n        return cloneElement(element, {\n          value\n        });\n      }\n      const affixWrapperCls = classNames(`${prefixCls}-affix-wrapper`, `${prefixCls}-affix-wrapper-textarea-with-clear-btn`, getStatusClassNames(`${prefixCls}-affix-wrapper`, getMergedStatus(contextStatus, customStatus), hasFeedback), {\n        [`${prefixCls}-affix-wrapper-rtl`]: direction === 'rtl',\n        [`${prefixCls}-affix-wrapper-borderless`]: !bordered,\n        // className will go to addon wrapper\n        [`${className}`]: !hasAddon(this.props) && className\n      }, hashId);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: affixWrapperCls,\n        style: style,\n        hidden: hidden\n      }, cloneElement(element, {\n        style: null,\n        value\n      }), this.renderClearIcon(prefixCls));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(FormItemInputContext.Consumer, null, statusContext => {\n        const {\n          prefixCls,\n          inputType,\n          element\n        } = this.props;\n        if (inputType === ClearableInputType[0]) {\n          return this.renderTextAreaWithClearIcon(prefixCls, element, statusContext);\n        }\n      });\n    }\n  }]);\n  return ClearableLabeledInput;\n}(React.Component);\nexport default ClearableLabeledInput;"]},"metadata":{},"sourceType":"module"}