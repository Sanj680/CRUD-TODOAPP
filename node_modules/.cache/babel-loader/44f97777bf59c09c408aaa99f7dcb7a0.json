{"ast":null,"code":"import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genDropdownStyle from './dropdown';\nimport genMultipleStyle from './multiple';\nimport genSingleStyle from './single';\nimport { resetComponent, resetIcon, textEllipsis } from '../../style';\nimport { genCompactItemStyle } from '../../style/compact-item'; // ============================= Selector =============================\n\nconst genSelectorStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    position: 'relative',\n    backgroundColor: token.colorBgContainer,\n    border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n    transition: `all ${token.motionDurationMid} ${token.motionEaseInOut}`,\n    input: {\n      cursor: 'pointer'\n    },\n    [`${componentCls}-show-search&`]: {\n      cursor: 'text',\n      input: {\n        cursor: 'auto',\n        color: 'inherit'\n      }\n    },\n    [`${componentCls}-disabled&`]: {\n      color: token.colorTextDisabled,\n      background: token.colorBgContainerDisabled,\n      cursor: 'not-allowed',\n      [`${componentCls}-multiple&`]: {\n        background: token.colorBgContainerDisabled\n      },\n      input: {\n        cursor: 'not-allowed'\n      }\n    }\n  };\n}; // ============================== Status ==============================\n\n\nconst genStatusStyle = function (rootSelectCls, token) {\n  let overwriteDefaultBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const {\n    componentCls,\n    borderHoverColor,\n    outlineColor,\n    antCls\n  } = token;\n  const overwriteStyle = overwriteDefaultBorder ? {\n    [`${componentCls}-selector`]: {\n      borderColor: borderHoverColor\n    }\n  } : {};\n  return {\n    [rootSelectCls]: {\n      [`&:not(${componentCls}-disabled):not(${componentCls}-customize-input):not(${antCls}-pagination-size-changer)`]: Object.assign(Object.assign({}, overwriteStyle), {\n        [`${componentCls}-focused& ${componentCls}-selector`]: {\n          borderColor: borderHoverColor,\n          boxShadow: `0 0 0 ${token.controlOutlineWidth}px ${outlineColor}`,\n          borderInlineEndWidth: `${token.controlLineWidth}px !important`,\n          outline: 0\n        },\n        [`&:hover ${componentCls}-selector`]: {\n          borderColor: borderHoverColor,\n          borderInlineEndWidth: `${token.controlLineWidth}px !important`\n        }\n      })\n    }\n  };\n}; // ============================== Styles ==============================\n// /* Reset search input style */\n\n\nconst getSearchInputWithoutBorderStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-selection-search-input`]: {\n      margin: 0,\n      padding: 0,\n      background: 'transparent',\n      border: 'none',\n      outline: 'none',\n      appearance: 'none',\n      '&::-webkit-search-cancel-button': {\n        display: 'none',\n        '-webkit-appearance': 'none'\n      }\n    }\n  };\n}; // =============================== Base ===============================\n\n\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    inputPaddingHorizontalBase,\n    iconCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      cursor: 'pointer',\n      [`&:not(&-customize-input) ${componentCls}-selector`]: Object.assign(Object.assign({}, genSelectorStyle(token)), getSearchInputWithoutBorderStyle(token)),\n      // [`&:not(&-disabled):hover ${selectCls}-selector`]: {\n      //   ...genHoverStyle(token),\n      // },\n      // ======================== Selection ========================\n      [`${componentCls}-selection-item`]: Object.assign({\n        flex: 1,\n        fontWeight: 'normal'\n      }, textEllipsis),\n      // ======================= Placeholder =======================\n      [`${componentCls}-selection-placeholder`]: Object.assign(Object.assign({}, textEllipsis), {\n        flex: 1,\n        color: token.colorTextPlaceholder,\n        pointerEvents: 'none'\n      }),\n      // ========================== Arrow ==========================\n      [`${componentCls}-arrow`]: Object.assign(Object.assign({}, resetIcon()), {\n        position: 'absolute',\n        top: '50%',\n        insetInlineStart: 'auto',\n        insetInlineEnd: inputPaddingHorizontalBase,\n        height: token.fontSizeIcon,\n        marginTop: -token.fontSizeIcon / 2,\n        color: token.colorTextQuaternary,\n        fontSize: token.fontSizeIcon,\n        lineHeight: 1,\n        textAlign: 'center',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        [iconCls]: {\n          verticalAlign: 'top',\n          transition: `transform ${token.motionDurationSlow}`,\n          '> svg': {\n            verticalAlign: 'top'\n          },\n          [`&:not(${componentCls}-suffix)`]: {\n            pointerEvents: 'auto'\n          }\n        },\n        [`${componentCls}-disabled &`]: {\n          cursor: 'not-allowed'\n        },\n        '> *:not(:last-child)': {\n          marginInlineEnd: 8 // FIXME: magic\n\n        }\n      }),\n      // ========================== Clear ==========================\n      [`${componentCls}-clear`]: {\n        position: 'absolute',\n        top: '50%',\n        insetInlineStart: 'auto',\n        insetInlineEnd: inputPaddingHorizontalBase,\n        zIndex: 1,\n        display: 'inline-block',\n        width: token.fontSizeIcon,\n        height: token.fontSizeIcon,\n        marginTop: -token.fontSizeIcon / 2,\n        color: token.colorTextQuaternary,\n        fontSize: token.fontSizeIcon,\n        fontStyle: 'normal',\n        lineHeight: 1,\n        textAlign: 'center',\n        textTransform: 'none',\n        background: token.colorBgContainer,\n        cursor: 'pointer',\n        opacity: 0,\n        transition: `color ${token.motionDurationMid} ease, opacity ${token.motionDurationSlow} ease`,\n        textRendering: 'auto',\n        '&:before': {\n          display: 'block'\n        },\n        '&:hover': {\n          color: token.colorTextTertiary\n        }\n      },\n      '&:hover': {\n        [`${componentCls}-clear`]: {\n          opacity: 1\n        }\n      }\n    }),\n    // ========================= Feedback ==========================\n    [`${componentCls}-has-feedback`]: {\n      [`${componentCls}-clear`]: {\n        insetInlineEnd: inputPaddingHorizontalBase + token.fontSize + token.paddingXXS\n      }\n    }\n  };\n}; // ============================== Styles ==============================\n\n\nconst genSelectStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return [{\n    [componentCls]: {\n      // ==================== BorderLess ====================\n      [`&-borderless ${componentCls}-selector`]: {\n        backgroundColor: `transparent !important`,\n        borderColor: `transparent !important`,\n        boxShadow: `none !important`\n      },\n      // ==================== In Form ====================\n      '&&-in-form-item': {\n        width: '100%'\n      }\n    }\n  }, // =====================================================\n  // ==                       LTR                       ==\n  // =====================================================\n  // Base\n  genBaseStyle(token), // Single\n  genSingleStyle(token), // Multiple\n  genMultipleStyle(token), // Dropdown\n  genDropdownStyle(token), // =====================================================\n  // ==                       RTL                       ==\n  // =====================================================\n  {\n    [`${componentCls}-rtl`]: {\n      direction: 'rtl'\n    }\n  }, // =====================================================\n  // ==                     Status                      ==\n  // =====================================================\n  genStatusStyle(componentCls, mergeToken(token, {\n    borderHoverColor: token.colorPrimaryHover,\n    outlineColor: token.controlOutline\n  })), genStatusStyle(`${componentCls}-status-error`, mergeToken(token, {\n    borderHoverColor: token.colorErrorHover,\n    outlineColor: token.colorErrorOutline\n  }), true), genStatusStyle(`${componentCls}-status-warning`, mergeToken(token, {\n    borderHoverColor: token.colorWarningHover,\n    outlineColor: token.colorWarningOutline\n  }), true), // =====================================================\n  // ==             Space Compact                       ==\n  // =====================================================\n  genCompactItemStyle(token, {\n    borderElCls: `${componentCls}-selector`,\n    focusElCls: `${componentCls}-focused`\n  })];\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Select', (token, _ref) => {\n  let {\n    rootPrefixCls\n  } = _ref;\n  const selectToken = mergeToken(token, {\n    rootPrefixCls,\n    inputPaddingHorizontalBase: token.paddingSM - 1\n  });\n  return [genSelectStyle(selectToken)];\n}, token => ({\n  zIndexPopup: token.zIndexPopupBase + 50\n}));","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/select/style/index.js"],"names":["genComponentStyleHook","mergeToken","genDropdownStyle","genMultipleStyle","genSingleStyle","resetComponent","resetIcon","textEllipsis","genCompactItemStyle","genSelectorStyle","token","componentCls","position","backgroundColor","colorBgContainer","border","lineWidth","lineType","colorBorder","transition","motionDurationMid","motionEaseInOut","input","cursor","color","colorTextDisabled","background","colorBgContainerDisabled","genStatusStyle","rootSelectCls","overwriteDefaultBorder","arguments","length","undefined","borderHoverColor","outlineColor","antCls","overwriteStyle","borderColor","Object","assign","boxShadow","controlOutlineWidth","borderInlineEndWidth","controlLineWidth","outline","getSearchInputWithoutBorderStyle","margin","padding","appearance","display","genBaseStyle","inputPaddingHorizontalBase","iconCls","flex","fontWeight","colorTextPlaceholder","pointerEvents","top","insetInlineStart","insetInlineEnd","height","fontSizeIcon","marginTop","colorTextQuaternary","fontSize","lineHeight","textAlign","alignItems","verticalAlign","motionDurationSlow","marginInlineEnd","zIndex","width","fontStyle","textTransform","opacity","textRendering","colorTextTertiary","paddingXXS","genSelectStyle","direction","colorPrimaryHover","controlOutline","colorErrorHover","colorErrorOutline","colorWarningHover","colorWarningOutline","borderElCls","focusElCls","_ref","rootPrefixCls","selectToken","paddingSM","zIndexPopup","zIndexPopupBase"],"mappings":"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","sourcesContent":["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genDropdownStyle from './dropdown';\nimport genMultipleStyle from './multiple';\nimport genSingleStyle from './single';\nimport { resetComponent, resetIcon, textEllipsis } from '../../style';\nimport { genCompactItemStyle } from '../../style/compact-item';\n// ============================= Selector =============================\nconst genSelectorStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    position: 'relative',\n    backgroundColor: token.colorBgContainer,\n    border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n    transition: `all ${token.motionDurationMid} ${token.motionEaseInOut}`,\n    input: {\n      cursor: 'pointer'\n    },\n    [`${componentCls}-show-search&`]: {\n      cursor: 'text',\n      input: {\n        cursor: 'auto',\n        color: 'inherit'\n      }\n    },\n    [`${componentCls}-disabled&`]: {\n      color: token.colorTextDisabled,\n      background: token.colorBgContainerDisabled,\n      cursor: 'not-allowed',\n      [`${componentCls}-multiple&`]: {\n        background: token.colorBgContainerDisabled\n      },\n      input: {\n        cursor: 'not-allowed'\n      }\n    }\n  };\n};\n// ============================== Status ==============================\nconst genStatusStyle = function (rootSelectCls, token) {\n  let overwriteDefaultBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const {\n    componentCls,\n    borderHoverColor,\n    outlineColor,\n    antCls\n  } = token;\n  const overwriteStyle = overwriteDefaultBorder ? {\n    [`${componentCls}-selector`]: {\n      borderColor: borderHoverColor\n    }\n  } : {};\n  return {\n    [rootSelectCls]: {\n      [`&:not(${componentCls}-disabled):not(${componentCls}-customize-input):not(${antCls}-pagination-size-changer)`]: Object.assign(Object.assign({}, overwriteStyle), {\n        [`${componentCls}-focused& ${componentCls}-selector`]: {\n          borderColor: borderHoverColor,\n          boxShadow: `0 0 0 ${token.controlOutlineWidth}px ${outlineColor}`,\n          borderInlineEndWidth: `${token.controlLineWidth}px !important`,\n          outline: 0\n        },\n        [`&:hover ${componentCls}-selector`]: {\n          borderColor: borderHoverColor,\n          borderInlineEndWidth: `${token.controlLineWidth}px !important`\n        }\n      })\n    }\n  };\n};\n// ============================== Styles ==============================\n// /* Reset search input style */\nconst getSearchInputWithoutBorderStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-selection-search-input`]: {\n      margin: 0,\n      padding: 0,\n      background: 'transparent',\n      border: 'none',\n      outline: 'none',\n      appearance: 'none',\n      '&::-webkit-search-cancel-button': {\n        display: 'none',\n        '-webkit-appearance': 'none'\n      }\n    }\n  };\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    inputPaddingHorizontalBase,\n    iconCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      cursor: 'pointer',\n      [`&:not(&-customize-input) ${componentCls}-selector`]: Object.assign(Object.assign({}, genSelectorStyle(token)), getSearchInputWithoutBorderStyle(token)),\n      // [`&:not(&-disabled):hover ${selectCls}-selector`]: {\n      //   ...genHoverStyle(token),\n      // },\n      // ======================== Selection ========================\n      [`${componentCls}-selection-item`]: Object.assign({\n        flex: 1,\n        fontWeight: 'normal'\n      }, textEllipsis),\n      // ======================= Placeholder =======================\n      [`${componentCls}-selection-placeholder`]: Object.assign(Object.assign({}, textEllipsis), {\n        flex: 1,\n        color: token.colorTextPlaceholder,\n        pointerEvents: 'none'\n      }),\n      // ========================== Arrow ==========================\n      [`${componentCls}-arrow`]: Object.assign(Object.assign({}, resetIcon()), {\n        position: 'absolute',\n        top: '50%',\n        insetInlineStart: 'auto',\n        insetInlineEnd: inputPaddingHorizontalBase,\n        height: token.fontSizeIcon,\n        marginTop: -token.fontSizeIcon / 2,\n        color: token.colorTextQuaternary,\n        fontSize: token.fontSizeIcon,\n        lineHeight: 1,\n        textAlign: 'center',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        [iconCls]: {\n          verticalAlign: 'top',\n          transition: `transform ${token.motionDurationSlow}`,\n          '> svg': {\n            verticalAlign: 'top'\n          },\n          [`&:not(${componentCls}-suffix)`]: {\n            pointerEvents: 'auto'\n          }\n        },\n        [`${componentCls}-disabled &`]: {\n          cursor: 'not-allowed'\n        },\n        '> *:not(:last-child)': {\n          marginInlineEnd: 8 // FIXME: magic\n        }\n      }),\n\n      // ========================== Clear ==========================\n      [`${componentCls}-clear`]: {\n        position: 'absolute',\n        top: '50%',\n        insetInlineStart: 'auto',\n        insetInlineEnd: inputPaddingHorizontalBase,\n        zIndex: 1,\n        display: 'inline-block',\n        width: token.fontSizeIcon,\n        height: token.fontSizeIcon,\n        marginTop: -token.fontSizeIcon / 2,\n        color: token.colorTextQuaternary,\n        fontSize: token.fontSizeIcon,\n        fontStyle: 'normal',\n        lineHeight: 1,\n        textAlign: 'center',\n        textTransform: 'none',\n        background: token.colorBgContainer,\n        cursor: 'pointer',\n        opacity: 0,\n        transition: `color ${token.motionDurationMid} ease, opacity ${token.motionDurationSlow} ease`,\n        textRendering: 'auto',\n        '&:before': {\n          display: 'block'\n        },\n        '&:hover': {\n          color: token.colorTextTertiary\n        }\n      },\n      '&:hover': {\n        [`${componentCls}-clear`]: {\n          opacity: 1\n        }\n      }\n    }),\n    // ========================= Feedback ==========================\n    [`${componentCls}-has-feedback`]: {\n      [`${componentCls}-clear`]: {\n        insetInlineEnd: inputPaddingHorizontalBase + token.fontSize + token.paddingXXS\n      }\n    }\n  };\n};\n// ============================== Styles ==============================\nconst genSelectStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return [{\n    [componentCls]: {\n      // ==================== BorderLess ====================\n      [`&-borderless ${componentCls}-selector`]: {\n        backgroundColor: `transparent !important`,\n        borderColor: `transparent !important`,\n        boxShadow: `none !important`\n      },\n      // ==================== In Form ====================\n      '&&-in-form-item': {\n        width: '100%'\n      }\n    }\n  },\n  // =====================================================\n  // ==                       LTR                       ==\n  // =====================================================\n  // Base\n  genBaseStyle(token),\n  // Single\n  genSingleStyle(token),\n  // Multiple\n  genMultipleStyle(token),\n  // Dropdown\n  genDropdownStyle(token),\n  // =====================================================\n  // ==                       RTL                       ==\n  // =====================================================\n  {\n    [`${componentCls}-rtl`]: {\n      direction: 'rtl'\n    }\n  },\n  // =====================================================\n  // ==                     Status                      ==\n  // =====================================================\n  genStatusStyle(componentCls, mergeToken(token, {\n    borderHoverColor: token.colorPrimaryHover,\n    outlineColor: token.controlOutline\n  })), genStatusStyle(`${componentCls}-status-error`, mergeToken(token, {\n    borderHoverColor: token.colorErrorHover,\n    outlineColor: token.colorErrorOutline\n  }), true), genStatusStyle(`${componentCls}-status-warning`, mergeToken(token, {\n    borderHoverColor: token.colorWarningHover,\n    outlineColor: token.colorWarningOutline\n  }), true),\n  // =====================================================\n  // ==             Space Compact                       ==\n  // =====================================================\n  genCompactItemStyle(token, {\n    borderElCls: `${componentCls}-selector`,\n    focusElCls: `${componentCls}-focused`\n  })];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Select', (token, _ref) => {\n  let {\n    rootPrefixCls\n  } = _ref;\n  const selectToken = mergeToken(token, {\n    rootPrefixCls,\n    inputPaddingHorizontalBase: token.paddingSM - 1\n  });\n  return [genSelectStyle(selectToken)];\n}, token => ({\n  zIndexPopup: token.zIndexPopupBase + 50\n}));"]},"metadata":{},"sourceType":"module"}