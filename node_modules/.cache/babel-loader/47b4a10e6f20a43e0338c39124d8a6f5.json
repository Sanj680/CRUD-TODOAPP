{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\nimport defaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport { FormItemInputContext } from '../form/context';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { groupKeysMap, groupDisabledKeysMap } from '../_util/transKeys';\nimport warning from '../_util/warning';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport useStyle from './style';\n\nconst TransferFC = props => {\n  const {\n    prefixCls\n  } = props;\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(props.className, hashId),\n    style: props.style\n  }, props.children));\n};\n\nlet Transfer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Transfer, _React$Component);\n\n  var _super = _createSuper(Transfer);\n\n  function Transfer(props) {\n    var _this;\n\n    _classCallCheck(this, Transfer);\n\n    _this = _super.call(this, props);\n    _this.separatedDataSource = null;\n\n    _this.setStateKeys = (direction, keys) => {\n      if (direction === 'left') {\n        _this.setState(_ref => {\n          let {\n            sourceSelectedKeys\n          } = _ref;\n          return {\n            sourceSelectedKeys: typeof keys === 'function' ? keys(sourceSelectedKeys || []) : keys\n          };\n        });\n      } else {\n        _this.setState(_ref2 => {\n          let {\n            targetSelectedKeys\n          } = _ref2;\n          return {\n            targetSelectedKeys: typeof keys === 'function' ? keys(targetSelectedKeys || []) : keys\n          };\n        });\n      }\n    };\n\n    _this.getLocale = (transferLocale, renderEmpty) => {\n      const {\n        locale = {}\n      } = _this.props;\n      return Object.assign(Object.assign(Object.assign({}, transferLocale), {\n        notFoundContent: renderEmpty('Transfer')\n      }), locale);\n    };\n\n    _this.moveTo = direction => {\n      const {\n        targetKeys = [],\n        dataSource = [],\n        onChange\n      } = _this.props;\n      const {\n        sourceSelectedKeys,\n        targetSelectedKeys\n      } = _this.state;\n      const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n      const dataSourceDisabledKeysMap = groupDisabledKeysMap(dataSource); // filter the disabled options\n\n      const newMoveKeys = moveKeys.filter(key => !dataSourceDisabledKeysMap.has(key));\n      const newMoveKeysMap = groupKeysMap(newMoveKeys); // move items to target box\n\n      const newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(targetKey => !newMoveKeysMap.has(targetKey)); // empty checked keys\n\n      const oppositeDirection = direction === 'right' ? 'left' : 'right';\n\n      _this.setStateKeys(oppositeDirection, []);\n\n      _this.handleSelectChange(oppositeDirection, []);\n\n      onChange === null || onChange === void 0 ? void 0 : onChange(newTargetKeys, direction, newMoveKeys);\n    };\n\n    _this.moveToLeft = () => _this.moveTo('left');\n\n    _this.moveToRight = () => _this.moveTo('right');\n\n    _this.onItemSelectAll = (direction, selectedKeys, checkAll) => {\n      _this.setStateKeys(direction, prevKeys => {\n        let mergedCheckedKeys = [];\n\n        if (checkAll) {\n          // Merge current keys with origin key\n          mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(prevKeys), _toConsumableArray(selectedKeys))));\n        } else {\n          const selectedKeysMap = groupKeysMap(selectedKeys); // Remove current keys from origin keys\n\n          mergedCheckedKeys = prevKeys.filter(key => !selectedKeysMap.has(key));\n        }\n\n        _this.handleSelectChange(direction, mergedCheckedKeys);\n\n        return mergedCheckedKeys;\n      });\n    };\n\n    _this.onLeftItemSelectAll = (selectedKeys, checkAll) => _this.onItemSelectAll('left', selectedKeys, checkAll);\n\n    _this.onRightItemSelectAll = (selectedKeys, checkAll) => _this.onItemSelectAll('right', selectedKeys, checkAll);\n\n    _this.handleFilter = (direction, e) => {\n      const {\n        onSearch\n      } = _this.props;\n      const {\n        value\n      } = e.target;\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(direction, value);\n    };\n\n    _this.handleLeftFilter = e => _this.handleFilter('left', e);\n\n    _this.handleRightFilter = e => _this.handleFilter('right', e);\n\n    _this.handleClear = direction => {\n      const {\n        onSearch\n      } = _this.props;\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(direction, '');\n    };\n\n    _this.handleLeftClear = () => _this.handleClear('left');\n\n    _this.handleRightClear = () => _this.handleClear('right');\n\n    _this.onItemSelect = (direction, selectedKey, checked) => {\n      const {\n        sourceSelectedKeys,\n        targetSelectedKeys\n      } = _this.state;\n      const holder = direction === 'left' ? _toConsumableArray(sourceSelectedKeys) : _toConsumableArray(targetSelectedKeys);\n      const index = holder.indexOf(selectedKey);\n\n      if (index > -1) {\n        holder.splice(index, 1);\n      }\n\n      if (checked) {\n        holder.push(selectedKey);\n      }\n\n      _this.handleSelectChange(direction, holder);\n\n      if (!_this.props.selectedKeys) {\n        _this.setStateKeys(direction, holder);\n      }\n    };\n\n    _this.onLeftItemSelect = (selectedKey, checked) => _this.onItemSelect('left', selectedKey, checked);\n\n    _this.onRightItemSelect = (selectedKey, checked) => _this.onItemSelect('right', selectedKey, checked);\n\n    _this.onRightItemRemove = selectedKeys => {\n      const {\n        targetKeys = [],\n        onChange\n      } = _this.props;\n\n      _this.setStateKeys('right', []);\n\n      onChange === null || onChange === void 0 ? void 0 : onChange(targetKeys.filter(key => !selectedKeys.includes(key)), 'left', _toConsumableArray(selectedKeys));\n    };\n\n    _this.handleScroll = (direction, e) => {\n      const {\n        onScroll\n      } = _this.props;\n      onScroll === null || onScroll === void 0 ? void 0 : onScroll(direction, e);\n    };\n\n    _this.handleLeftScroll = e => _this.handleScroll('left', e);\n\n    _this.handleRightScroll = e => _this.handleScroll('right', e); // eslint-disable-next-line class-methods-use-this\n\n\n    _this.handleListStyle = (listStyle, direction) => {\n      if (typeof listStyle === 'function') {\n        return listStyle({\n          direction\n        });\n      }\n\n      return listStyle;\n    };\n\n    const {\n      selectedKeys = [],\n      targetKeys = []\n    } = props;\n    _this.state = {\n      sourceSelectedKeys: selectedKeys.filter(key => !targetKeys.includes(key)),\n      targetSelectedKeys: selectedKeys.filter(key => targetKeys.includes(key))\n    };\n    return _this;\n  }\n\n  _createClass(Transfer, [{\n    key: \"getTitles\",\n    value: function getTitles(transferLocale) {\n      var _a, _b;\n\n      return (_b = (_a = this.props.titles) !== null && _a !== void 0 ? _a : transferLocale.titles) !== null && _b !== void 0 ? _b : [];\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(direction, holder) {\n      const {\n        sourceSelectedKeys,\n        targetSelectedKeys\n      } = this.state;\n      const {\n        onSelectChange\n      } = this.props;\n\n      if (!onSelectChange) {\n        return;\n      }\n\n      if (direction === 'left') {\n        onSelectChange(holder, targetSelectedKeys);\n      } else {\n        onSelectChange(sourceSelectedKeys, holder);\n      }\n    }\n  }, {\n    key: \"separateDataSource\",\n    value: function separateDataSource() {\n      const {\n        dataSource = [],\n        rowKey,\n        targetKeys = []\n      } = this.props;\n      const leftDataSource = [];\n      const rightDataSource = new Array(targetKeys.length);\n      const targetKeysMap = groupKeysMap(targetKeys);\n      dataSource.forEach(record => {\n        if (rowKey) {\n          record = Object.assign(Object.assign({}, record), {\n            key: rowKey(record)\n          });\n        } // rightDataSource should be ordered by targetKeys\n        // leftDataSource should be ordered by dataSource\n\n\n        if (targetKeysMap.has(record.key)) {\n          rightDataSource[targetKeysMap.get(record.key)] = record;\n        } else {\n          leftDataSource.push(record);\n        }\n      });\n      return {\n        leftDataSource,\n        rightDataSource\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(LocaleReceiver, {\n        componentName: \"Transfer\",\n        defaultLocale: defaultLocale.Transfer\n      }, contextLocale => /*#__PURE__*/React.createElement(ConfigConsumer, null, _ref3 => {\n        let {\n          getPrefixCls,\n          renderEmpty,\n          direction\n        } = _ref3;\n        return /*#__PURE__*/React.createElement(FormItemInputContext.Consumer, null, _ref4 => {\n          let {\n            hasFeedback,\n            status: contextStatus\n          } = _ref4;\n          const {\n            prefixCls: customizePrefixCls,\n            className,\n            disabled,\n            operations = [],\n            showSearch = false,\n            footer,\n            style,\n            listStyle = {},\n            operationStyle,\n            filterOption,\n            render,\n            children,\n            showSelectAll,\n            oneWay,\n            pagination,\n            status: customStatus\n          } = this.props;\n          const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n          const locale = this.getLocale(contextLocale, renderEmpty || defaultRenderEmpty);\n          const {\n            sourceSelectedKeys,\n            targetSelectedKeys\n          } = this.state;\n          const mergedStatus = getMergedStatus(contextStatus, customStatus);\n          const mergedPagination = !children && pagination;\n          const {\n            leftDataSource,\n            rightDataSource\n          } = this.separateDataSource();\n          const leftActive = targetSelectedKeys.length > 0;\n          const rightActive = sourceSelectedKeys.length > 0;\n          const cls = classNames(prefixCls, {\n            [`${prefixCls}-disabled`]: disabled,\n            [`${prefixCls}-customize-list`]: !!children,\n            [`${prefixCls}-rtl`]: direction === 'rtl'\n          }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), className);\n          const titles = this.getTitles(locale);\n          const selectAllLabels = this.props.selectAllLabels || [];\n          return /*#__PURE__*/React.createElement(TransferFC, {\n            prefixCls: prefixCls,\n            className: cls,\n            style: style\n          }, /*#__PURE__*/React.createElement(List, Object.assign({\n            prefixCls: `${prefixCls}-list`,\n            titleText: titles === null || titles === void 0 ? void 0 : titles[0],\n            dataSource: leftDataSource,\n            filterOption: filterOption,\n            style: this.handleListStyle(listStyle, 'left'),\n            checkedKeys: sourceSelectedKeys,\n            handleFilter: this.handleLeftFilter,\n            handleClear: this.handleLeftClear,\n            onItemSelect: this.onLeftItemSelect,\n            onItemSelectAll: this.onLeftItemSelectAll,\n            render: render,\n            showSearch: showSearch,\n            renderList: children,\n            footer: footer,\n            onScroll: this.handleLeftScroll,\n            disabled: disabled,\n            direction: direction === 'rtl' ? 'right' : 'left',\n            showSelectAll: showSelectAll,\n            selectAllLabel: selectAllLabels[0],\n            pagination: mergedPagination\n          }, locale)), /*#__PURE__*/React.createElement(Operation, {\n            className: `${prefixCls}-operation`,\n            rightActive: rightActive,\n            rightArrowText: operations[0],\n            moveToRight: this.moveToRight,\n            leftActive: leftActive,\n            leftArrowText: operations[1],\n            moveToLeft: this.moveToLeft,\n            style: operationStyle,\n            disabled: disabled,\n            direction: direction,\n            oneWay: oneWay\n          }), /*#__PURE__*/React.createElement(List, Object.assign({\n            prefixCls: `${prefixCls}-list`,\n            titleText: titles === null || titles === void 0 ? void 0 : titles[1],\n            dataSource: rightDataSource,\n            filterOption: filterOption,\n            style: this.handleListStyle(listStyle, 'right'),\n            checkedKeys: targetSelectedKeys,\n            handleFilter: this.handleRightFilter,\n            handleClear: this.handleRightClear,\n            onItemSelect: this.onRightItemSelect,\n            onItemSelectAll: this.onRightItemSelectAll,\n            onItemRemove: this.onRightItemRemove,\n            render: render,\n            showSearch: showSearch,\n            renderList: children,\n            footer: footer,\n            onScroll: this.handleRightScroll,\n            disabled: disabled,\n            direction: direction === 'rtl' ? 'left' : 'right',\n            showSelectAll: showSelectAll,\n            selectAllLabel: selectAllLabels[1],\n            showRemove: oneWay,\n            pagination: mergedPagination\n          }, locale)));\n        });\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref5) {\n      let {\n        selectedKeys,\n        targetKeys,\n        pagination,\n        children\n      } = _ref5;\n\n      if (selectedKeys) {\n        const mergedTargetKeys = targetKeys || [];\n        return {\n          sourceSelectedKeys: selectedKeys.filter(key => !mergedTargetKeys.includes(key)),\n          targetSelectedKeys: selectedKeys.filter(key => mergedTargetKeys.includes(key))\n        };\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(!pagination || !children, 'Transfer', '`pagination` not support customize render list.') : void 0;\n      return null;\n    }\n  }]);\n\n  return Transfer;\n}(React.Component); // For high-level customized Transfer @dqaria\n\n\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nexport default Transfer;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/transfer/index.js"],"names":["_toConsumableArray","_classCallCheck","_createClass","_inherits","_createSuper","classNames","React","ConfigConsumer","defaultRenderEmpty","FormItemInputContext","LocaleReceiver","defaultLocale","getMergedStatus","getStatusClassNames","groupKeysMap","groupDisabledKeysMap","warning","List","Operation","Search","useStyle","TransferFC","props","prefixCls","wrapSSR","hashId","createElement","className","style","children","Transfer","_React$Component","_super","_this","call","separatedDataSource","setStateKeys","direction","keys","setState","_ref","sourceSelectedKeys","_ref2","targetSelectedKeys","getLocale","transferLocale","renderEmpty","locale","Object","assign","notFoundContent","moveTo","targetKeys","dataSource","onChange","state","moveKeys","dataSourceDisabledKeysMap","newMoveKeys","filter","key","has","newMoveKeysMap","newTargetKeys","concat","targetKey","oppositeDirection","handleSelectChange","moveToLeft","moveToRight","onItemSelectAll","selectedKeys","checkAll","prevKeys","mergedCheckedKeys","Array","from","Set","selectedKeysMap","onLeftItemSelectAll","onRightItemSelectAll","handleFilter","e","onSearch","value","target","handleLeftFilter","handleRightFilter","handleClear","handleLeftClear","handleRightClear","onItemSelect","selectedKey","checked","holder","index","indexOf","splice","push","onLeftItemSelect","onRightItemSelect","onRightItemRemove","includes","handleScroll","onScroll","handleLeftScroll","handleRightScroll","handleListStyle","listStyle","getTitles","_a","_b","titles","onSelectChange","separateDataSource","rowKey","leftDataSource","rightDataSource","length","targetKeysMap","forEach","record","get","render","componentName","contextLocale","_ref3","getPrefixCls","Consumer","_ref4","hasFeedback","status","contextStatus","customizePrefixCls","disabled","operations","showSearch","footer","operationStyle","filterOption","showSelectAll","oneWay","pagination","customStatus","mergedStatus","mergedPagination","leftActive","rightActive","cls","selectAllLabels","titleText","checkedKeys","renderList","selectAllLabel","rightArrowText","leftArrowText","onItemRemove","showRemove","getDerivedStateFromProps","_ref5","mergedTargetKeys","process","env","NODE_ENV","Component"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\nimport defaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport { FormItemInputContext } from '../form/context';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { groupKeysMap, groupDisabledKeysMap } from '../_util/transKeys';\nimport warning from '../_util/warning';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport useStyle from './style';\nconst TransferFC = props => {\n  const {\n    prefixCls\n  } = props;\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(props.className, hashId),\n    style: props.style\n  }, props.children));\n};\nlet Transfer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Transfer, _React$Component);\n  var _super = _createSuper(Transfer);\n  function Transfer(props) {\n    var _this;\n    _classCallCheck(this, Transfer);\n    _this = _super.call(this, props);\n    _this.separatedDataSource = null;\n    _this.setStateKeys = (direction, keys) => {\n      if (direction === 'left') {\n        _this.setState(_ref => {\n          let {\n            sourceSelectedKeys\n          } = _ref;\n          return {\n            sourceSelectedKeys: typeof keys === 'function' ? keys(sourceSelectedKeys || []) : keys\n          };\n        });\n      } else {\n        _this.setState(_ref2 => {\n          let {\n            targetSelectedKeys\n          } = _ref2;\n          return {\n            targetSelectedKeys: typeof keys === 'function' ? keys(targetSelectedKeys || []) : keys\n          };\n        });\n      }\n    };\n    _this.getLocale = (transferLocale, renderEmpty) => {\n      const {\n        locale = {}\n      } = _this.props;\n      return Object.assign(Object.assign(Object.assign({}, transferLocale), {\n        notFoundContent: renderEmpty('Transfer')\n      }), locale);\n    };\n    _this.moveTo = direction => {\n      const {\n        targetKeys = [],\n        dataSource = [],\n        onChange\n      } = _this.props;\n      const {\n        sourceSelectedKeys,\n        targetSelectedKeys\n      } = _this.state;\n      const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n      const dataSourceDisabledKeysMap = groupDisabledKeysMap(dataSource);\n      // filter the disabled options\n      const newMoveKeys = moveKeys.filter(key => !dataSourceDisabledKeysMap.has(key));\n      const newMoveKeysMap = groupKeysMap(newMoveKeys);\n      // move items to target box\n      const newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(targetKey => !newMoveKeysMap.has(targetKey));\n      // empty checked keys\n      const oppositeDirection = direction === 'right' ? 'left' : 'right';\n      _this.setStateKeys(oppositeDirection, []);\n      _this.handleSelectChange(oppositeDirection, []);\n      onChange === null || onChange === void 0 ? void 0 : onChange(newTargetKeys, direction, newMoveKeys);\n    };\n    _this.moveToLeft = () => _this.moveTo('left');\n    _this.moveToRight = () => _this.moveTo('right');\n    _this.onItemSelectAll = (direction, selectedKeys, checkAll) => {\n      _this.setStateKeys(direction, prevKeys => {\n        let mergedCheckedKeys = [];\n        if (checkAll) {\n          // Merge current keys with origin key\n          mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(prevKeys), _toConsumableArray(selectedKeys))));\n        } else {\n          const selectedKeysMap = groupKeysMap(selectedKeys);\n          // Remove current keys from origin keys\n          mergedCheckedKeys = prevKeys.filter(key => !selectedKeysMap.has(key));\n        }\n        _this.handleSelectChange(direction, mergedCheckedKeys);\n        return mergedCheckedKeys;\n      });\n    };\n    _this.onLeftItemSelectAll = (selectedKeys, checkAll) => _this.onItemSelectAll('left', selectedKeys, checkAll);\n    _this.onRightItemSelectAll = (selectedKeys, checkAll) => _this.onItemSelectAll('right', selectedKeys, checkAll);\n    _this.handleFilter = (direction, e) => {\n      const {\n        onSearch\n      } = _this.props;\n      const {\n        value\n      } = e.target;\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(direction, value);\n    };\n    _this.handleLeftFilter = e => _this.handleFilter('left', e);\n    _this.handleRightFilter = e => _this.handleFilter('right', e);\n    _this.handleClear = direction => {\n      const {\n        onSearch\n      } = _this.props;\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(direction, '');\n    };\n    _this.handleLeftClear = () => _this.handleClear('left');\n    _this.handleRightClear = () => _this.handleClear('right');\n    _this.onItemSelect = (direction, selectedKey, checked) => {\n      const {\n        sourceSelectedKeys,\n        targetSelectedKeys\n      } = _this.state;\n      const holder = direction === 'left' ? _toConsumableArray(sourceSelectedKeys) : _toConsumableArray(targetSelectedKeys);\n      const index = holder.indexOf(selectedKey);\n      if (index > -1) {\n        holder.splice(index, 1);\n      }\n      if (checked) {\n        holder.push(selectedKey);\n      }\n      _this.handleSelectChange(direction, holder);\n      if (!_this.props.selectedKeys) {\n        _this.setStateKeys(direction, holder);\n      }\n    };\n    _this.onLeftItemSelect = (selectedKey, checked) => _this.onItemSelect('left', selectedKey, checked);\n    _this.onRightItemSelect = (selectedKey, checked) => _this.onItemSelect('right', selectedKey, checked);\n    _this.onRightItemRemove = selectedKeys => {\n      const {\n        targetKeys = [],\n        onChange\n      } = _this.props;\n      _this.setStateKeys('right', []);\n      onChange === null || onChange === void 0 ? void 0 : onChange(targetKeys.filter(key => !selectedKeys.includes(key)), 'left', _toConsumableArray(selectedKeys));\n    };\n    _this.handleScroll = (direction, e) => {\n      const {\n        onScroll\n      } = _this.props;\n      onScroll === null || onScroll === void 0 ? void 0 : onScroll(direction, e);\n    };\n    _this.handleLeftScroll = e => _this.handleScroll('left', e);\n    _this.handleRightScroll = e => _this.handleScroll('right', e);\n    // eslint-disable-next-line class-methods-use-this\n    _this.handleListStyle = (listStyle, direction) => {\n      if (typeof listStyle === 'function') {\n        return listStyle({\n          direction\n        });\n      }\n      return listStyle;\n    };\n    const {\n      selectedKeys = [],\n      targetKeys = []\n    } = props;\n    _this.state = {\n      sourceSelectedKeys: selectedKeys.filter(key => !targetKeys.includes(key)),\n      targetSelectedKeys: selectedKeys.filter(key => targetKeys.includes(key))\n    };\n    return _this;\n  }\n  _createClass(Transfer, [{\n    key: \"getTitles\",\n    value: function getTitles(transferLocale) {\n      var _a, _b;\n      return (_b = (_a = this.props.titles) !== null && _a !== void 0 ? _a : transferLocale.titles) !== null && _b !== void 0 ? _b : [];\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(direction, holder) {\n      const {\n        sourceSelectedKeys,\n        targetSelectedKeys\n      } = this.state;\n      const {\n        onSelectChange\n      } = this.props;\n      if (!onSelectChange) {\n        return;\n      }\n      if (direction === 'left') {\n        onSelectChange(holder, targetSelectedKeys);\n      } else {\n        onSelectChange(sourceSelectedKeys, holder);\n      }\n    }\n  }, {\n    key: \"separateDataSource\",\n    value: function separateDataSource() {\n      const {\n        dataSource = [],\n        rowKey,\n        targetKeys = []\n      } = this.props;\n      const leftDataSource = [];\n      const rightDataSource = new Array(targetKeys.length);\n      const targetKeysMap = groupKeysMap(targetKeys);\n      dataSource.forEach(record => {\n        if (rowKey) {\n          record = Object.assign(Object.assign({}, record), {\n            key: rowKey(record)\n          });\n        }\n        // rightDataSource should be ordered by targetKeys\n        // leftDataSource should be ordered by dataSource\n        if (targetKeysMap.has(record.key)) {\n          rightDataSource[targetKeysMap.get(record.key)] = record;\n        } else {\n          leftDataSource.push(record);\n        }\n      });\n      return {\n        leftDataSource,\n        rightDataSource\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(LocaleReceiver, {\n        componentName: \"Transfer\",\n        defaultLocale: defaultLocale.Transfer\n      }, contextLocale => /*#__PURE__*/React.createElement(ConfigConsumer, null, _ref3 => {\n        let {\n          getPrefixCls,\n          renderEmpty,\n          direction\n        } = _ref3;\n        return /*#__PURE__*/React.createElement(FormItemInputContext.Consumer, null, _ref4 => {\n          let {\n            hasFeedback,\n            status: contextStatus\n          } = _ref4;\n          const {\n            prefixCls: customizePrefixCls,\n            className,\n            disabled,\n            operations = [],\n            showSearch = false,\n            footer,\n            style,\n            listStyle = {},\n            operationStyle,\n            filterOption,\n            render,\n            children,\n            showSelectAll,\n            oneWay,\n            pagination,\n            status: customStatus\n          } = this.props;\n          const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n          const locale = this.getLocale(contextLocale, renderEmpty || defaultRenderEmpty);\n          const {\n            sourceSelectedKeys,\n            targetSelectedKeys\n          } = this.state;\n          const mergedStatus = getMergedStatus(contextStatus, customStatus);\n          const mergedPagination = !children && pagination;\n          const {\n            leftDataSource,\n            rightDataSource\n          } = this.separateDataSource();\n          const leftActive = targetSelectedKeys.length > 0;\n          const rightActive = sourceSelectedKeys.length > 0;\n          const cls = classNames(prefixCls, {\n            [`${prefixCls}-disabled`]: disabled,\n            [`${prefixCls}-customize-list`]: !!children,\n            [`${prefixCls}-rtl`]: direction === 'rtl'\n          }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), className);\n          const titles = this.getTitles(locale);\n          const selectAllLabels = this.props.selectAllLabels || [];\n          return /*#__PURE__*/React.createElement(TransferFC, {\n            prefixCls: prefixCls,\n            className: cls,\n            style: style\n          }, /*#__PURE__*/React.createElement(List, Object.assign({\n            prefixCls: `${prefixCls}-list`,\n            titleText: titles === null || titles === void 0 ? void 0 : titles[0],\n            dataSource: leftDataSource,\n            filterOption: filterOption,\n            style: this.handleListStyle(listStyle, 'left'),\n            checkedKeys: sourceSelectedKeys,\n            handleFilter: this.handleLeftFilter,\n            handleClear: this.handleLeftClear,\n            onItemSelect: this.onLeftItemSelect,\n            onItemSelectAll: this.onLeftItemSelectAll,\n            render: render,\n            showSearch: showSearch,\n            renderList: children,\n            footer: footer,\n            onScroll: this.handleLeftScroll,\n            disabled: disabled,\n            direction: direction === 'rtl' ? 'right' : 'left',\n            showSelectAll: showSelectAll,\n            selectAllLabel: selectAllLabels[0],\n            pagination: mergedPagination\n          }, locale)), /*#__PURE__*/React.createElement(Operation, {\n            className: `${prefixCls}-operation`,\n            rightActive: rightActive,\n            rightArrowText: operations[0],\n            moveToRight: this.moveToRight,\n            leftActive: leftActive,\n            leftArrowText: operations[1],\n            moveToLeft: this.moveToLeft,\n            style: operationStyle,\n            disabled: disabled,\n            direction: direction,\n            oneWay: oneWay\n          }), /*#__PURE__*/React.createElement(List, Object.assign({\n            prefixCls: `${prefixCls}-list`,\n            titleText: titles === null || titles === void 0 ? void 0 : titles[1],\n            dataSource: rightDataSource,\n            filterOption: filterOption,\n            style: this.handleListStyle(listStyle, 'right'),\n            checkedKeys: targetSelectedKeys,\n            handleFilter: this.handleRightFilter,\n            handleClear: this.handleRightClear,\n            onItemSelect: this.onRightItemSelect,\n            onItemSelectAll: this.onRightItemSelectAll,\n            onItemRemove: this.onRightItemRemove,\n            render: render,\n            showSearch: showSearch,\n            renderList: children,\n            footer: footer,\n            onScroll: this.handleRightScroll,\n            disabled: disabled,\n            direction: direction === 'rtl' ? 'left' : 'right',\n            showSelectAll: showSelectAll,\n            selectAllLabel: selectAllLabels[1],\n            showRemove: oneWay,\n            pagination: mergedPagination\n          }, locale)));\n        });\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref5) {\n      let {\n        selectedKeys,\n        targetKeys,\n        pagination,\n        children\n      } = _ref5;\n      if (selectedKeys) {\n        const mergedTargetKeys = targetKeys || [];\n        return {\n          sourceSelectedKeys: selectedKeys.filter(key => !mergedTargetKeys.includes(key)),\n          targetSelectedKeys: selectedKeys.filter(key => mergedTargetKeys.includes(key))\n        };\n      }\n      process.env.NODE_ENV !== \"production\" ? warning(!pagination || !children, 'Transfer', '`pagination` not support customize render list.') : void 0;\n      return null;\n    }\n  }]);\n  return Transfer;\n}(React.Component); // For high-level customized Transfer @dqaria\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nexport default Transfer;"]},"metadata":{},"sourceType":"module"}