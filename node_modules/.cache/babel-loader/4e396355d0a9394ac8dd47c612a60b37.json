{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport DeleteOutlined from \"@ant-design/icons/es/icons/DeleteOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from '../checkbox';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport TransButton from '../_util/transButton';\n\nvar ListItem = function ListItem(props) {\n  var _classNames;\n\n  var renderedText = props.renderedText,\n      renderedEl = props.renderedEl,\n      item = props.item,\n      checked = props.checked,\n      disabled = props.disabled,\n      prefixCls = props.prefixCls,\n      onClick = props.onClick,\n      onRemove = props.onRemove,\n      showRemove = props.showRemove;\n  var className = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item-disabled\"), disabled || item.disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item-checked\"), checked), _classNames));\n  var title;\n\n  if (typeof renderedText === 'string' || typeof renderedText === 'number') {\n    title = String(renderedText);\n  }\n\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Transfer\",\n    defaultLocale: defaultLocale.Transfer\n  }, function (contextLocale) {\n    var liProps = {\n      className: className,\n      title: title\n    };\n    var labelNode = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-content-item-text\")\n    }, renderedEl); // Show remove\n\n    if (showRemove) {\n      return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, liProps), labelNode, /*#__PURE__*/React.createElement(TransButton, {\n        disabled: disabled || item.disabled,\n        className: \"\".concat(prefixCls, \"-content-item-remove\"),\n        \"aria-label\": contextLocale.remove,\n        onClick: function onClick() {\n          onRemove === null || onRemove === void 0 ? void 0 : onRemove(item);\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, null)));\n    } // Default click to select\n\n\n    liProps.onClick = disabled || item.disabled ? undefined : function () {\n      return onClick(item);\n    };\n    return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, liProps), /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"\".concat(prefixCls, \"-checkbox\"),\n      checked: checked,\n      disabled: disabled || item.disabled\n    }), labelNode);\n  });\n};\n\nexport default /*#__PURE__*/React.memo(ListItem);","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/transfer/ListItem.js"],"names":["DeleteOutlined","classNames","React","Checkbox","LocaleReceiver","defaultLocale","TransButton","ListItem","props","renderedText","renderedEl","item","checked","disabled","prefixCls","onClick","onRemove","showRemove","className","title","String","createElement","componentName","Transfer","contextLocale","liProps","labelNode","Object","assign","remove","undefined","memo"],"mappings":"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","sourcesContent":["import DeleteOutlined from \"@ant-design/icons/es/icons/DeleteOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from '../checkbox';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport TransButton from '../_util/transButton';\nconst ListItem = props => {\n  const {\n    renderedText,\n    renderedEl,\n    item,\n    checked,\n    disabled,\n    prefixCls,\n    onClick,\n    onRemove,\n    showRemove\n  } = props;\n  const className = classNames({\n    [`${prefixCls}-content-item`]: true,\n    [`${prefixCls}-content-item-disabled`]: disabled || item.disabled,\n    [`${prefixCls}-content-item-checked`]: checked\n  });\n  let title;\n  if (typeof renderedText === 'string' || typeof renderedText === 'number') {\n    title = String(renderedText);\n  }\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Transfer\",\n    defaultLocale: defaultLocale.Transfer\n  }, contextLocale => {\n    const liProps = {\n      className,\n      title\n    };\n    const labelNode = /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-content-item-text`\n    }, renderedEl);\n    // Show remove\n    if (showRemove) {\n      return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, liProps), labelNode, /*#__PURE__*/React.createElement(TransButton, {\n        disabled: disabled || item.disabled,\n        className: `${prefixCls}-content-item-remove`,\n        \"aria-label\": contextLocale.remove,\n        onClick: () => {\n          onRemove === null || onRemove === void 0 ? void 0 : onRemove(item);\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, null)));\n    }\n    // Default click to select\n    liProps.onClick = disabled || item.disabled ? undefined : () => onClick(item);\n    return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, liProps), /*#__PURE__*/React.createElement(Checkbox, {\n      className: `${prefixCls}-checkbox`,\n      checked: checked,\n      disabled: disabled || item.disabled\n    }), labelNode);\n  });\n};\nexport default /*#__PURE__*/React.memo(ListItem);"]},"metadata":{},"sourceType":"module"}