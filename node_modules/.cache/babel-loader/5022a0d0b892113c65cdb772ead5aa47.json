{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classNames from 'classnames';\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nconst Typography = /*#__PURE__*/React.forwardRef((_a, ref) => {\n  var {\n    prefixCls: customizePrefixCls,\n    component: Component = 'article',\n    className,\n    setContentRef,\n    children,\n    direction: typographyDirection\n  } = _a,\n      restProps = __rest(_a, [\"prefixCls\", \"component\", \"className\", \"setContentRef\", \"children\", \"direction\"]);\n\n  const {\n    getPrefixCls,\n    direction: contextDirection\n  } = React.useContext(ConfigContext);\n  const direction = typographyDirection !== null && typographyDirection !== void 0 ? typographyDirection : contextDirection;\n  let mergedRef = ref;\n\n  if (setContentRef) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Typography', '`setContentRef` is deprecated. Please use `ref` instead.') : void 0;\n    mergedRef = composeRef(ref, setContentRef);\n  }\n\n  const prefixCls = getPrefixCls('typography', customizePrefixCls); // Style\n\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const componentClassName = classNames(prefixCls, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, hashId);\n  return wrapSSR(\n  /*#__PURE__*/\n  // @ts-expect-error: Expression produces a union type that is too complex to represent.\n  React.createElement(Component, Object.assign({\n    className: componentClassName,\n    ref: mergedRef\n  }, restProps), children));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Typography.displayName = 'Typography';\n} // es default export should use const instead of let\n\n\nexport default Typography;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/typography/Typography.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","classNames","composeRef","React","ConfigContext","warning","useStyle","Typography","forwardRef","_a","ref","prefixCls","customizePrefixCls","component","Component","className","setContentRef","children","direction","typographyDirection","restProps","getPrefixCls","contextDirection","useContext","mergedRef","process","env","NODE_ENV","wrapSSR","hashId","componentClassName","createElement","assign","displayName"],"mappings":"AAAA,IAAIA,MAAM,GAAG,QAAQ,KAAKA,MAAb,IAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIC,CAAT,IAAcH,CAAd,EAAiB,IAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCG,CAAxC,KAA8CF,CAAC,CAACO,OAAF,CAAUL,CAAV,IAAe,CAAjE,EAAoED,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;;AACrF,MAAIH,CAAC,IAAI,IAAL,IAAa,OAAOI,MAAM,CAACK,qBAAd,KAAwC,UAAzD,EAAqE,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWP,CAAC,GAAGC,MAAM,CAACK,qBAAP,CAA6BT,CAA7B,CAApB,EAAqDU,CAAC,GAAGP,CAAC,CAACQ,MAA3D,EAAmED,CAAC,EAApE,EAAwE;AAC3I,QAAIT,CAAC,CAACO,OAAF,CAAUL,CAAC,CAACO,CAAD,CAAX,IAAkB,CAAlB,IAAuBN,MAAM,CAACC,SAAP,CAAiBO,oBAAjB,CAAsCL,IAAtC,CAA2CP,CAA3C,EAA8CG,CAAC,CAACO,CAAD,CAA/C,CAA3B,EAAgFR,CAAC,CAACC,CAAC,CAACO,CAAD,CAAF,CAAD,GAAUV,CAAC,CAACG,CAAC,CAACO,CAAD,CAAF,CAAX;AACjF;AACD,SAAOR,CAAP;AACD,CAPD;;AAQA,OAAOW,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,MAAMC,UAAU,GAAG,aAAaJ,KAAK,CAACK,UAAN,CAAiB,CAACC,EAAD,EAAKC,GAAL,KAAa;AAC5D,MAAI;AACAC,IAAAA,SAAS,EAAEC,kBADX;AAEAC,IAAAA,SAAS,EAAEC,SAAS,GAAG,SAFvB;AAGAC,IAAAA,SAHA;AAIAC,IAAAA,aAJA;AAKAC,IAAAA,QALA;AAMAC,IAAAA,SAAS,EAAEC;AANX,MAOEV,EAPN;AAAA,MAQEW,SAAS,GAAGjC,MAAM,CAACsB,EAAD,EAAK,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,EAAwC,eAAxC,EAAyD,UAAzD,EAAqE,WAArE,CAAL,CARpB;;AASA,QAAM;AACJY,IAAAA,YADI;AAEJH,IAAAA,SAAS,EAAEI;AAFP,MAGFnB,KAAK,CAACoB,UAAN,CAAiBnB,aAAjB,CAHJ;AAIA,QAAMc,SAAS,GAAGC,mBAAmB,KAAK,IAAxB,IAAgCA,mBAAmB,KAAK,KAAK,CAA7D,GAAiEA,mBAAjE,GAAuFG,gBAAzG;AACA,MAAIE,SAAS,GAAGd,GAAhB;;AACA,MAAIM,aAAJ,EAAmB;AACjBS,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCtB,OAAO,CAAC,KAAD,EAAQ,YAAR,EAAsB,0DAAtB,CAA/C,GAAmI,KAAK,CAAxI;AACAmB,IAAAA,SAAS,GAAGtB,UAAU,CAACQ,GAAD,EAAMM,aAAN,CAAtB;AACD;;AACD,QAAML,SAAS,GAAGU,YAAY,CAAC,YAAD,EAAeT,kBAAf,CAA9B,CApB4D,CAqB5D;;AACA,QAAM,CAACgB,OAAD,EAAUC,MAAV,IAAoBvB,QAAQ,CAACK,SAAD,CAAlC;AACA,QAAMmB,kBAAkB,GAAG7B,UAAU,CAACU,SAAD,EAAY;AAC/C,KAAE,GAAEA,SAAU,MAAd,GAAsBO,SAAS,KAAK;AADW,GAAZ,EAElCH,SAFkC,EAEvBc,MAFuB,CAArC;AAGA,SAAOD,OAAO;AACd;AACA;AACAzB,EAAAA,KAAK,CAAC4B,aAAN,CAAoBjB,SAApB,EAA+BtB,MAAM,CAACwC,MAAP,CAAc;AAC3CjB,IAAAA,SAAS,EAAEe,kBADgC;AAE3CpB,IAAAA,GAAG,EAAEc;AAFsC,GAAd,EAG5BJ,SAH4B,CAA/B,EAGeH,QAHf,CAHc,CAAd;AAOD,CAjC+B,CAAhC;;AAkCA,IAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCpB,EAAAA,UAAU,CAAC0B,WAAX,GAAyB,YAAzB;AACD,C,CACD;;;AACA,eAAe1B,UAAf","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nconst Typography = /*#__PURE__*/React.forwardRef((_a, ref) => {\n  var {\n      prefixCls: customizePrefixCls,\n      component: Component = 'article',\n      className,\n      setContentRef,\n      children,\n      direction: typographyDirection\n    } = _a,\n    restProps = __rest(_a, [\"prefixCls\", \"component\", \"className\", \"setContentRef\", \"children\", \"direction\"]);\n  const {\n    getPrefixCls,\n    direction: contextDirection\n  } = React.useContext(ConfigContext);\n  const direction = typographyDirection !== null && typographyDirection !== void 0 ? typographyDirection : contextDirection;\n  let mergedRef = ref;\n  if (setContentRef) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Typography', '`setContentRef` is deprecated. Please use `ref` instead.') : void 0;\n    mergedRef = composeRef(ref, setContentRef);\n  }\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const componentClassName = classNames(prefixCls, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, hashId);\n  return wrapSSR(\n  /*#__PURE__*/\n  // @ts-expect-error: Expression produces a union type that is too complex to represent.\n  React.createElement(Component, Object.assign({\n    className: componentClassName,\n    ref: mergedRef\n  }, restProps), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Typography.displayName = 'Typography';\n}\n// es default export should use const instead of let\nexport default Typography;"]},"metadata":{},"sourceType":"module"}