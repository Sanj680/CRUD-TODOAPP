{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\src\\\\components\\\\Todo.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo({\n  todo\n}) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!newName.trim()) {\n      return;\n    }\n\n    todo.editTask(todo.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = /*#__PURE__*/React.createElement(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"New name for \", todo.name), /*#__PURE__*/React.createElement(\"input\", {\n    id: todo.id,\n    className: \"todo-text\",\n    type: \"text\",\n    value: newName || todo.name,\n    onChange: handleChange,\n    ref: editFieldRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn todo-cancel\",\n    onClick: () => setEditing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Cancel\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"renaming \", todo.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn__primary todo-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Save\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"new name for \", todo.name))));\n  const viewTemplate = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: todo.id,\n    type: \"checkbox\",\n    defaultChecked: todo.completed,\n    onChange: () => todo.toggleTaskCompleted(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, todo.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn\",\n    onClick: () => setEditing(true),\n    ref: editButtonRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }\n  }, todo.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn__danger\",\n    onClick: () => todo.deleteTask(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Delete \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 20\n    }\n  }, todo.name))));\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 10\n    }\n  }, isEditing ? editingTemplate : viewTemplate);\n}","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/src/components/Todo.js"],"names":["React","useEffect","useRef","useState","usePrevious","value","ref","current","Todo","todo","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","wasEditing","handleChange","e","target","handleSubmit","preventDefault","trim","editTask","id","editingTemplate","name","viewTemplate","completed","toggleTaskCompleted","deleteTask","focus"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo({todo}) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    todo.editTask(todo.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={todo.id}>\n          New name for {todo.name}\n        </label>\n        <input\n          id={todo.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName || todo.name}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {todo.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {todo.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={todo.id}\n            type=\"checkbox\"\n            defaultChecked={todo.completed}\n            onChange={() => todo.toggleTaskCompleted(todo.id)}\n          />\n          <label className=\"todo-label\" htmlFor={todo.id}>\n            {todo.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{todo.name}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => todo.deleteTask(todo.id)}\n          >\n            Delete <span className=\"visually-hidden\">{todo.name}</span>\n          </button>\n        </div>\n    </div>\n  );\n\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n"]},"metadata":{},"sourceType":"module"}