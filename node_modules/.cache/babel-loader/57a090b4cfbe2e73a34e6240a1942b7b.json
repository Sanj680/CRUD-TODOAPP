{"ast":null,"code":"import classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport { cloneElement } from '../_util/reactNode';\nimport Avatar from './avatar';\nimport { SizeContextProvider } from './SizeContext';\nimport useStyle from './style';\n\nconst Group = props => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className = '',\n    maxCount,\n    maxStyle,\n    size\n  } = props;\n  const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, className, hashId);\n  const {\n    children,\n    maxPopoverPlacement = 'top',\n    maxPopoverTrigger = 'hover'\n  } = props;\n  const childrenWithProps = toArray(children).map((child, index) => cloneElement(child, {\n    key: `avatar-key-${index}`\n  }));\n  const numOfChildren = childrenWithProps.length;\n\n  if (maxCount && maxCount < numOfChildren) {\n    const childrenShow = childrenWithProps.slice(0, maxCount);\n    const childrenHidden = childrenWithProps.slice(maxCount, numOfChildren);\n    childrenShow.push( /*#__PURE__*/React.createElement(Popover, {\n      key: \"avatar-popover-key\",\n      content: childrenHidden,\n      trigger: maxPopoverTrigger,\n      placement: maxPopoverPlacement,\n      overlayClassName: `${groupPrefixCls}-popover`\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      style: maxStyle\n    }, `+${numOfChildren - maxCount}`)));\n    return wrapSSR( /*#__PURE__*/React.createElement(SizeContextProvider, {\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: props.style\n    }, childrenShow)));\n  }\n\n  return wrapSSR( /*#__PURE__*/React.createElement(SizeContextProvider, {\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: props.style\n  }, childrenWithProps)));\n};\n\nexport default Group;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/avatar/group.js"],"names":["classNames","toArray","React","ConfigContext","Popover","cloneElement","Avatar","SizeContextProvider","useStyle","Group","props","getPrefixCls","direction","useContext","prefixCls","customizePrefixCls","className","maxCount","maxStyle","size","groupPrefixCls","wrapSSR","hashId","cls","children","maxPopoverPlacement","maxPopoverTrigger","childrenWithProps","map","child","index","key","numOfChildren","length","childrenShow","slice","childrenHidden","push","createElement","content","trigger","placement","overlayClassName","style"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport { cloneElement } from '../_util/reactNode';\nimport Avatar from './avatar';\nimport { SizeContextProvider } from './SizeContext';\nimport useStyle from './style';\nconst Group = props => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className = '',\n    maxCount,\n    maxStyle,\n    size\n  } = props;\n  const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, className, hashId);\n  const {\n    children,\n    maxPopoverPlacement = 'top',\n    maxPopoverTrigger = 'hover'\n  } = props;\n  const childrenWithProps = toArray(children).map((child, index) => cloneElement(child, {\n    key: `avatar-key-${index}`\n  }));\n  const numOfChildren = childrenWithProps.length;\n  if (maxCount && maxCount < numOfChildren) {\n    const childrenShow = childrenWithProps.slice(0, maxCount);\n    const childrenHidden = childrenWithProps.slice(maxCount, numOfChildren);\n    childrenShow.push( /*#__PURE__*/React.createElement(Popover, {\n      key: \"avatar-popover-key\",\n      content: childrenHidden,\n      trigger: maxPopoverTrigger,\n      placement: maxPopoverPlacement,\n      overlayClassName: `${groupPrefixCls}-popover`\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      style: maxStyle\n    }, `+${numOfChildren - maxCount}`)));\n    return wrapSSR( /*#__PURE__*/React.createElement(SizeContextProvider, {\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: props.style\n    }, childrenShow)));\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(SizeContextProvider, {\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: props.style\n  }, childrenWithProps)));\n};\nexport default Group;"]},"metadata":{},"sourceType":"module"}