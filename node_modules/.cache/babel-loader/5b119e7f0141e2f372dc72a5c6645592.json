{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar genSelectionStyle = function genSelectionStyle(token) {\n  var _$concat2;\n\n  var componentCls = token.componentCls,\n      antCls = token.antCls,\n      iconCls = token.iconCls,\n      fontSizeIcon = token.fontSizeIcon,\n      paddingXS = token.paddingXS,\n      tableHeaderIconColor = token.tableHeaderIconColor,\n      tableHeaderIconColorHover = token.tableHeaderIconColorHover;\n  return _defineProperty({}, \"\".concat(componentCls, \"-wrapper\"), (_$concat2 = {}, _defineProperty(_$concat2, \"\".concat(componentCls, \"-selection-col\"), {\n    width: token.tableSelectionColumnWidth\n  }), _defineProperty(_$concat2, \"\".concat(componentCls, \"-bordered \").concat(componentCls, \"-selection-col\"), {\n    width: token.tableSelectionColumnWidth + paddingXS * 2\n  }), _defineProperty(_$concat2, \"\\n        table tr th\".concat(componentCls, \"-selection-column,\\n        table tr td\").concat(componentCls, \"-selection-column\\n      \"), _defineProperty({\n    paddingInlineEnd: token.paddingXS,\n    paddingInlineStart: token.paddingXS,\n    textAlign: 'center'\n  }, \"\".concat(antCls, \"-radio-wrapper\"), {\n    marginInlineEnd: 0\n  })), _defineProperty(_$concat2, \"table tr th\".concat(componentCls, \"-selection-column\").concat(componentCls, \"-cell-fix-left\"), {\n    zIndex: token.zIndexTableFixed\n  }), _defineProperty(_$concat2, \"table tr th\".concat(componentCls, \"-selection-column::after\"), {\n    backgroundColor: 'transparent !important'\n  }), _defineProperty(_$concat2, \"\".concat(componentCls, \"-selection\"), {\n    position: 'relative',\n    display: 'inline-flex',\n    flexDirection: 'column'\n  }), _defineProperty(_$concat2, \"\".concat(componentCls, \"-selection-extra\"), _defineProperty({\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    cursor: 'pointer',\n    transition: \"all \".concat(token.motionDurationSlow),\n    marginInlineStart: '100%',\n    paddingInlineStart: \"\".concat(token.tablePaddingHorizontal / 4, \"px\")\n  }, iconCls, {\n    color: tableHeaderIconColor,\n    fontSize: fontSizeIcon,\n    verticalAlign: 'baseline',\n    '&:hover': {\n      color: tableHeaderIconColorHover\n    }\n  })), _$concat2));\n};\n\nexport default genSelectionStyle;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/table/style/selection.js"],"names":["genSelectionStyle","token","componentCls","antCls","iconCls","fontSizeIcon","paddingXS","tableHeaderIconColor","tableHeaderIconColorHover","width","tableSelectionColumnWidth","paddingInlineEnd","paddingInlineStart","textAlign","marginInlineEnd","zIndex","zIndexTableFixed","backgroundColor","position","display","flexDirection","top","cursor","transition","motionDurationSlow","marginInlineStart","tablePaddingHorizontal","color","fontSize","verticalAlign"],"mappings":";;AAAA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAAA;;AAAA,MAE/BC,YAF+B,GAS7BD,KAT6B,CAE/BC,YAF+B;AAAA,MAG/BC,MAH+B,GAS7BF,KAT6B,CAG/BE,MAH+B;AAAA,MAI/BC,OAJ+B,GAS7BH,KAT6B,CAI/BG,OAJ+B;AAAA,MAK/BC,YAL+B,GAS7BJ,KAT6B,CAK/BI,YAL+B;AAAA,MAM/BC,SAN+B,GAS7BL,KAT6B,CAM/BK,SAN+B;AAAA,MAO/BC,oBAP+B,GAS7BN,KAT6B,CAO/BM,oBAP+B;AAAA,MAQ/BC,yBAR+B,GAS7BP,KAT6B,CAQ/BO,yBAR+B;AAUjC,uCACMN,YADN,qEAGQA,YAHR,qBAGuC;AACjCO,IAAAA,KAAK,EAAER,KAAK,CAACS;AADoB,GAHvC,wCAMQR,YANR,uBAMiCA,YANjC,qBAMgE;AAC1DO,IAAAA,KAAK,EAAER,KAAK,CAACS,yBAAN,GAAkCJ,SAAS,GAAG;AADK,GANhE,6DAUmBJ,YAVnB,oDAWmBA,YAXnB;AAaMS,IAAAA,gBAAgB,EAAEV,KAAK,CAACK,SAb9B;AAcMM,IAAAA,kBAAkB,EAAEX,KAAK,CAACK,SAdhC;AAeMO,IAAAA,SAAS,EAAE;AAfjB,eAgBUV,MAhBV,qBAgBmC;AAC3BW,IAAAA,eAAe,EAAE;AADU,GAhBnC,oDAoBmBZ,YApBnB,8BAoBmDA,YApBnD,qBAoBkF;AAC5Ea,IAAAA,MAAM,EAAEd,KAAK,CAACe;AAD8D,GApBlF,mDAuBmBd,YAvBnB,+BAuB4D;AACtDe,IAAAA,eAAe,EAAE;AADqC,GAvB5D,wCA0BQf,YA1BR,iBA0BmC;AAC7BgB,IAAAA,QAAQ,EAAE,UADmB;AAE7BC,IAAAA,OAAO,EAAE,aAFoB;AAG7BC,IAAAA,aAAa,EAAE;AAHc,GA1BnC,wCA+BQlB,YA/BR;AAgCMgB,IAAAA,QAAQ,EAAE,UAhChB;AAiCMG,IAAAA,GAAG,EAAE,CAjCX;AAkCMN,IAAAA,MAAM,EAAE,CAlCd;AAmCMO,IAAAA,MAAM,EAAE,SAnCd;AAoCMC,IAAAA,UAAU,gBAAStB,KAAK,CAACuB,kBAAf,CApChB;AAqCMC,IAAAA,iBAAiB,EAAE,MArCzB;AAsCMb,IAAAA,kBAAkB,YAAKX,KAAK,CAACyB,sBAAN,GAA+B,CAApC;AAtCxB,KAuCOtB,OAvCP,EAuCiB;AACTuB,IAAAA,KAAK,EAAEpB,oBADE;AAETqB,IAAAA,QAAQ,EAAEvB,YAFD;AAGTwB,IAAAA,aAAa,EAAE,UAHN;AAIT,eAAW;AACTF,MAAAA,KAAK,EAAEnB;AADE;AAJF,GAvCjB;AAkDD,CA5DD;;AA6DA,eAAeR,iBAAf","sourcesContent":["const genSelectionStyle = token => {\n  const {\n    componentCls,\n    antCls,\n    iconCls,\n    fontSizeIcon,\n    paddingXS,\n    tableHeaderIconColor,\n    tableHeaderIconColorHover\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ========================== Selections ==========================\n      [`${componentCls}-selection-col`]: {\n        width: token.tableSelectionColumnWidth\n      },\n      [`${componentCls}-bordered ${componentCls}-selection-col`]: {\n        width: token.tableSelectionColumnWidth + paddingXS * 2\n      },\n      [`\n        table tr th${componentCls}-selection-column,\n        table tr td${componentCls}-selection-column\n      `]: {\n        paddingInlineEnd: token.paddingXS,\n        paddingInlineStart: token.paddingXS,\n        textAlign: 'center',\n        [`${antCls}-radio-wrapper`]: {\n          marginInlineEnd: 0\n        }\n      },\n      [`table tr th${componentCls}-selection-column${componentCls}-cell-fix-left`]: {\n        zIndex: token.zIndexTableFixed\n      },\n      [`table tr th${componentCls}-selection-column::after`]: {\n        backgroundColor: 'transparent !important'\n      },\n      [`${componentCls}-selection`]: {\n        position: 'relative',\n        display: 'inline-flex',\n        flexDirection: 'column'\n      },\n      [`${componentCls}-selection-extra`]: {\n        position: 'absolute',\n        top: 0,\n        zIndex: 1,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationSlow}`,\n        marginInlineStart: '100%',\n        paddingInlineStart: `${token.tablePaddingHorizontal / 4}px`,\n        [iconCls]: {\n          color: tableHeaderIconColor,\n          fontSize: fontSizeIcon,\n          verticalAlign: 'baseline',\n          '&:hover': {\n            color: tableHeaderIconColorHover\n          }\n        }\n      }\n    }\n  };\n};\nexport default genSelectionStyle;"]},"metadata":{},"sourceType":"module"}