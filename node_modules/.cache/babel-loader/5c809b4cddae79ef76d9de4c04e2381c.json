{"ast":null,"code":"import RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport classNames from 'classnames';\nimport RcDropdown from 'rc-dropdown';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport Menu from '../menu';\nimport { ConfigContext } from '../config-provider';\nimport { OverrideProvider } from '../menu/OverrideContext';\nimport genPurePanel from '../_util/PurePanel';\nimport getPlacements from '../_util/placements';\nimport { cloneElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nimport { NoCompactStyle } from '../space/Compact';\nimport DropdownButton from './dropdown-button';\nimport useStyle from './style';\nconst Placements = ['topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight', 'top', 'bottom'];\n\nconst Dropdown = props => {\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext); // Warning for deprecated usage\n\n  if (process.env.NODE_ENV !== 'production') {\n    [['visible', 'open'], ['onVisibleChange', 'onOpenChange']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Dropdown', `\\`${deprecatedName}\\` is deprecated which will be removed in next major version, please use \\`${newName}\\` instead.`) : void 0;\n    });\n    process.env.NODE_ENV !== \"production\" ? warning(!('overlay' in props), 'Dropdown', '`overlay` is deprecated. Please use `menu` instead.') : void 0;\n  }\n\n  const getTransitionName = () => {\n    const rootPrefixCls = getPrefixCls();\n    const {\n      placement = '',\n      transitionName\n    } = props;\n\n    if (transitionName !== undefined) {\n      return transitionName;\n    }\n\n    if (placement.includes('top')) {\n      return `${rootPrefixCls}-slide-down`;\n    }\n\n    return `${rootPrefixCls}-slide-up`;\n  };\n\n  const getPlacement = () => {\n    const {\n      placement\n    } = props;\n\n    if (!placement) {\n      return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n    }\n\n    if (placement.includes('Center')) {\n      const newPlacement = placement.slice(0, placement.indexOf('Center'));\n      process.env.NODE_ENV !== \"production\" ? warning(!placement.includes('Center'), 'Dropdown', `You are using '${placement}' placement in Dropdown, which is deprecated. Try to use '${newPlacement}' instead.`) : void 0;\n      return newPlacement;\n    }\n\n    return placement;\n  };\n\n  const {\n    menu,\n    arrow,\n    prefixCls: customizePrefixCls,\n    children,\n    trigger,\n    disabled,\n    dropdownRender,\n    getPopupContainer,\n    overlayClassName,\n    open,\n    onOpenChange,\n    // Deprecated\n    visible,\n    onVisibleChange,\n    mouseEnterDelay = 0.15,\n    mouseLeaveDelay = 0.1\n  } = props;\n\n  if (process.env.NODE_ENV !== 'production') {\n    [['visible', 'open'], ['onVisibleChange', 'onOpenChange']].forEach(_ref2 => {\n      let [deprecatedName, newName] = _ref2;\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Dropdown', `\\`${deprecatedName}\\` is deprecated, please use \\`${newName}\\` instead.`) : void 0;\n    });\n  }\n\n  const prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const child = React.Children.only(children);\n  const dropdownTrigger = cloneElement(child, {\n    className: classNames(`${prefixCls}-trigger`, {\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, child.props.className),\n    disabled\n  });\n  const triggerActions = disabled ? [] : trigger;\n  let alignPoint;\n\n  if (triggerActions && triggerActions.includes('contextMenu')) {\n    alignPoint = true;\n  } // =========================== Open ============================\n\n\n  const [mergedOpen, setOpen] = useMergedState(false, {\n    value: open !== null && open !== void 0 ? open : visible\n  });\n  const onInnerOpenChange = useEvent(nextOpen => {\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(nextOpen);\n    onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(nextOpen);\n    setOpen(nextOpen);\n  }); // =========================== Overlay ============================\n\n  const overlayClassNameCustomized = classNames(overlayClassName, hashId, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  });\n  const builtinPlacements = getPlacements({\n    arrowPointAtCenter: typeof arrow === 'object' && arrow.pointAtCenter,\n    autoAdjustOverflow: true\n  });\n  const onMenuClick = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const renderOverlay = () => {\n    // rc-dropdown already can process the function of overlay, but we have check logic here.\n    // So we need render the element to check and pass back to rc-dropdown.\n    const {\n      overlay\n    } = props;\n    let overlayNode;\n\n    if (menu === null || menu === void 0 ? void 0 : menu.items) {\n      overlayNode = /*#__PURE__*/React.createElement(Menu, Object.assign({}, menu));\n    } else if (typeof overlay === 'function') {\n      overlayNode = overlay();\n    } else {\n      overlayNode = overlay;\n    }\n\n    if (dropdownRender) {\n      overlayNode = dropdownRender(overlayNode);\n    }\n\n    overlayNode = React.Children.only(typeof overlayNode === 'string' ? /*#__PURE__*/React.createElement(\"span\", null, overlayNode) : overlayNode);\n    return /*#__PURE__*/React.createElement(OverrideProvider, {\n      prefixCls: `${prefixCls}-menu`,\n      expandIcon: /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-menu-submenu-arrow`\n      }, /*#__PURE__*/React.createElement(RightOutlined, {\n        className: `${prefixCls}-menu-submenu-arrow-icon`\n      })),\n      mode: \"vertical\",\n      selectable: false,\n      onClick: onMenuClick,\n      validator: _ref3 => {\n        let {\n          mode\n        } = _ref3; // Warning if use other mode\n\n        process.env.NODE_ENV !== \"production\" ? warning(!mode || mode === 'vertical', 'Dropdown', `mode=\"${mode}\" is not supported for Dropdown's Menu.`) : void 0;\n      }\n    }, /*#__PURE__*/React.createElement(NoCompactStyle, null, overlayNode));\n  }; // ============================ Render ============================\n\n\n  return wrapSSR( /*#__PURE__*/React.createElement(RcDropdown, Object.assign({\n    alignPoint: alignPoint\n  }, props, {\n    mouseEnterDelay: mouseEnterDelay,\n    mouseLeaveDelay: mouseLeaveDelay,\n    visible: mergedOpen,\n    builtinPlacements: builtinPlacements,\n    arrow: !!arrow,\n    overlayClassName: overlayClassNameCustomized,\n    prefixCls: prefixCls,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    transitionName: getTransitionName(),\n    trigger: triggerActions,\n    overlay: renderOverlay,\n    placement: getPlacement(),\n    onVisibleChange: onInnerOpenChange\n  }), dropdownTrigger));\n};\n\nDropdown.Button = DropdownButton; // We don't care debug panel\n\nconst PurePanel = genPurePanel(Dropdown, 'dropdown', prefixCls => prefixCls);\n/* istanbul ignore next */\n\nconst WrapPurePanel = props => /*#__PURE__*/React.createElement(PurePanel, Object.assign({}, props), /*#__PURE__*/React.createElement(\"span\", null));\n\nDropdown._InternalPanelDoNotUseOrYouWillBeFired = WrapPurePanel;\nexport default Dropdown;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/dropdown/dropdown.js"],"names":["RightOutlined","classNames","RcDropdown","useEvent","useMergedState","React","Menu","ConfigContext","OverrideProvider","genPurePanel","getPlacements","cloneElement","warning","NoCompactStyle","DropdownButton","useStyle","Placements","Dropdown","props","getPopupContainer","getContextPopupContainer","getPrefixCls","direction","useContext","process","env","NODE_ENV","forEach","_ref","deprecatedName","newName","getTransitionName","rootPrefixCls","placement","transitionName","undefined","includes","getPlacement","newPlacement","slice","indexOf","menu","arrow","prefixCls","customizePrefixCls","children","trigger","disabled","dropdownRender","overlayClassName","open","onOpenChange","visible","onVisibleChange","mouseEnterDelay","mouseLeaveDelay","_ref2","wrapSSR","hashId","child","Children","only","dropdownTrigger","className","triggerActions","alignPoint","mergedOpen","setOpen","value","onInnerOpenChange","nextOpen","overlayClassNameCustomized","builtinPlacements","arrowPointAtCenter","pointAtCenter","autoAdjustOverflow","onMenuClick","useCallback","renderOverlay","overlay","overlayNode","items","createElement","Object","assign","expandIcon","mode","selectable","onClick","validator","_ref3","Button","PurePanel","WrapPurePanel","_InternalPanelDoNotUseOrYouWillBeFired"],"mappings":"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","sourcesContent":["import RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport classNames from 'classnames';\nimport RcDropdown from 'rc-dropdown';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport Menu from '../menu';\nimport { ConfigContext } from '../config-provider';\nimport { OverrideProvider } from '../menu/OverrideContext';\nimport genPurePanel from '../_util/PurePanel';\nimport getPlacements from '../_util/placements';\nimport { cloneElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nimport { NoCompactStyle } from '../space/Compact';\nimport DropdownButton from './dropdown-button';\nimport useStyle from './style';\nconst Placements = ['topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight', 'top', 'bottom'];\nconst Dropdown = props => {\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    [['visible', 'open'], ['onVisibleChange', 'onOpenChange']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Dropdown', `\\`${deprecatedName}\\` is deprecated which will be removed in next major version, please use \\`${newName}\\` instead.`) : void 0;\n    });\n    process.env.NODE_ENV !== \"production\" ? warning(!('overlay' in props), 'Dropdown', '`overlay` is deprecated. Please use `menu` instead.') : void 0;\n  }\n  const getTransitionName = () => {\n    const rootPrefixCls = getPrefixCls();\n    const {\n      placement = '',\n      transitionName\n    } = props;\n    if (transitionName !== undefined) {\n      return transitionName;\n    }\n    if (placement.includes('top')) {\n      return `${rootPrefixCls}-slide-down`;\n    }\n    return `${rootPrefixCls}-slide-up`;\n  };\n  const getPlacement = () => {\n    const {\n      placement\n    } = props;\n    if (!placement) {\n      return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n    }\n    if (placement.includes('Center')) {\n      const newPlacement = placement.slice(0, placement.indexOf('Center'));\n      process.env.NODE_ENV !== \"production\" ? warning(!placement.includes('Center'), 'Dropdown', `You are using '${placement}' placement in Dropdown, which is deprecated. Try to use '${newPlacement}' instead.`) : void 0;\n      return newPlacement;\n    }\n    return placement;\n  };\n  const {\n    menu,\n    arrow,\n    prefixCls: customizePrefixCls,\n    children,\n    trigger,\n    disabled,\n    dropdownRender,\n    getPopupContainer,\n    overlayClassName,\n    open,\n    onOpenChange,\n    // Deprecated\n    visible,\n    onVisibleChange,\n    mouseEnterDelay = 0.15,\n    mouseLeaveDelay = 0.1\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    [['visible', 'open'], ['onVisibleChange', 'onOpenChange']].forEach(_ref2 => {\n      let [deprecatedName, newName] = _ref2;\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Dropdown', `\\`${deprecatedName}\\` is deprecated, please use \\`${newName}\\` instead.`) : void 0;\n    });\n  }\n  const prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const child = React.Children.only(children);\n  const dropdownTrigger = cloneElement(child, {\n    className: classNames(`${prefixCls}-trigger`, {\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, child.props.className),\n    disabled\n  });\n  const triggerActions = disabled ? [] : trigger;\n  let alignPoint;\n  if (triggerActions && triggerActions.includes('contextMenu')) {\n    alignPoint = true;\n  }\n  // =========================== Open ============================\n  const [mergedOpen, setOpen] = useMergedState(false, {\n    value: open !== null && open !== void 0 ? open : visible\n  });\n  const onInnerOpenChange = useEvent(nextOpen => {\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(nextOpen);\n    onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(nextOpen);\n    setOpen(nextOpen);\n  });\n  // =========================== Overlay ============================\n  const overlayClassNameCustomized = classNames(overlayClassName, hashId, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  });\n  const builtinPlacements = getPlacements({\n    arrowPointAtCenter: typeof arrow === 'object' && arrow.pointAtCenter,\n    autoAdjustOverflow: true\n  });\n  const onMenuClick = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n  const renderOverlay = () => {\n    // rc-dropdown already can process the function of overlay, but we have check logic here.\n    // So we need render the element to check and pass back to rc-dropdown.\n    const {\n      overlay\n    } = props;\n    let overlayNode;\n    if (menu === null || menu === void 0 ? void 0 : menu.items) {\n      overlayNode = /*#__PURE__*/React.createElement(Menu, Object.assign({}, menu));\n    } else if (typeof overlay === 'function') {\n      overlayNode = overlay();\n    } else {\n      overlayNode = overlay;\n    }\n    if (dropdownRender) {\n      overlayNode = dropdownRender(overlayNode);\n    }\n    overlayNode = React.Children.only(typeof overlayNode === 'string' ? /*#__PURE__*/React.createElement(\"span\", null, overlayNode) : overlayNode);\n    return /*#__PURE__*/React.createElement(OverrideProvider, {\n      prefixCls: `${prefixCls}-menu`,\n      expandIcon: /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-menu-submenu-arrow`\n      }, /*#__PURE__*/React.createElement(RightOutlined, {\n        className: `${prefixCls}-menu-submenu-arrow-icon`\n      })),\n      mode: \"vertical\",\n      selectable: false,\n      onClick: onMenuClick,\n      validator: _ref3 => {\n        let {\n          mode\n        } = _ref3;\n        // Warning if use other mode\n        process.env.NODE_ENV !== \"production\" ? warning(!mode || mode === 'vertical', 'Dropdown', `mode=\"${mode}\" is not supported for Dropdown's Menu.`) : void 0;\n      }\n    }, /*#__PURE__*/React.createElement(NoCompactStyle, null, overlayNode));\n  };\n  // ============================ Render ============================\n  return wrapSSR( /*#__PURE__*/React.createElement(RcDropdown, Object.assign({\n    alignPoint: alignPoint\n  }, props, {\n    mouseEnterDelay: mouseEnterDelay,\n    mouseLeaveDelay: mouseLeaveDelay,\n    visible: mergedOpen,\n    builtinPlacements: builtinPlacements,\n    arrow: !!arrow,\n    overlayClassName: overlayClassNameCustomized,\n    prefixCls: prefixCls,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    transitionName: getTransitionName(),\n    trigger: triggerActions,\n    overlay: renderOverlay,\n    placement: getPlacement(),\n    onVisibleChange: onInnerOpenChange\n  }), dropdownTrigger));\n};\nDropdown.Button = DropdownButton;\n// We don't care debug panel\nconst PurePanel = genPurePanel(Dropdown, 'dropdown', prefixCls => prefixCls);\n/* istanbul ignore next */\nconst WrapPurePanel = props => /*#__PURE__*/React.createElement(PurePanel, Object.assign({}, props), /*#__PURE__*/React.createElement(\"span\", null));\nDropdown._InternalPanelDoNotUseOrYouWillBeFired = WrapPurePanel;\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}