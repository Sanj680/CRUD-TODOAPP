{"ast":null,"code":"import * as React from 'react';\nexport default function useLazyKVMap(data, childrenColumnName, getRowKey) {\n  var mapCacheRef = React.useRef({});\n\n  function getRecordByKey(key) {\n    if (!mapCacheRef.current || mapCacheRef.current.data !== data || mapCacheRef.current.childrenColumnName !== childrenColumnName || mapCacheRef.current.getRowKey !== getRowKey) {\n      var kvMap = new Map();\n      /* eslint-disable no-inner-declarations */\n\n      function dig(records) {\n        records.forEach(function (record, index) {\n          var rowKey = getRowKey(record, index);\n          kvMap.set(rowKey, record);\n\n          if (record && typeof record === 'object' && childrenColumnName in record) {\n            dig(record[childrenColumnName] || []);\n          }\n        });\n      }\n      /* eslint-enable */\n\n\n      dig(data);\n      mapCacheRef.current = {\n        data: data,\n        childrenColumnName: childrenColumnName,\n        kvMap: kvMap,\n        getRowKey: getRowKey\n      };\n    }\n\n    return mapCacheRef.current.kvMap.get(key);\n  }\n\n  return [getRecordByKey];\n}","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/table/hooks/useLazyKVMap.js"],"names":["React","useLazyKVMap","data","childrenColumnName","getRowKey","mapCacheRef","useRef","getRecordByKey","key","current","kvMap","Map","dig","records","forEach","record","index","rowKey","set","get"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,kBAA5B,EAAgDC,SAAhD,EAA2D;AACxE,MAAMC,WAAW,GAAGL,KAAK,CAACM,MAAN,CAAa,EAAb,CAApB;;AACA,WAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,QAAI,CAACH,WAAW,CAACI,OAAb,IAAwBJ,WAAW,CAACI,OAAZ,CAAoBP,IAApB,KAA6BA,IAArD,IAA6DG,WAAW,CAACI,OAAZ,CAAoBN,kBAApB,KAA2CA,kBAAxG,IAA8HE,WAAW,CAACI,OAAZ,CAAoBL,SAApB,KAAkCA,SAApK,EAA+K;AAC7K,UAAMM,KAAK,GAAG,IAAIC,GAAJ,EAAd;AACA;;AACA,eAASC,GAAT,CAAaC,OAAb,EAAsB;AACpBA,QAAAA,OAAO,CAACC,OAAR,CAAgB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACjC,cAAMC,MAAM,GAAGb,SAAS,CAACW,MAAD,EAASC,KAAT,CAAxB;AACAN,UAAAA,KAAK,CAACQ,GAAN,CAAUD,MAAV,EAAkBF,MAAlB;;AACA,cAAIA,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAA5B,IAAwCZ,kBAAkB,IAAIY,MAAlE,EAA0E;AACxEH,YAAAA,GAAG,CAACG,MAAM,CAACZ,kBAAD,CAAN,IAA8B,EAA/B,CAAH;AACD;AACF,SAND;AAOD;AACD;;;AACAS,MAAAA,GAAG,CAACV,IAAD,CAAH;AACAG,MAAAA,WAAW,CAACI,OAAZ,GAAsB;AACpBP,QAAAA,IAAI,EAAJA,IADoB;AAEpBC,QAAAA,kBAAkB,EAAlBA,kBAFoB;AAGpBO,QAAAA,KAAK,EAALA,KAHoB;AAIpBN,QAAAA,SAAS,EAATA;AAJoB,OAAtB;AAMD;;AACD,WAAOC,WAAW,CAACI,OAAZ,CAAoBC,KAApB,CAA0BS,GAA1B,CAA8BX,GAA9B,CAAP;AACD;;AACD,SAAO,CAACD,cAAD,CAAP;AACD","sourcesContent":["import * as React from 'react';\nexport default function useLazyKVMap(data, childrenColumnName, getRowKey) {\n  const mapCacheRef = React.useRef({});\n  function getRecordByKey(key) {\n    if (!mapCacheRef.current || mapCacheRef.current.data !== data || mapCacheRef.current.childrenColumnName !== childrenColumnName || mapCacheRef.current.getRowKey !== getRowKey) {\n      const kvMap = new Map();\n      /* eslint-disable no-inner-declarations */\n      function dig(records) {\n        records.forEach((record, index) => {\n          const rowKey = getRowKey(record, index);\n          kvMap.set(rowKey, record);\n          if (record && typeof record === 'object' && childrenColumnName in record) {\n            dig(record[childrenColumnName] || []);\n          }\n        });\n      }\n      /* eslint-enable */\n      dig(data);\n      mapCacheRef.current = {\n        data,\n        childrenColumnName,\n        kvMap,\n        getRowKey\n      };\n    }\n    return mapCacheRef.current.kvMap.get(key);\n  }\n  return [getRecordByKey];\n}"]},"metadata":{},"sourceType":"module"}