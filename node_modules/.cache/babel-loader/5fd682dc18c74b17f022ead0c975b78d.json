{"ast":null,"code":"import RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport classNames from 'classnames';\nimport RcCollapse from 'rc-collapse';\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport initCollapseMotion from '../_util/motion';\nimport { cloneElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nimport CollapsePanel from './CollapsePanel';\nimport useStyle from './style';\n\nconst Collapse = props => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className = '',\n    bordered = true,\n    ghost,\n    expandIconPosition = 'start'\n  } = props;\n  const prefixCls = getPrefixCls('collapse', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const [wrapSSR, hashId] = useStyle(prefixCls); // Warning if use legacy type `expandIconPosition`\n\n  process.env.NODE_ENV !== \"production\" ? warning(expandIconPosition !== 'left' && expandIconPosition !== 'right', 'Collapse', '`expandIconPosition` with `left` or `right` is deprecated. Please use `start` or `end` instead.') : void 0; // Align with logic position\n\n  const mergedExpandIconPosition = React.useMemo(() => {\n    if (expandIconPosition === 'left') {\n      return 'start';\n    }\n\n    return expandIconPosition === 'right' ? 'end' : expandIconPosition;\n  }, [expandIconPosition]);\n\n  const renderExpandIcon = function () {\n    let panelProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      expandIcon\n    } = props;\n    const icon = expandIcon ? expandIcon(panelProps) : /*#__PURE__*/React.createElement(RightOutlined, {\n      rotate: panelProps.isActive ? 90 : undefined\n    });\n    return cloneElement(icon, () => ({\n      className: classNames(icon.props.className, `${prefixCls}-arrow`)\n    }));\n  };\n\n  const collapseClassName = classNames(`${prefixCls}-icon-position-${mergedExpandIconPosition}`, {\n    [`${prefixCls}-borderless`]: !bordered,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-ghost`]: !!ghost\n  }, className, hashId);\n  const openMotion = Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false,\n    leavedClassName: `${prefixCls}-content-hidden`\n  });\n\n  const getItems = () => {\n    const {\n      children\n    } = props;\n    return toArray(children).map((child, index) => {\n      var _a;\n\n      if ((_a = child.props) === null || _a === void 0 ? void 0 : _a.disabled) {\n        const key = child.key || String(index);\n        const {\n          disabled,\n          collapsible\n        } = child.props;\n        const childProps = Object.assign(Object.assign({}, omit(child.props, ['disabled'])), {\n          key,\n          collapsible: collapsible !== null && collapsible !== void 0 ? collapsible : disabled ? 'disabled' : undefined\n        });\n        return cloneElement(child, childProps);\n      }\n\n      return child;\n    });\n  };\n\n  return wrapSSR( /*#__PURE__*/React.createElement(RcCollapse, Object.assign({\n    openMotion: openMotion\n  }, props, {\n    expandIcon: renderExpandIcon,\n    prefixCls: prefixCls,\n    className: collapseClassName\n  }), getItems()));\n};\n\nCollapse.Panel = CollapsePanel;\nexport default Collapse;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/collapse/Collapse.js"],"names":["RightOutlined","classNames","RcCollapse","React","toArray","omit","ConfigContext","initCollapseMotion","cloneElement","warning","CollapsePanel","useStyle","Collapse","props","getPrefixCls","direction","useContext","prefixCls","customizePrefixCls","className","bordered","ghost","expandIconPosition","rootPrefixCls","wrapSSR","hashId","process","env","NODE_ENV","mergedExpandIconPosition","useMemo","renderExpandIcon","panelProps","arguments","length","undefined","expandIcon","icon","createElement","rotate","isActive","collapseClassName","openMotion","Object","assign","motionAppear","leavedClassName","getItems","children","map","child","index","_a","disabled","key","String","collapsible","childProps","Panel"],"mappings":"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","sourcesContent":["import RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport classNames from 'classnames';\nimport RcCollapse from 'rc-collapse';\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport initCollapseMotion from '../_util/motion';\nimport { cloneElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nimport CollapsePanel from './CollapsePanel';\nimport useStyle from './style';\nconst Collapse = props => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className = '',\n    bordered = true,\n    ghost,\n    expandIconPosition = 'start'\n  } = props;\n  const prefixCls = getPrefixCls('collapse', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  // Warning if use legacy type `expandIconPosition`\n  process.env.NODE_ENV !== \"production\" ? warning(expandIconPosition !== 'left' && expandIconPosition !== 'right', 'Collapse', '`expandIconPosition` with `left` or `right` is deprecated. Please use `start` or `end` instead.') : void 0;\n  // Align with logic position\n  const mergedExpandIconPosition = React.useMemo(() => {\n    if (expandIconPosition === 'left') {\n      return 'start';\n    }\n    return expandIconPosition === 'right' ? 'end' : expandIconPosition;\n  }, [expandIconPosition]);\n  const renderExpandIcon = function () {\n    let panelProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      expandIcon\n    } = props;\n    const icon = expandIcon ? expandIcon(panelProps) : /*#__PURE__*/React.createElement(RightOutlined, {\n      rotate: panelProps.isActive ? 90 : undefined\n    });\n    return cloneElement(icon, () => ({\n      className: classNames(icon.props.className, `${prefixCls}-arrow`)\n    }));\n  };\n  const collapseClassName = classNames(`${prefixCls}-icon-position-${mergedExpandIconPosition}`, {\n    [`${prefixCls}-borderless`]: !bordered,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-ghost`]: !!ghost\n  }, className, hashId);\n  const openMotion = Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false,\n    leavedClassName: `${prefixCls}-content-hidden`\n  });\n  const getItems = () => {\n    const {\n      children\n    } = props;\n    return toArray(children).map((child, index) => {\n      var _a;\n      if ((_a = child.props) === null || _a === void 0 ? void 0 : _a.disabled) {\n        const key = child.key || String(index);\n        const {\n          disabled,\n          collapsible\n        } = child.props;\n        const childProps = Object.assign(Object.assign({}, omit(child.props, ['disabled'])), {\n          key,\n          collapsible: collapsible !== null && collapsible !== void 0 ? collapsible : disabled ? 'disabled' : undefined\n        });\n        return cloneElement(child, childProps);\n      }\n      return child;\n    });\n  };\n  return wrapSSR( /*#__PURE__*/React.createElement(RcCollapse, Object.assign({\n    openMotion: openMotion\n  }, props, {\n    expandIcon: renderExpandIcon,\n    prefixCls: prefixCls,\n    className: collapseClassName\n  }), getItems()));\n};\nCollapse.Panel = CollapsePanel;\nexport default Collapse;"]},"metadata":{},"sourceType":"module"}