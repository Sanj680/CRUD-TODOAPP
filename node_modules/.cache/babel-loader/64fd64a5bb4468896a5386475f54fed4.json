{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import Form from\"./components/Form\";import FilterButton from\"./components/FilterButton\";import Todo from\"./components/Todo\";import{nanoid}from\"nanoid\";import data from\"./data.json\";function usePrevious(value){var ref=useRef();useEffect(function(){ref.current=value;});return ref.current;}var FILTER_MAP={All:function All(){return true;},Active:function Active(task){return!task.completed;},Completed:function Completed(task){return task.completed;}};var FILTER_NAMES=Object.keys(FILTER_MAP);function App(props){var _useState=useState(data),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(\"All\"),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];useEffect(function(){// storing data on refresh\nif(localStorage.getItem(\"localTasks\")){var storedList=JSON.parse(localStorage.getItem(\"localTasks\"));setTasks(storedList);}},[]);function toggleTaskCompleted(id){var updatedTasks=tasks.map(function(task){// if this task has the same ID as the edited task\nif(id===task.id){// use object spread to make a new obkect\n// whose `completed` prop has been inverted\nreturn _objectSpread({},task,{completed:!task.completed});}return task;});setTasks(updatedTasks);}function deleteTask(id){var remainingTasks=tasks.filter(function(task){return id!==task.id;});setTasks(remainingTasks);localStorage.setItem(\"localTasks\",JSON.stringify(remainingTasks));}function editTask(id,newName){var editedTaskList=tasks.map(function(task){// if this task has the same ID as the edited task\nif(id===task.id){//\nreturn _objectSpread({},task,{name:newName});}return task;});setTasks(editedTaskList);localStorage.setItem(\"localTasks\",JSON.stringify(editedTaskList));}var taskList=tasks.filter(FILTER_MAP[filter]).map(function(task){return/*#__PURE__*/React.createElement(Todo,{id:task.id,name:task.name,completed:task.completed,key:task.id,toggleTaskCompleted:toggleTaskCompleted,deleteTask:deleteTask,editTask:editTask});});var filterList=FILTER_NAMES.map(function(name){return/*#__PURE__*/React.createElement(FilterButton,{key:name,name:name,isPressed:name===filter,setFilter:setFilter});});function addTask(name){var newTask={id:\"todo-\"+nanoid(),name:name,completed:false};setTasks([].concat(_toConsumableArray(tasks),[newTask]));localStorage.setItem(\"localTasks\",JSON.stringify([].concat(_toConsumableArray(tasks),[newTask])));}var tasksNoun=taskList.length!==1?\"tasks\":\"task\";var headingText=\"\".concat(taskList.length,\" \").concat(tasksNoun,\" remaining\");var listHeadingRef=useRef(null);var prevTaskLength=usePrevious(tasks.length);useEffect(function(){if(tasks.length-prevTaskLength===-1){listHeadingRef.current.focus();}},[tasks.length,prevTaskLength]);return/*#__PURE__*/React.createElement(\"div\",{className:\"todoapp stack-large\"},/*#__PURE__*/React.createElement(Form,{addTask:addTask}),/*#__PURE__*/React.createElement(\"div\",{className:\"filters btn-group stack-exception\"},filterList),/*#__PURE__*/React.createElement(\"h2\",{id:\"list-heading\",tabIndex:\"-1\",ref:listHeadingRef},headingText),/*#__PURE__*/React.createElement(\"ul\",{className:\"todo-list stack-large stack-exception\",\"aria-labelledby\":\"list-heading\"},taskList));}export default App;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/src/App.js"],"names":["React","useState","useRef","useEffect","Form","FilterButton","Todo","nanoid","data","usePrevious","value","ref","current","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","filter","setFilter","localStorage","getItem","storedList","JSON","parse","toggleTaskCompleted","id","updatedTasks","map","deleteTask","remainingTasks","setItem","stringify","editTask","newName","editedTaskList","name","taskList","filterList","addTask","newTask","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","focus"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport data from \"./data.json\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(data);\n  const [filter, setFilter] = useState(\"All\");\n\n  useEffect(()=>{   // storing data on refresh\n    if(localStorage.getItem(\"localTasks\")){\n        const storedList = JSON.parse(localStorage.getItem(\"localTasks\"));\n        setTasks(storedList);\n    }\n},[])\n\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks)\n    localStorage.setItem(\"localTasks\", JSON.stringify(remainingTasks))\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n    localStorage.setItem(\"localTasks\", JSON.stringify(editedTaskList))\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"localTasks\", JSON.stringify([...tasks,newTask]))\n  }\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}