{"ast":null,"code":"import * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport var ANT_MARK = 'internalMark';\n\nvar LocaleProvider = function LocaleProvider(props) {\n  var _props$locale = props.locale,\n      locale = _props$locale === void 0 ? {} : _props$locale,\n      children = props.children,\n      _ANT_MARK__ = props._ANT_MARK__;\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n\n  React.useEffect(function () {\n    changeConfirmLocale(locale && locale.Modal);\n    return function () {\n      changeConfirmLocale();\n    };\n  }, [locale]);\n  var getMemoizedContextValue = React.useMemo(function () {\n    return Object.assign(Object.assign({}, locale), {\n      exist: true\n    });\n  }, [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\n\nexport default LocaleProvider;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/locale/index.js"],"names":["React","warning","changeConfirmLocale","LocaleContext","ANT_MARK","LocaleProvider","props","locale","children","_ANT_MARK__","process","env","NODE_ENV","useEffect","Modal","getMemoizedContextValue","useMemo","Object","assign","exist","createElement","Provider","value"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAO,IAAMC,QAAQ,GAAG,cAAjB;;AACP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,sBAK1BA,KAL0B,CAE5BC,MAF4B;AAAA,MAE5BA,MAF4B,8BAEnB,EAFmB;AAAA,MAG5BC,QAH4B,GAK1BF,KAL0B,CAG5BE,QAH4B;AAAA,MAI5BC,WAJ4B,GAK1BH,KAL0B,CAI5BG,WAJ4B;;AAM9B,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,OAAO,CAACQ,WAAW,KAAKL,QAAjB,EAA2B,gBAA3B,EAA6C,+GAA7C,CAA/C,GAA+M,KAAK,CAApN;AACD;;AACDJ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AACpBX,IAAAA,mBAAmB,CAACK,MAAM,IAAIA,MAAM,CAACO,KAAlB,CAAnB;AACA,WAAO,YAAM;AACXZ,MAAAA,mBAAmB;AACpB,KAFD;AAGD,GALD,EAKG,CAACK,MAAD,CALH;AAMA,MAAMQ,uBAAuB,GAAGf,KAAK,CAACgB,OAAN,CAAc;AAAA,WAAMC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,MAAlB,CAAd,EAAyC;AAC3FY,MAAAA,KAAK,EAAE;AADoF,KAAzC,CAAN;AAAA,GAAd,EAE5B,CAACZ,MAAD,CAF4B,CAAhC;AAGA,SAAO,aAAaP,KAAK,CAACoB,aAAN,CAAoBjB,aAAa,CAACkB,QAAlC,EAA4C;AAC9DC,IAAAA,KAAK,EAAEP;AADuD,GAA5C,EAEjBP,QAFiB,CAApB;AAGD,CArBD;;AAsBA,eAAeH,cAAf","sourcesContent":["import * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport const ANT_MARK = 'internalMark';\nconst LocaleProvider = props => {\n  const {\n    locale = {},\n    children,\n    _ANT_MARK__\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n  React.useEffect(() => {\n    changeConfirmLocale(locale && locale.Modal);\n    return () => {\n      changeConfirmLocale();\n    };\n  }, [locale]);\n  const getMemoizedContextValue = React.useMemo(() => Object.assign(Object.assign({}, locale), {\n    exist: true\n  }), [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\nexport default LocaleProvider;"]},"metadata":{},"sourceType":"module"}