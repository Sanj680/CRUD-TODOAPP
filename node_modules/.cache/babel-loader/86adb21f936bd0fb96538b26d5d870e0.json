{"ast":null,"code":"import * as React from 'react';\nimport Cell from \"../Cell\";\nimport ExpandedRowContext from \"../context/ExpandedRowContext\";\nimport TableContext from \"../context/TableContext\";\nimport { useContextSelector } from \"../ContextSelector\";\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      colSpan = _ref.colSpan,\n      isEmpty = _ref.isEmpty;\n  var scrollbarSize = useContextSelector(TableContext, 'scrollbarSize');\n\n  var _useContextSelector = useContextSelector(ExpandedRowContext, ['fixHeader', 'fixColumn', 'componentWidth', 'horizonScroll']),\n      fixHeader = _useContextSelector.fixHeader,\n      fixColumn = _useContextSelector.fixColumn,\n      componentWidth = _useContextSelector.componentWidth,\n      horizonScroll = _useContextSelector.horizonScroll; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (isEmpty ? horizonScroll : fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, componentWidth !== 0 && contentNode);\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, className, expanded, colSpan, isEmpty, scrollbarSize, componentWidth, fixColumn, fixHeader, horizonScroll]);\n}\n\nexport default ExpandedRow;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/rc-table/es/Body/ExpandedRow.js"],"names":["React","Cell","ExpandedRowContext","TableContext","useContextSelector","ExpandedRow","_ref","prefixCls","children","Component","component","cellComponent","className","expanded","colSpan","isEmpty","scrollbarSize","_useContextSelector","fixHeader","fixColumn","componentWidth","horizonScroll","useMemo","contentNode","createElement","style","width","position","left","overflow","concat","display"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,SAAS,GAAGH,IAAI,CAACI,SAFrB;AAAA,MAGIC,aAAa,GAAGL,IAAI,CAACK,aAHzB;AAAA,MAIIC,SAAS,GAAGN,IAAI,CAACM,SAJrB;AAAA,MAKIC,QAAQ,GAAGP,IAAI,CAACO,QALpB;AAAA,MAMIC,OAAO,GAAGR,IAAI,CAACQ,OANnB;AAAA,MAOIC,OAAO,GAAGT,IAAI,CAACS,OAPnB;AAQA,MAAIC,aAAa,GAAGZ,kBAAkB,CAACD,YAAD,EAAe,eAAf,CAAtC;;AAEA,MAAIc,mBAAmB,GAAGb,kBAAkB,CAACF,kBAAD,EAAqB,CAAC,WAAD,EAAc,WAAd,EAA2B,gBAA3B,EAA6C,eAA7C,CAArB,CAA5C;AAAA,MACIgB,SAAS,GAAGD,mBAAmB,CAACC,SADpC;AAAA,MAEIC,SAAS,GAAGF,mBAAmB,CAACE,SAFpC;AAAA,MAGIC,cAAc,GAAGH,mBAAmB,CAACG,cAHzC;AAAA,MAIIC,aAAa,GAAGJ,mBAAmB,CAACI,aAJxC,CAXyB,CAe8B;;;AAGvD,SAAOrB,KAAK,CAACsB,OAAN,CAAc,YAAY;AAC/B,QAAIC,WAAW,GAAGf,QAAlB;;AAEA,QAAIO,OAAO,GAAGM,aAAH,GAAmBF,SAA9B,EAAyC;AACvCI,MAAAA,WAAW,GAAG,aAAavB,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B;AACpDC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAEN,cAAc,IAAIF,SAAS,GAAGF,aAAH,GAAmB,CAAhC,CADhB;AAELW,UAAAA,QAAQ,EAAE,QAFL;AAGLC,UAAAA,IAAI,EAAE,CAHD;AAILC,UAAAA,QAAQ,EAAE;AAJL,SAD6C;AAOpDjB,QAAAA,SAAS,EAAE,GAAGkB,MAAH,CAAUvB,SAAV,EAAqB,qBAArB;AAPyC,OAA3B,EAQxBa,cAAc,KAAK,CAAnB,IAAwBG,WARA,CAA3B;AASD;;AAED,WAAO,aAAavB,KAAK,CAACwB,aAAN,CAAoBf,SAApB,EAA+B;AACjDG,MAAAA,SAAS,EAAEA,SADsC;AAEjDa,MAAAA,KAAK,EAAE;AACLM,QAAAA,OAAO,EAAElB,QAAQ,GAAG,IAAH,GAAU;AADtB;AAF0C,KAA/B,EAKjB,aAAab,KAAK,CAACwB,aAAN,CAAoBvB,IAApB,EAA0B;AACxCS,MAAAA,SAAS,EAAEC,aAD6B;AAExCJ,MAAAA,SAAS,EAAEA,SAF6B;AAGxCO,MAAAA,OAAO,EAAEA;AAH+B,KAA1B,EAIbS,WAJa,CALI,CAApB;AAUD,GAzBM,EAyBJ,CAACf,QAAD,EAAWC,SAAX,EAAsBG,SAAtB,EAAiCC,QAAjC,EAA2CC,OAA3C,EAAoDC,OAApD,EAA6DC,aAA7D,EAA4EI,cAA5E,EAA4FD,SAA5F,EAAuGD,SAAvG,EAAkHG,aAAlH,CAzBI,CAAP;AA0BD;;AAED,eAAehB,WAAf","sourcesContent":["import * as React from 'react';\nimport Cell from \"../Cell\";\nimport ExpandedRowContext from \"../context/ExpandedRowContext\";\nimport TableContext from \"../context/TableContext\";\nimport { useContextSelector } from \"../ContextSelector\";\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      colSpan = _ref.colSpan,\n      isEmpty = _ref.isEmpty;\n  var scrollbarSize = useContextSelector(TableContext, 'scrollbarSize');\n\n  var _useContextSelector = useContextSelector(ExpandedRowContext, ['fixHeader', 'fixColumn', 'componentWidth', 'horizonScroll']),\n      fixHeader = _useContextSelector.fixHeader,\n      fixColumn = _useContextSelector.fixColumn,\n      componentWidth = _useContextSelector.componentWidth,\n      horizonScroll = _useContextSelector.horizonScroll; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (isEmpty ? horizonScroll : fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, componentWidth !== 0 && contentNode);\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, className, expanded, colSpan, isEmpty, scrollbarSize, componentWidth, fixColumn, fixHeader, horizonScroll]);\n}\n\nexport default ExpandedRow;"]},"metadata":{},"sourceType":"module"}