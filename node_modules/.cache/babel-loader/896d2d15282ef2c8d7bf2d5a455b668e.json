{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\src\\\\components\\\\Form.js\";\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"antd\";\n\nfunction Form(props) {\n  const [name, setName] = useState('');\n  const {\n    TextArea\n  } = Input;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!name.trim()) {\n      return;\n    }\n\n    props.addTask(name);\n    setName(\"\");\n  }\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"label-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"new-todo-input\",\n    className: \"label__lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"TodoMatic\")), /*#__PURE__*/React.createElement(TextArea, {\n    name: name,\n    onChange: e => setName(e.target.value),\n    handleChange: handleChange,\n    placeholder: \"Controlled autosize\",\n    autoSize: {\n      minRows: 3,\n      maxRows: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn btn__primary btn__lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/src/components/Form.js"],"names":["React","useState","Button","Input","Form","props","name","setName","TextArea","handleSubmit","e","preventDefault","trim","addTask","handleChange","target","value","minRows","maxRows","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAgBC,KAAhB,QAA6B,MAA7B;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAeL,KAArB;;AAEA,WAASM,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACL,IAAI,CAACM,IAAL,EAAL,EAAkB;AAChB;AACD;;AACDP,IAAAA,KAAK,CAACQ,OAAN,CAAcP,IAAd;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAGD,WAASO,YAAT,CAAsBJ,CAAtB,EAAyB;AACvBH,IAAAA,OAAO,CAACG,CAAC,CAACK,MAAF,CAASC,KAAV,CAAP;AACD;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAgC,IAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAQE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACK,MAAF,CAASC,KAAV,CAF1B;AAGE,IAAA,YAAY,EAAEF,YAHhB;AAIE,IAAA,WAAW,EAAC,qBAJd;AAKE,IAAA,QAAQ,EAAE;AACRG,MAAAA,OAAO,EAAE,CADD;AAERC,MAAAA,OAAO,EAAE;AAFD,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAkBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAG;AAAb,KAAf;AAAsC,IAAA,IAAI,EAAC,SAA3C;AAAqD,IAAA,QAAQ,EAAC,QAA9D;AAAuE,IAAA,SAAS,EAAC,0BAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAlBF,CADF;AAwBD;;AAED,eAAef,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button,Input } from \"antd\";\nfunction Form(props) {\n  const [name, setName] = useState('');\n  \n  const { TextArea } = Input;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!name.trim()) {\n      return;\n    }\n    props.addTask(name);\n    setName(\"\");\n  }\n\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          TodoMatic\n          \n        </label>\n      </h2>\n\n      <TextArea\n        name={name}\n        onChange={(e) => setName(e.target.value)}\n        handleChange={handleChange}\n        placeholder=\"Controlled autosize\"\n        autoSize={{\n          minRows: 3,\n          maxRows: 5,\n        }}\n      />\n      <Button style={{marginTop : \"10px\"}}  type=\"primary\" htmlType=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </Button>\n    </form>\n  );\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}