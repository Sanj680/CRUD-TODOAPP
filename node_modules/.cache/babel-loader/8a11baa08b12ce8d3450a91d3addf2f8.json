{"ast":null,"code":"import { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nconst defaultTheme = createTheme(defaultDerivative);\nexport { // colors\nPresetColors // Statistic\n, statistic, statisticToken, mergeToken // hooks\n, useStyleRegister, genComponentStyleHook }; // ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\n\nexport const defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport const DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig); // ================================== Hook ==================================\n\nexport function useToken() {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme,\n    components\n  } = React.useContext(DesignTokenContext);\n  const salt = `${version}-${hashed || ''}`;\n  const mergedTheme = theme || defaultTheme;\n  const [token, hashId] = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    formatToken\n  });\n  return [mergedTheme, token, hashed ? hashId : ''];\n}","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/theme/internal.js"],"names":["createTheme","useCacheToken","useStyleRegister","React","version","PresetColors","defaultDerivative","defaultSeedToken","formatToken","genComponentStyleHook","statisticToken","merge","mergeToken","statistic","defaultTheme","defaultConfig","token","hashed","DesignTokenContext","createContext","useToken","rootDesignToken","theme","components","useContext","salt","mergedTheme","hashId","override","Object","assign"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,gBAArC,QAA6D,qBAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,iBAAP,MAA8B,kBAA9B;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,cAAP,IAAyBC,KAAK,IAAIC,UAAlC,EAA8CC,SAA9C,QAA+D,kBAA/D;AACA,MAAMC,YAAY,GAAGd,WAAW,CAACM,iBAAD,CAAhC;AACA,SACA;AACAD,YAFA,CAGA;AAHA,EAIAQ,SAJA,EAIWH,cAJX,EAI2BE,UAJ3B,CAKA;AALA,EAMAV,gBANA,EAMkBO,qBANlB,G,CAOA;AACA;;AACA,OAAO,MAAMM,aAAa,GAAG;AAC3BC,EAAAA,KAAK,EAAET,gBADoB;AAE3BU,EAAAA,MAAM,EAAE;AAFmB,CAAtB;AAIP,OAAO,MAAMC,kBAAkB,GAAG,aAAaf,KAAK,CAACgB,aAAN,CAAoBJ,aAApB,CAAxC,C,CACP;;AACA,OAAO,SAASK,QAAT,GAAoB;AACzB,QAAM;AACJJ,IAAAA,KAAK,EAAEK,eADH;AAEJJ,IAAAA,MAFI;AAGJK,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFpB,KAAK,CAACqB,UAAN,CAAiBN,kBAAjB,CALJ;AAMA,QAAMO,IAAI,GAAI,GAAErB,OAAQ,IAAGa,MAAM,IAAI,EAAG,EAAxC;AACA,QAAMS,WAAW,GAAGJ,KAAK,IAAIR,YAA7B;AACA,QAAM,CAACE,KAAD,EAAQW,MAAR,IAAkB1B,aAAa,CAACyB,WAAD,EAAc,CAACnB,gBAAD,EAAmBc,eAAnB,CAAd,EAAmD;AACtFI,IAAAA,IADsF;AAEtFG,IAAAA,QAAQ,EAAEC,MAAM,CAACC,MAAP,CAAc;AACtBF,MAAAA,QAAQ,EAAEP;AADY,KAAd,EAEPE,UAFO,CAF4E;AAKtFf,IAAAA;AALsF,GAAnD,CAArC;AAOA,SAAO,CAACkB,WAAD,EAAcV,KAAd,EAAqBC,MAAM,GAAGU,MAAH,GAAY,EAAvC,CAAP;AACD","sourcesContent":["import { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nconst defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors,\n// Statistic\nstatistic, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport const defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport const DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\nexport function useToken() {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme,\n    components\n  } = React.useContext(DesignTokenContext);\n  const salt = `${version}-${hashed || ''}`;\n  const mergedTheme = theme || defaultTheme;\n  const [token, hashId] = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    formatToken\n  });\n  return [mergedTheme, token, hashed ? hashId : ''];\n}"]},"metadata":{},"sourceType":"module"}