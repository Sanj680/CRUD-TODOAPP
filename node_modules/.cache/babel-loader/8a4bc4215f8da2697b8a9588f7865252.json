{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nvar autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar targetOffset = [0, 0];\nexport var placements = {\n  left: {\n    points: ['cr', 'cl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset\n  },\n  right: {\n    points: ['cl', 'cr'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset\n  },\n  top: {\n    points: ['bc', 'tc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  bottom: {\n    points: ['tc', 'bc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  leftTop: {\n    points: ['tr', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset\n  },\n  topRight: {\n    points: ['br', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  rightTop: {\n    points: ['tl', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset\n  },\n  bottomRight: {\n    points: ['tr', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  rightBottom: {\n    points: ['bl', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset\n  },\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  leftBottom: {\n    points: ['br', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset\n  }\n};\nexport function getCenterPlacements(config) {\n  var _config$arrowWidth = config.arrowWidth,\n      arrowWidth = _config$arrowWidth === void 0 ? 4 : _config$arrowWidth,\n      _config$horizontalArr = config.horizontalArrowShift,\n      horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr,\n      _config$verticalArrow = config.verticalArrowShift,\n      verticalArrowShift = _config$verticalArrow === void 0 ? 8 : _config$verticalArrow,\n      placement = config.placement;\n  var placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tc', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(function (key) {\n    placementMap[key] = _objectSpread(_objectSpread({}, placementMap[key]), {}, {\n      targetOffset: targetOffset\n    });\n  });\n  return placementMap[placement];\n}\nexport default placements;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/@rc-component/tour/es/placements.js"],"names":["_objectSpread","autoAdjustOverflow","adjustX","adjustY","targetOffset","placements","left","points","overflow","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","getCenterPlacements","config","_config$arrowWidth","arrowWidth","_config$horizontalArr","horizontalArrowShift","_config$verticalArrow","verticalArrowShift","placement","placementMap","Object","keys","forEach","key"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nvar autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar targetOffset = [0, 0];\nexport var placements = {\n  left: {\n    points: ['cr', 'cl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset\n  },\n  right: {\n    points: ['cl', 'cr'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset\n  },\n  top: {\n    points: ['bc', 'tc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  bottom: {\n    points: ['tc', 'bc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  leftTop: {\n    points: ['tr', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset\n  },\n  topRight: {\n    points: ['br', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  rightTop: {\n    points: ['tl', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset\n  },\n  bottomRight: {\n    points: ['tr', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  rightBottom: {\n    points: ['bl', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset\n  },\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  leftBottom: {\n    points: ['br', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset\n  }\n};\nexport function getCenterPlacements(config) {\n  var _config$arrowWidth = config.arrowWidth,\n      arrowWidth = _config$arrowWidth === void 0 ? 4 : _config$arrowWidth,\n      _config$horizontalArr = config.horizontalArrowShift,\n      horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr,\n      _config$verticalArrow = config.verticalArrowShift,\n      verticalArrowShift = _config$verticalArrow === void 0 ? 8 : _config$verticalArrow,\n      placement = config.placement;\n  var placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tc', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(function (key) {\n    placementMap[key] = _objectSpread(_objectSpread({}, placementMap[key]), {}, {\n      targetOffset: targetOffset\n    });\n  });\n  return placementMap[placement];\n}\nexport default placements;"]},"metadata":{},"sourceType":"module"}