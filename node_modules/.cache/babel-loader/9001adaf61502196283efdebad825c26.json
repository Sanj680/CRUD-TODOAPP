{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\n\nvar genBaseStyle = function genBaseStyle(token) {\n  var _Object$assign, _Object$assign2;\n\n  var antCls = token.antCls,\n      componentCls = token.componentCls,\n      iconCls = token.iconCls,\n      avatarBg = token.avatarBg,\n      avatarColor = token.avatarColor,\n      avatarSizeBase = token.avatarSizeBase,\n      avatarSizeLG = token.avatarSizeLG,\n      avatarSizeSM = token.avatarSizeSM,\n      avatarFontSizeBase = token.avatarFontSizeBase,\n      avatarFontSizeLG = token.avatarFontSizeLG,\n      avatarFontSizeSM = token.avatarFontSizeSM,\n      borderRadius = token.borderRadius,\n      borderRadiusLG = token.borderRadiusLG,\n      borderRadiusSM = token.borderRadiusSM,\n      lineWidth = token.lineWidth,\n      lineType = token.lineType; // Avatar size style\n\n  var avatarSizeStyle = function avatarSizeStyle(size, fontSize, radius) {\n    var _ref;\n\n    return _ref = {\n      width: size,\n      height: size,\n      lineHeight: \"\".concat(size - lineWidth * 2, \"px\"),\n      borderRadius: '50%'\n    }, _defineProperty(_ref, \"&\".concat(componentCls, \"-square\"), {\n      borderRadius: radius\n    }), _defineProperty(_ref, \"\".concat(componentCls, \"-string\"), {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    }), _defineProperty(_ref, \"&\".concat(componentCls, \"-icon\"), _defineProperty({\n      fontSize: fontSize\n    }, \"> \".concat(iconCls), {\n      margin: 0\n    })), _ref;\n  };\n\n  return _defineProperty({}, componentCls, Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    position: 'relative',\n    display: 'inline-block',\n    overflow: 'hidden',\n    color: avatarColor,\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    background: avatarBg,\n    border: \"\".concat(lineWidth, \"px \").concat(lineType, \" transparent\")\n  }, _defineProperty(_Object$assign, \"&-image\", {\n    background: 'transparent'\n  }), _defineProperty(_Object$assign, \"\".concat(antCls, \"-image-img\"), {\n    display: 'block'\n  }), _Object$assign)), avatarSizeStyle(avatarSizeBase, avatarFontSizeBase, borderRadius)), (_Object$assign2 = {}, _defineProperty(_Object$assign2, \"&-lg\", Object.assign({}, avatarSizeStyle(avatarSizeLG, avatarFontSizeLG, borderRadiusLG))), _defineProperty(_Object$assign2, \"&-sm\", Object.assign({}, avatarSizeStyle(avatarSizeSM, avatarFontSizeSM, borderRadiusSM))), _defineProperty(_Object$assign2, '> img', {\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover'\n  }), _Object$assign2)));\n};\n\nvar genGroupStyle = function genGroupStyle(token) {\n  var _$concat3;\n\n  var componentCls = token.componentCls,\n      avatarGroupBorderColor = token.avatarGroupBorderColor,\n      avatarGroupOverlapping = token.avatarGroupOverlapping,\n      avatarGroupSpace = token.avatarGroupSpace;\n  return _defineProperty({}, \"\".concat(componentCls, \"-group\"), (_$concat3 = {\n    display: 'inline-flex'\n  }, _defineProperty(_$concat3, \"\".concat(componentCls), _defineProperty({\n    borderColor: avatarGroupBorderColor\n  }, \"&:not(:first-child)\", {\n    marginInlineStart: -avatarGroupOverlapping\n  })), _defineProperty(_$concat3, \"&-popover\", _defineProperty({}, \"\".concat(componentCls, \" + \").concat(componentCls), {\n    marginInlineStart: avatarGroupSpace\n  })), _$concat3));\n};\n\nexport default genComponentStyleHook('Avatar', function (token) {\n  var colorTextLightSolid = token.colorTextLightSolid,\n      controlHeight = token.controlHeight,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM,\n      fontSize = token.fontSize,\n      fontSizeLG = token.fontSizeLG,\n      fontSizeXL = token.fontSizeXL,\n      fontSizeHeading3 = token.fontSizeHeading3,\n      marginXS = token.marginXS,\n      colorBorderBg = token.colorBorderBg,\n      colorTextPlaceholder = token.colorTextPlaceholder;\n  var avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid,\n    avatarSizeBase: controlHeight,\n    avatarSizeLG: controlHeightLG,\n    avatarSizeSM: controlHeightSM,\n    avatarFontSizeBase: Math.round((fontSizeLG + fontSizeXL) / 2),\n    avatarFontSizeLG: fontSizeHeading3,\n    avatarFontSizeSM: fontSize,\n    avatarGroupOverlapping: marginXS,\n    avatarGroupSpace: marginXS,\n    avatarGroupBorderColor: colorBorderBg\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n});","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/avatar/style/index.js"],"names":["genComponentStyleHook","mergeToken","resetComponent","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","avatarSizeBase","avatarSizeLG","avatarSizeSM","avatarFontSizeBase","avatarFontSizeLG","avatarFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","lineHeight","position","left","_skip_check_","value","transformOrigin","margin","Object","assign","display","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","objectFit","genGroupStyle","avatarGroupBorderColor","avatarGroupOverlapping","avatarGroupSpace","borderColor","marginInlineStart","colorTextLightSolid","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","colorBorderBg","colorTextPlaceholder","avatarToken","Math","round"],"mappings":"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","sourcesContent":["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    avatarSizeBase,\n    avatarSizeLG,\n    avatarSizeSM,\n    avatarFontSizeBase,\n    avatarFontSizeLG,\n    avatarFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    lineHeight: `${size - lineWidth * 2}px`,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`${componentCls}-string`]: {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${lineWidth}px ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(avatarSizeBase, avatarFontSizeBase, borderRadius)), {\n      [`&-lg`]: Object.assign({}, avatarSizeStyle(avatarSizeLG, avatarFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: Object.assign({}, avatarSizeStyle(avatarSizeSM, avatarFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    avatarGroupBorderColor,\n    avatarGroupOverlapping,\n    avatarGroupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: avatarGroupBorderColor,\n        [`&:not(:first-child)`]: {\n          marginInlineStart: -avatarGroupOverlapping\n        }\n      },\n      [`&-popover`]: {\n        [`${componentCls} + ${componentCls}`]: {\n          marginInlineStart: avatarGroupSpace\n        }\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    colorBorderBg,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid,\n    avatarSizeBase: controlHeight,\n    avatarSizeLG: controlHeightLG,\n    avatarSizeSM: controlHeightSM,\n    avatarFontSizeBase: Math.round((fontSizeLG + fontSizeXL) / 2),\n    avatarFontSizeLG: fontSizeHeading3,\n    avatarFontSizeSM: fontSize,\n    avatarGroupOverlapping: marginXS,\n    avatarGroupSpace: marginXS,\n    avatarGroupBorderColor: colorBorderBg\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n});"]},"metadata":{},"sourceType":"module"}