{"ast":null,"code":"/*\n.typography-title(@fontSize; @fontWeight; @lineHeight; @headingColor; @headingMarginBottom;) {\n  margin-bottom: @headingMarginBottom;\n  color: @headingColor;\n  font-weight: @fontWeight;\n  fontSize: @fontSize;\n  line-height: @lineHeight;\n}\n*/\nimport { gold } from '@ant-design/colors';\nimport { initInputToken } from '../../input/style';\nimport { operationUnit } from '../../style'; // eslint-disable-next-line import/prefer-default-export\n\nconst getTitleStyle = (fontSize, lineHeight, color, token) => {\n  const {\n    sizeMarginHeadingVerticalEnd,\n    fontWeightStrong\n  } = token;\n  return {\n    marginBottom: sizeMarginHeadingVerticalEnd,\n    color,\n    fontWeight: fontWeightStrong,\n    fontSize,\n    lineHeight\n  };\n}; // eslint-disable-next-line import/prefer-default-export\n\n\nexport const getTitleStyles = token => {\n  const headings = [1, 2, 3, 4, 5];\n  const styles = {};\n  headings.forEach(headingLevel => {\n    styles[`\n      h${headingLevel}&,\n      div&-h${headingLevel},\n      div&-h${headingLevel} > textarea,\n      h${headingLevel}\n    `] = getTitleStyle(token[`fontSizeHeading${headingLevel}`], token[`lineHeightHeading${headingLevel}`], token.colorTextHeading, token);\n  });\n  return styles;\n};\nexport const getLinkStyles = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    'a&, a': Object.assign(Object.assign({}, operationUnit(token)), {\n      textDecoration: token.linkDecoration,\n      '&:active, &:hover': {\n        textDecoration: token.linkHoverDecoration\n      },\n      [`&[disabled], &${componentCls}-disabled`]: {\n        color: token.colorTextDisabled,\n        cursor: 'not-allowed',\n        '&:active, &:hover': {\n          color: token.colorTextDisabled\n        },\n        '&:active': {\n          pointerEvents: 'none'\n        }\n      }\n    })\n  };\n};\nexport const getResetStyles = () => ({\n  code: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.2em 0.1em',\n    fontSize: '85%',\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3\n  },\n  kbd: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.15em 0.1em',\n    fontSize: '90%',\n    background: 'rgba(150, 150, 150, 0.06)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderBottomWidth: 2,\n    borderRadius: 3\n  },\n  mark: {\n    padding: 0,\n    // FIXME hardcode in v4\n    backgroundColor: gold[2]\n  },\n  'u, ins': {\n    textDecoration: 'underline',\n    textDecorationSkipInk: 'auto'\n  },\n  's, del': {\n    textDecoration: 'line-through'\n  },\n  strong: {\n    fontWeight: 600\n  },\n  // list\n  'ul, ol': {\n    marginInline: 0,\n    marginBlock: '0 1em',\n    padding: 0,\n    li: {\n      marginInline: '20px 0',\n      marginBlock: 0,\n      paddingInline: '4px 0',\n      paddingBlock: 0\n    }\n  },\n  ul: {\n    listStyleType: 'circle',\n    ul: {\n      listStyleType: 'disc'\n    }\n  },\n  ol: {\n    listStyleType: 'decimal'\n  },\n  // pre & block\n  'pre, blockquote': {\n    margin: '1em 0'\n  },\n  pre: {\n    padding: '0.4em 0.6em',\n    whiteSpace: 'pre-wrap',\n    wordWrap: 'break-word',\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3,\n    // Compatible for marked\n    code: {\n      display: 'inline',\n      margin: 0,\n      padding: 0,\n      fontSize: 'inherit',\n      fontFamily: 'inherit',\n      background: 'transparent',\n      border: 0\n    }\n  },\n  blockquote: {\n    paddingInline: '0.6em 0',\n    paddingBlock: 0,\n    borderInlineStart: '4px solid rgba(100, 100, 100, 0.2)',\n    opacity: 0.85\n  }\n});\nexport const getEditableStyles = token => {\n  const {\n    componentCls\n  } = token;\n  const inputToken = initInputToken(token);\n  const inputShift = inputToken.inputPaddingVertical + 1;\n  return {\n    '&-edit-content': {\n      position: 'relative',\n      'div&': {\n        insetInlineStart: -token.paddingSM,\n        marginTop: -inputShift,\n        marginBottom: `calc(1em - ${inputShift}px)`\n      },\n      [`${componentCls}-edit-content-confirm`]: {\n        position: 'absolute',\n        insetInlineEnd: token.marginXS + 2,\n        insetBlockEnd: token.marginXS,\n        color: token.colorTextDescription,\n        // default style\n        fontWeight: 'normal',\n        fontSize: token.fontSize,\n        fontStyle: 'normal',\n        pointerEvents: 'none'\n      },\n      textarea: {\n        margin: '0!important',\n        // Fix Editable Textarea flash in Firefox\n        MozTransition: 'none',\n        height: '1em'\n      }\n    }\n  };\n};\nexport const getCopiableStyles = token => ({\n  '&-copy-success': {\n    [`\n    &,\n    &:hover,\n    &:focus`]: {\n      color: token.colorSuccess\n    }\n  }\n});\nexport const getEllipsisStyles = () => ({\n  [`\n  a&-ellipsis,\n  span&-ellipsis\n  `]: {\n    display: 'inline-block',\n    maxWidth: '100%'\n  },\n  '&-single-line': {\n    whiteSpace: 'nowrap'\n  },\n  '&-ellipsis-single-line': {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    // https://blog.csdn.net/iefreer/article/details/50421025\n    'a&, span&': {\n      verticalAlign: 'bottom'\n    }\n  },\n  '&-ellipsis-multiple-line': {\n    display: '-webkit-box',\n    overflow: 'hidden',\n    WebkitLineClamp: 3,\n    WebkitBoxOrient: 'vertical'\n  }\n});","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/typography/style/mixins.js"],"names":["gold","initInputToken","operationUnit","getTitleStyle","fontSize","lineHeight","color","token","sizeMarginHeadingVerticalEnd","fontWeightStrong","marginBottom","fontWeight","getTitleStyles","headings","styles","forEach","headingLevel","colorTextHeading","getLinkStyles","componentCls","Object","assign","textDecoration","linkDecoration","linkHoverDecoration","colorTextDisabled","cursor","pointerEvents","getResetStyles","code","margin","paddingInline","paddingBlock","background","border","borderRadius","kbd","borderBottomWidth","mark","padding","backgroundColor","textDecorationSkipInk","strong","marginInline","marginBlock","li","ul","listStyleType","ol","pre","whiteSpace","wordWrap","display","fontFamily","blockquote","borderInlineStart","opacity","getEditableStyles","inputToken","inputShift","inputPaddingVertical","position","insetInlineStart","paddingSM","marginTop","insetInlineEnd","marginXS","insetBlockEnd","colorTextDescription","fontStyle","textarea","MozTransition","height","getCopiableStyles","colorSuccess","getEllipsisStyles","maxWidth","overflow","textOverflow","verticalAlign","WebkitLineClamp","WebkitBoxOrient"],"mappings":"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","sourcesContent":["/*\n.typography-title(@fontSize; @fontWeight; @lineHeight; @headingColor; @headingMarginBottom;) {\n  margin-bottom: @headingMarginBottom;\n  color: @headingColor;\n  font-weight: @fontWeight;\n  fontSize: @fontSize;\n  line-height: @lineHeight;\n}\n*/\nimport { gold } from '@ant-design/colors';\nimport { initInputToken } from '../../input/style';\nimport { operationUnit } from '../../style';\n// eslint-disable-next-line import/prefer-default-export\nconst getTitleStyle = (fontSize, lineHeight, color, token) => {\n  const {\n    sizeMarginHeadingVerticalEnd,\n    fontWeightStrong\n  } = token;\n  return {\n    marginBottom: sizeMarginHeadingVerticalEnd,\n    color,\n    fontWeight: fontWeightStrong,\n    fontSize,\n    lineHeight\n  };\n};\n// eslint-disable-next-line import/prefer-default-export\nexport const getTitleStyles = token => {\n  const headings = [1, 2, 3, 4, 5];\n  const styles = {};\n  headings.forEach(headingLevel => {\n    styles[`\n      h${headingLevel}&,\n      div&-h${headingLevel},\n      div&-h${headingLevel} > textarea,\n      h${headingLevel}\n    `] = getTitleStyle(token[`fontSizeHeading${headingLevel}`], token[`lineHeightHeading${headingLevel}`], token.colorTextHeading, token);\n  });\n  return styles;\n};\nexport const getLinkStyles = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    'a&, a': Object.assign(Object.assign({}, operationUnit(token)), {\n      textDecoration: token.linkDecoration,\n      '&:active, &:hover': {\n        textDecoration: token.linkHoverDecoration\n      },\n      [`&[disabled], &${componentCls}-disabled`]: {\n        color: token.colorTextDisabled,\n        cursor: 'not-allowed',\n        '&:active, &:hover': {\n          color: token.colorTextDisabled\n        },\n        '&:active': {\n          pointerEvents: 'none'\n        }\n      }\n    })\n  };\n};\nexport const getResetStyles = () => ({\n  code: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.2em 0.1em',\n    fontSize: '85%',\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3\n  },\n  kbd: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.15em 0.1em',\n    fontSize: '90%',\n    background: 'rgba(150, 150, 150, 0.06)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderBottomWidth: 2,\n    borderRadius: 3\n  },\n  mark: {\n    padding: 0,\n    // FIXME hardcode in v4\n    backgroundColor: gold[2]\n  },\n  'u, ins': {\n    textDecoration: 'underline',\n    textDecorationSkipInk: 'auto'\n  },\n  's, del': {\n    textDecoration: 'line-through'\n  },\n  strong: {\n    fontWeight: 600\n  },\n  // list\n  'ul, ol': {\n    marginInline: 0,\n    marginBlock: '0 1em',\n    padding: 0,\n    li: {\n      marginInline: '20px 0',\n      marginBlock: 0,\n      paddingInline: '4px 0',\n      paddingBlock: 0\n    }\n  },\n  ul: {\n    listStyleType: 'circle',\n    ul: {\n      listStyleType: 'disc'\n    }\n  },\n  ol: {\n    listStyleType: 'decimal'\n  },\n  // pre & block\n  'pre, blockquote': {\n    margin: '1em 0'\n  },\n  pre: {\n    padding: '0.4em 0.6em',\n    whiteSpace: 'pre-wrap',\n    wordWrap: 'break-word',\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3,\n    // Compatible for marked\n    code: {\n      display: 'inline',\n      margin: 0,\n      padding: 0,\n      fontSize: 'inherit',\n      fontFamily: 'inherit',\n      background: 'transparent',\n      border: 0\n    }\n  },\n  blockquote: {\n    paddingInline: '0.6em 0',\n    paddingBlock: 0,\n    borderInlineStart: '4px solid rgba(100, 100, 100, 0.2)',\n    opacity: 0.85\n  }\n});\nexport const getEditableStyles = token => {\n  const {\n    componentCls\n  } = token;\n  const inputToken = initInputToken(token);\n  const inputShift = inputToken.inputPaddingVertical + 1;\n  return {\n    '&-edit-content': {\n      position: 'relative',\n      'div&': {\n        insetInlineStart: -token.paddingSM,\n        marginTop: -inputShift,\n        marginBottom: `calc(1em - ${inputShift}px)`\n      },\n      [`${componentCls}-edit-content-confirm`]: {\n        position: 'absolute',\n        insetInlineEnd: token.marginXS + 2,\n        insetBlockEnd: token.marginXS,\n        color: token.colorTextDescription,\n        // default style\n        fontWeight: 'normal',\n        fontSize: token.fontSize,\n        fontStyle: 'normal',\n        pointerEvents: 'none'\n      },\n      textarea: {\n        margin: '0!important',\n        // Fix Editable Textarea flash in Firefox\n        MozTransition: 'none',\n        height: '1em'\n      }\n    }\n  };\n};\nexport const getCopiableStyles = token => ({\n  '&-copy-success': {\n    [`\n    &,\n    &:hover,\n    &:focus`]: {\n      color: token.colorSuccess\n    }\n  }\n});\nexport const getEllipsisStyles = () => ({\n  [`\n  a&-ellipsis,\n  span&-ellipsis\n  `]: {\n    display: 'inline-block',\n    maxWidth: '100%'\n  },\n  '&-single-line': {\n    whiteSpace: 'nowrap'\n  },\n  '&-ellipsis-single-line': {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    // https://blog.csdn.net/iefreer/article/details/50421025\n    'a&, span&': {\n      verticalAlign: 'bottom'\n    }\n  },\n  '&-ellipsis-multiple-line': {\n    display: '-webkit-box',\n    overflow: 'hidden',\n    WebkitLineClamp: 3,\n    WebkitBoxOrient: 'vertical'\n  }\n});"]},"metadata":{},"sourceType":"module"}