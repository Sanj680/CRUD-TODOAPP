{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useStyleRegister } from '@ant-design/cssinjs';\nimport { useContext } from 'react';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { ConfigContext } from '../../config-provider/context';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken) {\n  return function (prefixCls) {\n    var _useToken = useToken(),\n        _useToken2 = _slicedToArray(_useToken, 3),\n        theme = _useToken2[0],\n        token = _useToken2[1],\n        hashId = _useToken2[2];\n\n    var _useContext = useContext(ConfigContext),\n        getPrefixCls = _useContext.getPrefixCls,\n        iconPrefixCls = _useContext.iconPrefixCls;\n\n    var rootPrefixCls = getPrefixCls(); // Generate style for all a tags in antd component.\n\n    useStyleRegister({\n      theme: theme,\n      token: token,\n      hashId: hashId,\n      path: ['Shared', rootPrefixCls]\n    }, function () {\n      return [{\n        // Link\n        '&': genLinkStyle(token)\n      }];\n    });\n    return [useStyleRegister({\n      theme: theme,\n      token: token,\n      hashId: hashId,\n      path: [component, prefixCls, iconPrefixCls]\n    }, function () {\n      var _statisticToken = statisticToken(token),\n          proxyToken = _statisticToken.token,\n          flush = _statisticToken.flush;\n\n      var defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(proxyToken) : getDefaultToken;\n      var mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), token[component]);\n      var componentCls = \".\".concat(prefixCls);\n      var mergedToken = mergeToken(proxyToken, {\n        componentCls: componentCls,\n        prefixCls: prefixCls,\n        iconCls: \".\".concat(iconPrefixCls),\n        antCls: \".\".concat(rootPrefixCls)\n      }, mergedComponentToken);\n      var styleInterpolation = styleFn(mergedToken, {\n        hashId: hashId,\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        overrideComponentToken: token[component]\n      });\n      flush(component, mergedComponentToken);\n      return [genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/theme/util/genComponentStyleHook.js"],"names":["useStyleRegister","useContext","genCommonStyle","genLinkStyle","ConfigContext","mergeToken","statisticToken","useToken","genComponentStyleHook","component","styleFn","getDefaultToken","prefixCls","theme","token","hashId","getPrefixCls","iconPrefixCls","rootPrefixCls","path","proxyToken","flush","defaultComponentToken","mergedComponentToken","Object","assign","componentCls","mergedToken","iconCls","antCls","styleInterpolation","overrideComponentToken"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,aAA7C;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,QAArC,QAAqD,aAArD;AACA,eAAe,SAASC,qBAAT,CAA+BC,SAA/B,EAA0CC,OAA1C,EAAmDC,eAAnD,EAAoE;AACjF,SAAO,UAAAC,SAAS,EAAI;AAAA,oBACaL,QAAQ,EADrB;AAAA;AAAA,QACXM,KADW;AAAA,QACJC,KADI;AAAA,QACGC,MADH;;AAAA,sBAKdd,UAAU,CAACG,aAAD,CALI;AAAA,QAGhBY,YAHgB,eAGhBA,YAHgB;AAAA,QAIhBC,aAJgB,eAIhBA,aAJgB;;AAMlB,QAAMC,aAAa,GAAGF,YAAY,EAAlC,CANkB,CAOlB;;AACAhB,IAAAA,gBAAgB,CAAC;AACfa,MAAAA,KAAK,EAALA,KADe;AAEfC,MAAAA,KAAK,EAALA,KAFe;AAGfC,MAAAA,MAAM,EAANA,MAHe;AAIfI,MAAAA,IAAI,EAAE,CAAC,QAAD,EAAWD,aAAX;AAJS,KAAD,EAKb;AAAA,aAAM,CAAC;AACR;AACA,aAAKf,YAAY,CAACW,KAAD;AAFT,OAAD,CAAN;AAAA,KALa,CAAhB;AASA,WAAO,CAACd,gBAAgB,CAAC;AACvBa,MAAAA,KAAK,EAALA,KADuB;AAEvBC,MAAAA,KAAK,EAALA,KAFuB;AAGvBC,MAAAA,MAAM,EAANA,MAHuB;AAIvBI,MAAAA,IAAI,EAAE,CAACV,SAAD,EAAYG,SAAZ,EAAuBK,aAAvB;AAJiB,KAAD,EAKrB,YAAM;AAAA,4BAIHX,cAAc,CAACQ,KAAD,CAJX;AAAA,UAEEM,UAFF,mBAELN,KAFK;AAAA,UAGLO,KAHK,mBAGLA,KAHK;;AAKP,UAAMC,qBAAqB,GAAG,OAAOX,eAAP,KAA2B,UAA3B,GAAwCA,eAAe,CAACS,UAAD,CAAvD,GAAsET,eAApG;AACA,UAAMY,oBAAoB,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,qBAAlB,CAAd,EAAwDR,KAAK,CAACL,SAAD,CAA7D,CAA7B;AACA,UAAMiB,YAAY,cAAOd,SAAP,CAAlB;AACA,UAAMe,WAAW,GAAGtB,UAAU,CAACe,UAAD,EAAa;AACzCM,QAAAA,YAAY,EAAZA,YADyC;AAEzCd,QAAAA,SAAS,EAATA,SAFyC;AAGzCgB,QAAAA,OAAO,aAAMX,aAAN,CAHkC;AAIzCY,QAAAA,MAAM,aAAMX,aAAN;AAJmC,OAAb,EAK3BK,oBAL2B,CAA9B;AAMA,UAAMO,kBAAkB,GAAGpB,OAAO,CAACiB,WAAD,EAAc;AAC9CZ,QAAAA,MAAM,EAANA,MAD8C;AAE9CH,QAAAA,SAAS,EAATA,SAF8C;AAG9CM,QAAAA,aAAa,EAAbA,aAH8C;AAI9CD,QAAAA,aAAa,EAAbA,aAJ8C;AAK9Cc,QAAAA,sBAAsB,EAAEjB,KAAK,CAACL,SAAD;AALiB,OAAd,CAAlC;AAOAY,MAAAA,KAAK,CAACZ,SAAD,EAAYc,oBAAZ,CAAL;AACA,aAAO,CAACrB,cAAc,CAACY,KAAD,EAAQF,SAAR,CAAf,EAAmCkB,kBAAnC,CAAP;AACD,KA5BuB,CAAjB,EA4BHf,MA5BG,CAAP;AA6BD,GA9CD;AA+CD","sourcesContent":["import { useStyleRegister } from '@ant-design/cssinjs';\nimport { useContext } from 'react';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { ConfigContext } from '../../config-provider/context';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken) {\n  return prefixCls => {\n    const [theme, token, hashId] = useToken();\n    const {\n      getPrefixCls,\n      iconPrefixCls\n    } = useContext(ConfigContext);\n    const rootPrefixCls = getPrefixCls();\n    // Generate style for all a tags in antd component.\n    useStyleRegister({\n      theme,\n      token,\n      hashId,\n      path: ['Shared', rootPrefixCls]\n    }, () => [{\n      // Link\n      '&': genLinkStyle(token)\n    }]);\n    return [useStyleRegister({\n      theme,\n      token,\n      hashId,\n      path: [component, prefixCls, iconPrefixCls]\n    }, () => {\n      const {\n        token: proxyToken,\n        flush\n      } = statisticToken(token);\n      const defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(proxyToken) : getDefaultToken;\n      const mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), token[component]);\n      const componentCls = `.${prefixCls}`;\n      const mergedToken = mergeToken(proxyToken, {\n        componentCls,\n        prefixCls,\n        iconCls: `.${iconPrefixCls}`,\n        antCls: `.${rootPrefixCls}`\n      }, mergedComponentToken);\n      const styleInterpolation = styleFn(mergedToken, {\n        hashId,\n        prefixCls,\n        rootPrefixCls,\n        iconPrefixCls,\n        overrideComponentToken: token[component]\n      });\n      flush(component, mergedComponentToken);\n      return [genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}"]},"metadata":{},"sourceType":"module"}