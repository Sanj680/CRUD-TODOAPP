{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable react/button-has-type */\n\n\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport SizeContext from '../config-provider/SizeContext';\nimport { useCompactItemContext } from '../space/Compact';\nimport { cloneElement, isFragment } from '../_util/reactNode';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nimport Group, { GroupSizeContext } from './button-group';\nimport LoadingIcon from './LoadingIcon'; // CSSINJS\n\nimport useStyle from './style';\nconst rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\nconst isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\n\nfunction isString(str) {\n  return typeof str === 'string';\n}\n\nfunction isUnBorderedButtonType(type) {\n  return type === 'text' || type === 'link';\n} // Insert one space between two chinese characters automatically.\n\n\nfunction insertSpace(child, needInserted) {\n  // Check the child if is undefined or null.\n  if (child === null || child === undefined) {\n    return;\n  }\n\n  const SPACE = needInserted ? ' ' : ''; // strictNullChecks oops.\n\n  if (typeof child !== 'string' && typeof child !== 'number' && isString(child.type) && isTwoCNChar(child.props.children)) {\n    return cloneElement(child, {\n      children: child.props.children.split('').join(SPACE)\n    });\n  }\n\n  if (typeof child === 'string') {\n    return isTwoCNChar(child) ? /*#__PURE__*/React.createElement(\"span\", null, child.split('').join(SPACE)) : /*#__PURE__*/React.createElement(\"span\", null, child);\n  }\n\n  if (isFragment(child)) {\n    return /*#__PURE__*/React.createElement(\"span\", null, child);\n  }\n\n  return child;\n}\n\nfunction spaceChildren(children, needInserted) {\n  let isPrevChildPure = false;\n  const childList = [];\n  React.Children.forEach(children, child => {\n    const type = typeof child;\n    const isCurrentChildPure = type === 'string' || type === 'number';\n\n    if (isPrevChildPure && isCurrentChildPure) {\n      const lastIndex = childList.length - 1;\n      const lastChild = childList[lastIndex];\n      childList[lastIndex] = `${lastChild}${child}`;\n    } else {\n      childList.push(child);\n    }\n\n    isPrevChildPure = isCurrentChildPure;\n  }); // Pass to React.Children.map to auto fill key\n\n  return React.Children.map(childList, child => insertSpace(child, needInserted));\n}\n\nconst ButtonTypes = ['default', 'primary', 'ghost', 'dashed', 'link', 'text'];\nconst ButtonShapes = ['default', 'circle', 'round'];\nconst ButtonHTMLTypes = ['submit', 'button', 'reset'];\nexport function convertLegacyProps(type) {\n  if (type === 'danger') {\n    return {\n      danger: true\n    };\n  }\n\n  return {\n    type\n  };\n}\n\nconst InternalButton = (props, ref) => {\n  const {\n    loading = false,\n    prefixCls: customizePrefixCls,\n    type = 'default',\n    danger,\n    shape = 'default',\n    size: customizeSize,\n    disabled: customDisabled,\n    className,\n    children,\n    icon,\n    ghost = false,\n    block = false,\n\n    /** If we extract items here, we don't need use omit.js */\n    // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.\n    htmlType = 'button'\n  } = props,\n        rest = __rest(props, [\"loading\", \"prefixCls\", \"type\", \"danger\", \"shape\", \"size\", \"disabled\", \"className\", \"children\", \"icon\", \"ghost\", \"block\", \"htmlType\"]);\n\n  const {\n    getPrefixCls,\n    autoInsertSpaceInButton,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('btn', customizePrefixCls); // Style\n\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const size = React.useContext(SizeContext); // ===================== Disabled =====================\n\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const groupSize = React.useContext(GroupSizeContext);\n  const [innerLoading, setLoading] = React.useState(!!loading);\n  const [hasTwoCNChar, setHasTwoCNChar] = React.useState(false);\n  const buttonRef = ref || /*#__PURE__*/React.createRef();\n\n  const isNeedInserted = () => React.Children.count(children) === 1 && !icon && !isUnBorderedButtonType(type);\n\n  const fixTwoCNChar = () => {\n    // Fix for HOC usage like <FormatMessage />\n    if (!buttonRef || !buttonRef.current || autoInsertSpaceInButton === false) {\n      return;\n    }\n\n    const buttonText = buttonRef.current.textContent;\n\n    if (isNeedInserted() && isTwoCNChar(buttonText)) {\n      if (!hasTwoCNChar) {\n        setHasTwoCNChar(true);\n      }\n    } else if (hasTwoCNChar) {\n      setHasTwoCNChar(false);\n    }\n  }; // =============== Update Loading ===============\n\n\n  const loadingOrDelay = typeof loading === 'boolean' ? loading : (loading === null || loading === void 0 ? void 0 : loading.delay) || true;\n  React.useEffect(() => {\n    let delayTimer = null;\n\n    if (typeof loadingOrDelay === 'number') {\n      delayTimer = window.setTimeout(() => {\n        delayTimer = null;\n        setLoading(loadingOrDelay);\n      }, loadingOrDelay);\n    } else {\n      setLoading(loadingOrDelay);\n    }\n\n    return () => {\n      if (delayTimer) {\n        // in order to not perform a React state update on an unmounted component\n        // and clear timer after 'loadingOrDelay' updated.\n        window.clearTimeout(delayTimer);\n        delayTimer = null;\n      }\n    };\n  }, [loadingOrDelay]);\n  React.useEffect(fixTwoCNChar, [buttonRef]);\n\n  const handleClick = e => {\n    const {\n      onClick\n    } = props; // https://github.com/ant-design/ant-design/issues/30207\n\n    if (innerLoading || mergedDisabled) {\n      e.preventDefault();\n      return;\n    }\n\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(typeof icon === 'string' && icon.length > 2), 'Button', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!(ghost && isUnBorderedButtonType(type)), 'Button', \"`link` or `text` button can't be a `ghost` button.\") : void 0;\n  const autoInsertSpace = autoInsertSpaceInButton !== false;\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  const sizeClassNameMap = {\n    large: 'lg',\n    small: 'sm',\n    middle: undefined\n  };\n  const sizeFullname = compactSize || groupSize || customizeSize || size;\n  const sizeCls = sizeFullname ? sizeClassNameMap[sizeFullname] || '' : '';\n  const iconType = innerLoading ? 'loading' : icon;\n  const linkButtonRestProps = omit(rest, ['navigate']);\n  const hrefAndDisabled = linkButtonRestProps.href !== undefined && mergedDisabled;\n  const classes = classNames(prefixCls, hashId, {\n    [`${prefixCls}-${shape}`]: shape !== 'default' && shape,\n    [`${prefixCls}-${type}`]: type,\n    [`${prefixCls}-${sizeCls}`]: sizeCls,\n    [`${prefixCls}-icon-only`]: !children && children !== 0 && !!iconType,\n    [`${prefixCls}-background-ghost`]: ghost && !isUnBorderedButtonType(type),\n    [`${prefixCls}-loading`]: innerLoading,\n    [`${prefixCls}-two-chinese-chars`]: hasTwoCNChar && autoInsertSpace && !innerLoading,\n    [`${prefixCls}-block`]: block,\n    [`${prefixCls}-dangerous`]: !!danger,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-disabled`]: hrefAndDisabled\n  }, compactItemClassnames, className);\n  const iconNode = icon && !innerLoading ? icon : /*#__PURE__*/React.createElement(LoadingIcon, {\n    existIcon: !!icon,\n    prefixCls: prefixCls,\n    loading: !!innerLoading\n  });\n  const kids = children || children === 0 ? spaceChildren(children, isNeedInserted() && autoInsertSpace) : null;\n\n  if (linkButtonRestProps.href !== undefined) {\n    return wrapSSR( /*#__PURE__*/React.createElement(\"a\", Object.assign({}, linkButtonRestProps, {\n      className: classes,\n      onClick: handleClick,\n      ref: buttonRef\n    }), iconNode, kids));\n  }\n\n  let buttonNode = /*#__PURE__*/React.createElement(\"button\", Object.assign({}, rest, {\n    type: htmlType,\n    className: classes,\n    onClick: handleClick,\n    disabled: mergedDisabled,\n    ref: buttonRef\n  }), iconNode, kids);\n\n  if (!isUnBorderedButtonType(type)) {\n    buttonNode = /*#__PURE__*/React.createElement(Wave, {\n      disabled: !!innerLoading\n    }, buttonNode);\n  }\n\n  return wrapSSR(buttonNode);\n};\n\nconst Button = /*#__PURE__*/React.forwardRef(InternalButton);\n\nif (process.env.NODE_ENV !== 'production') {\n  Button.displayName = 'Button';\n}\n\nButton.Group = Group;\nButton.__ANT_BUTTON = true;\nexport default Button;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/button/button.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","classNames","omit","React","ConfigContext","DisabledContext","SizeContext","useCompactItemContext","cloneElement","isFragment","warning","Wave","Group","GroupSizeContext","LoadingIcon","useStyle","rxTwoCNChar","isTwoCNChar","test","bind","isString","str","isUnBorderedButtonType","type","insertSpace","child","needInserted","undefined","SPACE","props","children","split","join","createElement","spaceChildren","isPrevChildPure","childList","Children","forEach","isCurrentChildPure","lastIndex","lastChild","push","map","ButtonTypes","ButtonShapes","ButtonHTMLTypes","convertLegacyProps","danger","InternalButton","ref","loading","prefixCls","customizePrefixCls","shape","size","customizeSize","disabled","customDisabled","className","icon","ghost","block","htmlType","rest","getPrefixCls","autoInsertSpaceInButton","direction","useContext","wrapSSR","hashId","mergedDisabled","groupSize","innerLoading","setLoading","useState","hasTwoCNChar","setHasTwoCNChar","buttonRef","createRef","isNeedInserted","count","fixTwoCNChar","current","buttonText","textContent","loadingOrDelay","delay","useEffect","delayTimer","window","setTimeout","clearTimeout","handleClick","onClick","preventDefault","process","env","NODE_ENV","autoInsertSpace","compactSize","compactItemClassnames","sizeClassNameMap","large","small","middle","sizeFullname","sizeCls","iconType","linkButtonRestProps","hrefAndDisabled","href","classes","iconNode","existIcon","kids","assign","buttonNode","Button","forwardRef","displayName","__ANT_BUTTON"],"mappings":"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","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable react/button-has-type */\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport SizeContext from '../config-provider/SizeContext';\nimport { useCompactItemContext } from '../space/Compact';\nimport { cloneElement, isFragment } from '../_util/reactNode';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nimport Group, { GroupSizeContext } from './button-group';\nimport LoadingIcon from './LoadingIcon';\n// CSSINJS\nimport useStyle from './style';\nconst rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\nconst isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nfunction isString(str) {\n  return typeof str === 'string';\n}\nfunction isUnBorderedButtonType(type) {\n  return type === 'text' || type === 'link';\n}\n// Insert one space between two chinese characters automatically.\nfunction insertSpace(child, needInserted) {\n  // Check the child if is undefined or null.\n  if (child === null || child === undefined) {\n    return;\n  }\n  const SPACE = needInserted ? ' ' : '';\n  // strictNullChecks oops.\n  if (typeof child !== 'string' && typeof child !== 'number' && isString(child.type) && isTwoCNChar(child.props.children)) {\n    return cloneElement(child, {\n      children: child.props.children.split('').join(SPACE)\n    });\n  }\n  if (typeof child === 'string') {\n    return isTwoCNChar(child) ? /*#__PURE__*/React.createElement(\"span\", null, child.split('').join(SPACE)) : /*#__PURE__*/React.createElement(\"span\", null, child);\n  }\n  if (isFragment(child)) {\n    return /*#__PURE__*/React.createElement(\"span\", null, child);\n  }\n  return child;\n}\nfunction spaceChildren(children, needInserted) {\n  let isPrevChildPure = false;\n  const childList = [];\n  React.Children.forEach(children, child => {\n    const type = typeof child;\n    const isCurrentChildPure = type === 'string' || type === 'number';\n    if (isPrevChildPure && isCurrentChildPure) {\n      const lastIndex = childList.length - 1;\n      const lastChild = childList[lastIndex];\n      childList[lastIndex] = `${lastChild}${child}`;\n    } else {\n      childList.push(child);\n    }\n    isPrevChildPure = isCurrentChildPure;\n  });\n  // Pass to React.Children.map to auto fill key\n  return React.Children.map(childList, child => insertSpace(child, needInserted));\n}\nconst ButtonTypes = ['default', 'primary', 'ghost', 'dashed', 'link', 'text'];\nconst ButtonShapes = ['default', 'circle', 'round'];\nconst ButtonHTMLTypes = ['submit', 'button', 'reset'];\nexport function convertLegacyProps(type) {\n  if (type === 'danger') {\n    return {\n      danger: true\n    };\n  }\n  return {\n    type\n  };\n}\nconst InternalButton = (props, ref) => {\n  const {\n      loading = false,\n      prefixCls: customizePrefixCls,\n      type = 'default',\n      danger,\n      shape = 'default',\n      size: customizeSize,\n      disabled: customDisabled,\n      className,\n      children,\n      icon,\n      ghost = false,\n      block = false,\n      /** If we extract items here, we don't need use omit.js */\n      // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.\n      htmlType = 'button'\n    } = props,\n    rest = __rest(props, [\"loading\", \"prefixCls\", \"type\", \"danger\", \"shape\", \"size\", \"disabled\", \"className\", \"children\", \"icon\", \"ghost\", \"block\", \"htmlType\"]);\n  const {\n    getPrefixCls,\n    autoInsertSpaceInButton,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('btn', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const size = React.useContext(SizeContext);\n  // ===================== Disabled =====================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const groupSize = React.useContext(GroupSizeContext);\n  const [innerLoading, setLoading] = React.useState(!!loading);\n  const [hasTwoCNChar, setHasTwoCNChar] = React.useState(false);\n  const buttonRef = ref || /*#__PURE__*/React.createRef();\n  const isNeedInserted = () => React.Children.count(children) === 1 && !icon && !isUnBorderedButtonType(type);\n  const fixTwoCNChar = () => {\n    // Fix for HOC usage like <FormatMessage />\n    if (!buttonRef || !buttonRef.current || autoInsertSpaceInButton === false) {\n      return;\n    }\n    const buttonText = buttonRef.current.textContent;\n    if (isNeedInserted() && isTwoCNChar(buttonText)) {\n      if (!hasTwoCNChar) {\n        setHasTwoCNChar(true);\n      }\n    } else if (hasTwoCNChar) {\n      setHasTwoCNChar(false);\n    }\n  };\n  // =============== Update Loading ===============\n  const loadingOrDelay = typeof loading === 'boolean' ? loading : (loading === null || loading === void 0 ? void 0 : loading.delay) || true;\n  React.useEffect(() => {\n    let delayTimer = null;\n    if (typeof loadingOrDelay === 'number') {\n      delayTimer = window.setTimeout(() => {\n        delayTimer = null;\n        setLoading(loadingOrDelay);\n      }, loadingOrDelay);\n    } else {\n      setLoading(loadingOrDelay);\n    }\n    return () => {\n      if (delayTimer) {\n        // in order to not perform a React state update on an unmounted component\n        // and clear timer after 'loadingOrDelay' updated.\n        window.clearTimeout(delayTimer);\n        delayTimer = null;\n      }\n    };\n  }, [loadingOrDelay]);\n  React.useEffect(fixTwoCNChar, [buttonRef]);\n  const handleClick = e => {\n    const {\n      onClick\n    } = props;\n    // https://github.com/ant-design/ant-design/issues/30207\n    if (innerLoading || mergedDisabled) {\n      e.preventDefault();\n      return;\n    }\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  process.env.NODE_ENV !== \"production\" ? warning(!(typeof icon === 'string' && icon.length > 2), 'Button', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!(ghost && isUnBorderedButtonType(type)), 'Button', \"`link` or `text` button can't be a `ghost` button.\") : void 0;\n  const autoInsertSpace = autoInsertSpaceInButton !== false;\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  const sizeClassNameMap = {\n    large: 'lg',\n    small: 'sm',\n    middle: undefined\n  };\n  const sizeFullname = compactSize || groupSize || customizeSize || size;\n  const sizeCls = sizeFullname ? sizeClassNameMap[sizeFullname] || '' : '';\n  const iconType = innerLoading ? 'loading' : icon;\n  const linkButtonRestProps = omit(rest, ['navigate']);\n  const hrefAndDisabled = linkButtonRestProps.href !== undefined && mergedDisabled;\n  const classes = classNames(prefixCls, hashId, {\n    [`${prefixCls}-${shape}`]: shape !== 'default' && shape,\n    [`${prefixCls}-${type}`]: type,\n    [`${prefixCls}-${sizeCls}`]: sizeCls,\n    [`${prefixCls}-icon-only`]: !children && children !== 0 && !!iconType,\n    [`${prefixCls}-background-ghost`]: ghost && !isUnBorderedButtonType(type),\n    [`${prefixCls}-loading`]: innerLoading,\n    [`${prefixCls}-two-chinese-chars`]: hasTwoCNChar && autoInsertSpace && !innerLoading,\n    [`${prefixCls}-block`]: block,\n    [`${prefixCls}-dangerous`]: !!danger,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-disabled`]: hrefAndDisabled\n  }, compactItemClassnames, className);\n  const iconNode = icon && !innerLoading ? icon : /*#__PURE__*/React.createElement(LoadingIcon, {\n    existIcon: !!icon,\n    prefixCls: prefixCls,\n    loading: !!innerLoading\n  });\n  const kids = children || children === 0 ? spaceChildren(children, isNeedInserted() && autoInsertSpace) : null;\n  if (linkButtonRestProps.href !== undefined) {\n    return wrapSSR( /*#__PURE__*/React.createElement(\"a\", Object.assign({}, linkButtonRestProps, {\n      className: classes,\n      onClick: handleClick,\n      ref: buttonRef\n    }), iconNode, kids));\n  }\n  let buttonNode = /*#__PURE__*/React.createElement(\"button\", Object.assign({}, rest, {\n    type: htmlType,\n    className: classes,\n    onClick: handleClick,\n    disabled: mergedDisabled,\n    ref: buttonRef\n  }), iconNode, kids);\n  if (!isUnBorderedButtonType(type)) {\n    buttonNode = /*#__PURE__*/React.createElement(Wave, {\n      disabled: !!innerLoading\n    }, buttonNode);\n  }\n  return wrapSSR(buttonNode);\n};\nconst Button = /*#__PURE__*/React.forwardRef(InternalButton);\nif (process.env.NODE_ENV !== 'production') {\n  Button.displayName = 'Button';\n}\nButton.Group = Group;\nButton.__ANT_BUTTON = true;\nexport default Button;"]},"metadata":{},"sourceType":"module"}