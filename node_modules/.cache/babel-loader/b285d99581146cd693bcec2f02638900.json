{"ast":null,"code":"const genSelectionStyle = token => {\n  const {\n    componentCls,\n    antCls,\n    iconCls,\n    fontSizeIcon,\n    paddingXS,\n    tableHeaderIconColor,\n    tableHeaderIconColorHover\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ========================== Selections ==========================\n      [`${componentCls}-selection-col`]: {\n        width: token.tableSelectionColumnWidth\n      },\n      [`${componentCls}-bordered ${componentCls}-selection-col`]: {\n        width: token.tableSelectionColumnWidth + paddingXS * 2\n      },\n      [`\n        table tr th${componentCls}-selection-column,\n        table tr td${componentCls}-selection-column\n      `]: {\n        paddingInlineEnd: token.paddingXS,\n        paddingInlineStart: token.paddingXS,\n        textAlign: 'center',\n        [`${antCls}-radio-wrapper`]: {\n          marginInlineEnd: 0\n        }\n      },\n      [`table tr th${componentCls}-selection-column${componentCls}-cell-fix-left`]: {\n        zIndex: token.zIndexTableFixed\n      },\n      [`table tr th${componentCls}-selection-column::after`]: {\n        backgroundColor: 'transparent !important'\n      },\n      [`${componentCls}-selection`]: {\n        position: 'relative',\n        display: 'inline-flex',\n        flexDirection: 'column'\n      },\n      [`${componentCls}-selection-extra`]: {\n        position: 'absolute',\n        top: 0,\n        zIndex: 1,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationSlow}`,\n        marginInlineStart: '100%',\n        paddingInlineStart: `${token.tablePaddingHorizontal / 4}px`,\n        [iconCls]: {\n          color: tableHeaderIconColor,\n          fontSize: fontSizeIcon,\n          verticalAlign: 'baseline',\n          '&:hover': {\n            color: tableHeaderIconColorHover\n          }\n        }\n      }\n    }\n  };\n};\n\nexport default genSelectionStyle;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/table/style/selection.js"],"names":["genSelectionStyle","token","componentCls","antCls","iconCls","fontSizeIcon","paddingXS","tableHeaderIconColor","tableHeaderIconColorHover","width","tableSelectionColumnWidth","paddingInlineEnd","paddingInlineStart","textAlign","marginInlineEnd","zIndex","zIndexTableFixed","backgroundColor","position","display","flexDirection","top","cursor","transition","motionDurationSlow","marginInlineStart","tablePaddingHorizontal","color","fontSize","verticalAlign"],"mappings":"AAAA,MAAMA,iBAAiB,GAAGC,KAAK,IAAI;AACjC,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,oBANI;AAOJC,IAAAA;AAPI,MAQFP,KARJ;AASA,SAAO;AACL,KAAE,GAAEC,YAAa,UAAjB,GAA6B;AAC3B;AACA,OAAE,GAAEA,YAAa,gBAAjB,GAAmC;AACjCO,QAAAA,KAAK,EAAER,KAAK,CAACS;AADoB,OAFR;AAK3B,OAAE,GAAER,YAAa,aAAYA,YAAa,gBAA1C,GAA4D;AAC1DO,QAAAA,KAAK,EAAER,KAAK,CAACS,yBAAN,GAAkCJ,SAAS,GAAG;AADK,OALjC;AAQ3B,OAAE;qBACaJ,YAAa;qBACbA,YAAa;OAF5B,GAGI;AACFS,QAAAA,gBAAgB,EAAEV,KAAK,CAACK,SADtB;AAEFM,QAAAA,kBAAkB,EAAEX,KAAK,CAACK,SAFxB;AAGFO,QAAAA,SAAS,EAAE,QAHT;AAIF,SAAE,GAAEV,MAAO,gBAAX,GAA6B;AAC3BW,UAAAA,eAAe,EAAE;AADU;AAJ3B,OAXuB;AAmB3B,OAAE,cAAaZ,YAAa,oBAAmBA,YAAa,gBAA5D,GAA8E;AAC5Ea,QAAAA,MAAM,EAAEd,KAAK,CAACe;AAD8D,OAnBnD;AAsB3B,OAAE,cAAad,YAAa,0BAA5B,GAAwD;AACtDe,QAAAA,eAAe,EAAE;AADqC,OAtB7B;AAyB3B,OAAE,GAAEf,YAAa,YAAjB,GAA+B;AAC7BgB,QAAAA,QAAQ,EAAE,UADmB;AAE7BC,QAAAA,OAAO,EAAE,aAFoB;AAG7BC,QAAAA,aAAa,EAAE;AAHc,OAzBJ;AA8B3B,OAAE,GAAElB,YAAa,kBAAjB,GAAqC;AACnCgB,QAAAA,QAAQ,EAAE,UADyB;AAEnCG,QAAAA,GAAG,EAAE,CAF8B;AAGnCN,QAAAA,MAAM,EAAE,CAH2B;AAInCO,QAAAA,MAAM,EAAE,SAJ2B;AAKnCC,QAAAA,UAAU,EAAG,OAAMtB,KAAK,CAACuB,kBAAmB,EALT;AAMnCC,QAAAA,iBAAiB,EAAE,MANgB;AAOnCb,QAAAA,kBAAkB,EAAG,GAAEX,KAAK,CAACyB,sBAAN,GAA+B,CAAE,IAPrB;AAQnC,SAACtB,OAAD,GAAW;AACTuB,UAAAA,KAAK,EAAEpB,oBADE;AAETqB,UAAAA,QAAQ,EAAEvB,YAFD;AAGTwB,UAAAA,aAAa,EAAE,UAHN;AAIT,qBAAW;AACTF,YAAAA,KAAK,EAAEnB;AADE;AAJF;AARwB;AA9BV;AADxB,GAAP;AAkDD,CA5DD;;AA6DA,eAAeR,iBAAf","sourcesContent":["const genSelectionStyle = token => {\n  const {\n    componentCls,\n    antCls,\n    iconCls,\n    fontSizeIcon,\n    paddingXS,\n    tableHeaderIconColor,\n    tableHeaderIconColorHover\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ========================== Selections ==========================\n      [`${componentCls}-selection-col`]: {\n        width: token.tableSelectionColumnWidth\n      },\n      [`${componentCls}-bordered ${componentCls}-selection-col`]: {\n        width: token.tableSelectionColumnWidth + paddingXS * 2\n      },\n      [`\n        table tr th${componentCls}-selection-column,\n        table tr td${componentCls}-selection-column\n      `]: {\n        paddingInlineEnd: token.paddingXS,\n        paddingInlineStart: token.paddingXS,\n        textAlign: 'center',\n        [`${antCls}-radio-wrapper`]: {\n          marginInlineEnd: 0\n        }\n      },\n      [`table tr th${componentCls}-selection-column${componentCls}-cell-fix-left`]: {\n        zIndex: token.zIndexTableFixed\n      },\n      [`table tr th${componentCls}-selection-column::after`]: {\n        backgroundColor: 'transparent !important'\n      },\n      [`${componentCls}-selection`]: {\n        position: 'relative',\n        display: 'inline-flex',\n        flexDirection: 'column'\n      },\n      [`${componentCls}-selection-extra`]: {\n        position: 'absolute',\n        top: 0,\n        zIndex: 1,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationSlow}`,\n        marginInlineStart: '100%',\n        paddingInlineStart: `${token.tablePaddingHorizontal / 4}px`,\n        [iconCls]: {\n          color: tableHeaderIconColor,\n          fontSize: fontSizeIcon,\n          verticalAlign: 'baseline',\n          '&:hover': {\n            color: tableHeaderIconColorHover\n          }\n        }\n      }\n    }\n  };\n};\nexport default genSelectionStyle;"]},"metadata":{},"sourceType":"module"}