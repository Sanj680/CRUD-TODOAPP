{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport warning from '../../../_util/warning';\nimport { getColumnKey, getColumnPos, renderColumnTitle } from '../../util';\nimport FilterDropdown from './FilterDropdown';\n\nfunction collectFilterStates(columns, init, pos) {\n  var filterStates = [];\n  (columns || []).forEach(function (column, index) {\n    var _a;\n\n    var columnPos = getColumnPos(index, pos);\n\n    if (column.filters || 'filterDropdown' in column || 'onFilter' in column) {\n      if ('filteredValue' in column) {\n        // Controlled\n        var filteredValues = column.filteredValue;\n\n        if (!('filterDropdown' in column)) {\n          filteredValues = (_a = filteredValues === null || filteredValues === void 0 ? void 0 : filteredValues.map(String)) !== null && _a !== void 0 ? _a : filteredValues;\n        }\n\n        filterStates.push({\n          column: column,\n          key: getColumnKey(column, columnPos),\n          filteredKeys: filteredValues,\n          forceFiltered: column.filtered\n        });\n      } else {\n        // Uncontrolled\n        filterStates.push({\n          column: column,\n          key: getColumnKey(column, columnPos),\n          filteredKeys: init && column.defaultFilteredValue ? column.defaultFilteredValue : undefined,\n          forceFiltered: column.filtered\n        });\n      }\n    }\n\n    if ('children' in column) {\n      filterStates = [].concat(_toConsumableArray(filterStates), _toConsumableArray(collectFilterStates(column.children, init, columnPos)));\n    }\n  });\n  return filterStates;\n}\n\nfunction injectFilter(prefixCls, dropdownPrefixCls, columns, filterStates, triggerFilter, getPopupContainer, locale, pos) {\n  return columns.map(function (column, index) {\n    var columnPos = getColumnPos(index, pos);\n    var _column$filterMultipl = column.filterMultiple,\n        filterMultiple = _column$filterMultipl === void 0 ? true : _column$filterMultipl,\n        filterMode = column.filterMode,\n        filterSearch = column.filterSearch;\n    var newColumn = column;\n\n    if (newColumn.filters || newColumn.filterDropdown) {\n      var columnKey = getColumnKey(newColumn, columnPos);\n      var filterState = filterStates.find(function (_ref) {\n        var key = _ref.key;\n        return columnKey === key;\n      });\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        title: function title(renderProps) {\n          return /*#__PURE__*/React.createElement(FilterDropdown, {\n            tablePrefixCls: prefixCls,\n            prefixCls: \"\".concat(prefixCls, \"-filter\"),\n            dropdownPrefixCls: dropdownPrefixCls,\n            column: newColumn,\n            columnKey: columnKey,\n            filterState: filterState,\n            filterMultiple: filterMultiple,\n            filterMode: filterMode,\n            filterSearch: filterSearch,\n            triggerFilter: triggerFilter,\n            locale: locale,\n            getPopupContainer: getPopupContainer\n          }, renderColumnTitle(column.title, renderProps));\n        }\n      });\n    }\n\n    if ('children' in newColumn) {\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        children: injectFilter(prefixCls, dropdownPrefixCls, newColumn.children, filterStates, triggerFilter, getPopupContainer, locale, columnPos)\n      });\n    }\n\n    return newColumn;\n  });\n}\n\nexport function flattenKeys(filters) {\n  var keys = [];\n  (filters || []).forEach(function (_ref2) {\n    var value = _ref2.value,\n        children = _ref2.children;\n    keys.push(value);\n\n    if (children) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(flattenKeys(children)));\n    }\n  });\n  return keys;\n}\n\nfunction generateFilterInfo(filterStates) {\n  var currentFilters = {};\n  filterStates.forEach(function (_ref3) {\n    var key = _ref3.key,\n        filteredKeys = _ref3.filteredKeys,\n        column = _ref3.column;\n    var filters = column.filters,\n        filterDropdown = column.filterDropdown;\n\n    if (filterDropdown) {\n      currentFilters[key] = filteredKeys || null;\n    } else if (Array.isArray(filteredKeys)) {\n      var keys = flattenKeys(filters);\n      currentFilters[key] = keys.filter(function (originKey) {\n        return filteredKeys.includes(String(originKey));\n      });\n    } else {\n      currentFilters[key] = null;\n    }\n  });\n  return currentFilters;\n}\n\nexport function getFilterData(data, filterStates) {\n  return filterStates.reduce(function (currentData, filterState) {\n    var _filterState$column = filterState.column,\n        onFilter = _filterState$column.onFilter,\n        filters = _filterState$column.filters,\n        filteredKeys = filterState.filteredKeys;\n\n    if (onFilter && filteredKeys && filteredKeys.length) {\n      return currentData.filter(function (record) {\n        return filteredKeys.some(function (key) {\n          var keys = flattenKeys(filters);\n          var keyIndex = keys.findIndex(function (k) {\n            return String(k) === String(key);\n          });\n          var realKey = keyIndex !== -1 ? keys[keyIndex] : key;\n          return onFilter(realKey, record);\n        });\n      });\n    }\n\n    return currentData;\n  }, data);\n}\n\nfunction useFilter(_ref4) {\n  var prefixCls = _ref4.prefixCls,\n      dropdownPrefixCls = _ref4.dropdownPrefixCls,\n      mergedColumns = _ref4.mergedColumns,\n      onFilterChange = _ref4.onFilterChange,\n      getPopupContainer = _ref4.getPopupContainer,\n      tableLocale = _ref4.locale;\n\n  var _React$useState = React.useState(function () {\n    return collectFilterStates(mergedColumns, true);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      filterStates = _React$useState2[0],\n      setFilterStates = _React$useState2[1];\n\n  var mergedFilterStates = React.useMemo(function () {\n    var collectedStates = collectFilterStates(mergedColumns, false);\n\n    if (collectedStates.length === 0) {\n      return collectedStates;\n    }\n\n    var filteredKeysIsAllNotControlled = true;\n    var filteredKeysIsAllControlled = true;\n    collectedStates.forEach(function (_ref5) {\n      var filteredKeys = _ref5.filteredKeys;\n\n      if (filteredKeys !== undefined) {\n        filteredKeysIsAllNotControlled = false;\n      } else {\n        filteredKeysIsAllControlled = false;\n      }\n    }); // Return if not controlled\n\n    if (filteredKeysIsAllNotControlled) {\n      // Filter column may have been removed\n      var keyList = (mergedColumns || []).map(function (column, index) {\n        return getColumnKey(column, getColumnPos(index));\n      });\n      return filterStates.filter(function (_ref6) {\n        var key = _ref6.key;\n        return keyList.includes(key);\n      }).map(function (item) {\n        var col = mergedColumns[keyList.findIndex(function (key) {\n          return key === item.key;\n        })];\n        return Object.assign(Object.assign({}, item), {\n          column: Object.assign(Object.assign({}, item.column), col),\n          forceFiltered: col.filtered\n        });\n      });\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(filteredKeysIsAllControlled, 'Table', 'Columns should all contain `filteredValue` or not contain `filteredValue`.') : void 0;\n    return collectedStates;\n  }, [mergedColumns, filterStates]);\n  var filters = React.useMemo(function () {\n    return generateFilterInfo(mergedFilterStates);\n  }, [mergedFilterStates]);\n\n  var triggerFilter = function triggerFilter(filterState) {\n    var newFilterStates = mergedFilterStates.filter(function (_ref7) {\n      var key = _ref7.key;\n      return key !== filterState.key;\n    });\n    newFilterStates.push(filterState);\n    setFilterStates(newFilterStates);\n    onFilterChange(generateFilterInfo(newFilterStates), newFilterStates);\n  };\n\n  var transformColumns = function transformColumns(innerColumns) {\n    return injectFilter(prefixCls, dropdownPrefixCls, innerColumns, mergedFilterStates, triggerFilter, getPopupContainer, tableLocale);\n  };\n\n  return [transformColumns, mergedFilterStates, filters];\n}\n\nexport default useFilter;","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/table/hooks/useFilter/index.js"],"names":["_toConsumableArray","React","warning","getColumnKey","getColumnPos","renderColumnTitle","FilterDropdown","collectFilterStates","columns","init","pos","filterStates","forEach","column","index","_a","columnPos","filters","filteredValues","filteredValue","map","String","push","key","filteredKeys","forceFiltered","filtered","defaultFilteredValue","undefined","concat","children","injectFilter","prefixCls","dropdownPrefixCls","triggerFilter","getPopupContainer","locale","filterMultiple","filterMode","filterSearch","newColumn","filterDropdown","columnKey","filterState","find","_ref","Object","assign","title","renderProps","createElement","tablePrefixCls","flattenKeys","keys","_ref2","value","generateFilterInfo","currentFilters","_ref3","Array","isArray","filter","originKey","includes","getFilterData","data","reduce","currentData","onFilter","length","record","some","keyIndex","findIndex","k","realKey","useFilter","_ref4","mergedColumns","onFilterChange","tableLocale","useState","setFilterStates","mergedFilterStates","useMemo","collectedStates","filteredKeysIsAllNotControlled","filteredKeysIsAllControlled","_ref5","keyList","_ref6","item","col","process","env","NODE_ENV","newFilterStates","_ref7","transformColumns","innerColumns"],"mappings":";AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,iBAArC,QAA8D,YAA9D;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,IAAtC,EAA4CC,GAA5C,EAAiD;AAC/C,MAAIC,YAAY,GAAG,EAAnB;AACA,GAACH,OAAO,IAAI,EAAZ,EAAgBI,OAAhB,CAAwB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACzC,QAAIC,EAAJ;;AACA,QAAMC,SAAS,GAAGZ,YAAY,CAACU,KAAD,EAAQJ,GAAR,CAA9B;;AACA,QAAIG,MAAM,CAACI,OAAP,IAAkB,oBAAoBJ,MAAtC,IAAgD,cAAcA,MAAlE,EAA0E;AACxE,UAAI,mBAAmBA,MAAvB,EAA+B;AAC7B;AACA,YAAIK,cAAc,GAAGL,MAAM,CAACM,aAA5B;;AACA,YAAI,EAAE,oBAAoBN,MAAtB,CAAJ,EAAmC;AACjCK,UAAAA,cAAc,GAAG,CAACH,EAAE,GAAGG,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACE,GAAf,CAAmBC,MAAnB,CAAtE,MAAsG,IAAtG,IAA8GN,EAAE,KAAK,KAAK,CAA1H,GAA8HA,EAA9H,GAAmIG,cAApJ;AACD;;AACDP,QAAAA,YAAY,CAACW,IAAb,CAAkB;AAChBT,UAAAA,MAAM,EAANA,MADgB;AAEhBU,UAAAA,GAAG,EAAEpB,YAAY,CAACU,MAAD,EAASG,SAAT,CAFD;AAGhBQ,UAAAA,YAAY,EAAEN,cAHE;AAIhBO,UAAAA,aAAa,EAAEZ,MAAM,CAACa;AAJN,SAAlB;AAMD,OAZD,MAYO;AACL;AACAf,QAAAA,YAAY,CAACW,IAAb,CAAkB;AAChBT,UAAAA,MAAM,EAANA,MADgB;AAEhBU,UAAAA,GAAG,EAAEpB,YAAY,CAACU,MAAD,EAASG,SAAT,CAFD;AAGhBQ,UAAAA,YAAY,EAAEf,IAAI,IAAII,MAAM,CAACc,oBAAf,GAAsCd,MAAM,CAACc,oBAA7C,GAAoEC,SAHlE;AAIhBH,UAAAA,aAAa,EAAEZ,MAAM,CAACa;AAJN,SAAlB;AAMD;AACF;;AACD,QAAI,cAAcb,MAAlB,EAA0B;AACxBF,MAAAA,YAAY,GAAG,GAAGkB,MAAH,CAAU7B,kBAAkB,CAACW,YAAD,CAA5B,EAA4CX,kBAAkB,CAACO,mBAAmB,CAACM,MAAM,CAACiB,QAAR,EAAkBrB,IAAlB,EAAwBO,SAAxB,CAApB,CAA9D,CAAf;AACD;AACF,GA7BD;AA8BA,SAAOL,YAAP;AACD;;AACD,SAASoB,YAAT,CAAsBC,SAAtB,EAAiCC,iBAAjC,EAAoDzB,OAApD,EAA6DG,YAA7D,EAA2EuB,aAA3E,EAA0FC,iBAA1F,EAA6GC,MAA7G,EAAqH1B,GAArH,EAA0H;AACxH,SAAOF,OAAO,CAACY,GAAR,CAAY,UAACP,MAAD,EAASC,KAAT,EAAmB;AACpC,QAAME,SAAS,GAAGZ,YAAY,CAACU,KAAD,EAAQJ,GAAR,CAA9B;AADoC,gCAMhCG,MANgC,CAGlCwB,cAHkC;AAAA,QAGlCA,cAHkC,sCAGjB,IAHiB;AAAA,QAIlCC,UAJkC,GAMhCzB,MANgC,CAIlCyB,UAJkC;AAAA,QAKlCC,YALkC,GAMhC1B,MANgC,CAKlC0B,YALkC;AAOpC,QAAIC,SAAS,GAAG3B,MAAhB;;AACA,QAAI2B,SAAS,CAACvB,OAAV,IAAqBuB,SAAS,CAACC,cAAnC,EAAmD;AACjD,UAAMC,SAAS,GAAGvC,YAAY,CAACqC,SAAD,EAAYxB,SAAZ,CAA9B;AACA,UAAM2B,WAAW,GAAGhC,YAAY,CAACiC,IAAb,CAAkB,UAAAC,IAAI,EAAI;AAAA,YAE1CtB,GAF0C,GAGxCsB,IAHwC,CAE1CtB,GAF0C;AAI5C,eAAOmB,SAAS,KAAKnB,GAArB;AACD,OALmB,CAApB;AAMAiB,MAAAA,SAAS,GAAGM,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,SAAlB,CAAd,EAA4C;AACtDQ,QAAAA,KAAK,EAAE,eAAAC,WAAW;AAAA,iBAAI,aAAahD,KAAK,CAACiD,aAAN,CAAoB5C,cAApB,EAAoC;AACrE6C,YAAAA,cAAc,EAAEnB,SADqD;AAErEA,YAAAA,SAAS,YAAKA,SAAL,YAF4D;AAGrEC,YAAAA,iBAAiB,EAAEA,iBAHkD;AAIrEpB,YAAAA,MAAM,EAAE2B,SAJ6D;AAKrEE,YAAAA,SAAS,EAAEA,SAL0D;AAMrEC,YAAAA,WAAW,EAAEA,WANwD;AAOrEN,YAAAA,cAAc,EAAEA,cAPqD;AAQrEC,YAAAA,UAAU,EAAEA,UARyD;AASrEC,YAAAA,YAAY,EAAEA,YATuD;AAUrEL,YAAAA,aAAa,EAAEA,aAVsD;AAWrEE,YAAAA,MAAM,EAAEA,MAX6D;AAYrED,YAAAA,iBAAiB,EAAEA;AAZkD,WAApC,EAahC9B,iBAAiB,CAACQ,MAAM,CAACmC,KAAR,EAAeC,WAAf,CAbe,CAAjB;AAAA;AADoC,OAA5C,CAAZ;AAgBD;;AACD,QAAI,cAAcT,SAAlB,EAA6B;AAC3BA,MAAAA,SAAS,GAAGM,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,SAAlB,CAAd,EAA4C;AACtDV,QAAAA,QAAQ,EAAEC,YAAY,CAACC,SAAD,EAAYC,iBAAZ,EAA+BO,SAAS,CAACV,QAAzC,EAAmDnB,YAAnD,EAAiEuB,aAAjE,EAAgFC,iBAAhF,EAAmGC,MAAnG,EAA2GpB,SAA3G;AADgC,OAA5C,CAAZ;AAGD;;AACD,WAAOwB,SAAP;AACD,GAvCM,CAAP;AAwCD;;AACD,OAAO,SAASY,WAAT,CAAqBnC,OAArB,EAA8B;AACnC,MAAIoC,IAAI,GAAG,EAAX;AACA,GAACpC,OAAO,IAAI,EAAZ,EAAgBL,OAAhB,CAAwB,UAAA0C,KAAK,EAAI;AAAA,QAE7BC,KAF6B,GAI3BD,KAJ2B,CAE7BC,KAF6B;AAAA,QAG7BzB,QAH6B,GAI3BwB,KAJ2B,CAG7BxB,QAH6B;AAK/BuB,IAAAA,IAAI,CAAC/B,IAAL,CAAUiC,KAAV;;AACA,QAAIzB,QAAJ,EAAc;AACZuB,MAAAA,IAAI,GAAG,GAAGxB,MAAH,CAAU7B,kBAAkB,CAACqD,IAAD,CAA5B,EAAoCrD,kBAAkB,CAACoD,WAAW,CAACtB,QAAD,CAAZ,CAAtD,CAAP;AACD;AACF,GATD;AAUA,SAAOuB,IAAP;AACD;;AACD,SAASG,kBAAT,CAA4B7C,YAA5B,EAA0C;AACxC,MAAM8C,cAAc,GAAG,EAAvB;AACA9C,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAAA8C,KAAK,EAAI;AAAA,QAE1BnC,GAF0B,GAKxBmC,KALwB,CAE1BnC,GAF0B;AAAA,QAG1BC,YAH0B,GAKxBkC,KALwB,CAG1BlC,YAH0B;AAAA,QAI1BX,MAJ0B,GAKxB6C,KALwB,CAI1B7C,MAJ0B;AAAA,QAO1BI,OAP0B,GASxBJ,MATwB,CAO1BI,OAP0B;AAAA,QAQ1BwB,cAR0B,GASxB5B,MATwB,CAQ1B4B,cAR0B;;AAU5B,QAAIA,cAAJ,EAAoB;AAClBgB,MAAAA,cAAc,CAAClC,GAAD,CAAd,GAAsBC,YAAY,IAAI,IAAtC;AACD,KAFD,MAEO,IAAImC,KAAK,CAACC,OAAN,CAAcpC,YAAd,CAAJ,EAAiC;AACtC,UAAM6B,IAAI,GAAGD,WAAW,CAACnC,OAAD,CAAxB;AACAwC,MAAAA,cAAc,CAAClC,GAAD,CAAd,GAAsB8B,IAAI,CAACQ,MAAL,CAAY,UAAAC,SAAS;AAAA,eAAItC,YAAY,CAACuC,QAAb,CAAsB1C,MAAM,CAACyC,SAAD,CAA5B,CAAJ;AAAA,OAArB,CAAtB;AACD,KAHM,MAGA;AACLL,MAAAA,cAAc,CAAClC,GAAD,CAAd,GAAsB,IAAtB;AACD;AACF,GAlBD;AAmBA,SAAOkC,cAAP;AACD;;AACD,OAAO,SAASO,aAAT,CAAuBC,IAAvB,EAA6BtD,YAA7B,EAA2C;AAChD,SAAOA,YAAY,CAACuD,MAAb,CAAoB,UAACC,WAAD,EAAcxB,WAAd,EAA8B;AAAA,8BAOnDA,WAPmD,CAErD9B,MAFqD;AAAA,QAGnDuD,QAHmD,uBAGnDA,QAHmD;AAAA,QAInDnD,OAJmD,uBAInDA,OAJmD;AAAA,QAMrDO,YANqD,GAOnDmB,WAPmD,CAMrDnB,YANqD;;AAQvD,QAAI4C,QAAQ,IAAI5C,YAAZ,IAA4BA,YAAY,CAAC6C,MAA7C,EAAqD;AACnD,aAAOF,WAAW,CAACN,MAAZ,CAAmB,UAAAS,MAAM;AAAA,eAAI9C,YAAY,CAAC+C,IAAb,CAAkB,UAAAhD,GAAG,EAAI;AAC3D,cAAM8B,IAAI,GAAGD,WAAW,CAACnC,OAAD,CAAxB;AACA,cAAMuD,QAAQ,GAAGnB,IAAI,CAACoB,SAAL,CAAe,UAAAC,CAAC;AAAA,mBAAIrD,MAAM,CAACqD,CAAD,CAAN,KAAcrD,MAAM,CAACE,GAAD,CAAxB;AAAA,WAAhB,CAAjB;AACA,cAAMoD,OAAO,GAAGH,QAAQ,KAAK,CAAC,CAAd,GAAkBnB,IAAI,CAACmB,QAAD,CAAtB,GAAmCjD,GAAnD;AACA,iBAAO6C,QAAQ,CAACO,OAAD,EAAUL,MAAV,CAAf;AACD,SALmC,CAAJ;AAAA,OAAzB,CAAP;AAMD;;AACD,WAAOH,WAAP;AACD,GAjBM,EAiBJF,IAjBI,CAAP;AAkBD;;AACD,SAASW,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,MAEtB7C,SAFsB,GAQpB6C,KARoB,CAEtB7C,SAFsB;AAAA,MAGtBC,iBAHsB,GAQpB4C,KARoB,CAGtB5C,iBAHsB;AAAA,MAItB6C,aAJsB,GAQpBD,KARoB,CAItBC,aAJsB;AAAA,MAKtBC,cALsB,GAQpBF,KARoB,CAKtBE,cALsB;AAAA,MAMtB5C,iBANsB,GAQpB0C,KARoB,CAMtB1C,iBANsB;AAAA,MAOd6C,WAPc,GAQpBH,KARoB,CAOtBzC,MAPsB;;AAAA,wBASgBnC,KAAK,CAACgF,QAAN,CAAe;AAAA,WAAM1E,mBAAmB,CAACuE,aAAD,EAAgB,IAAhB,CAAzB;AAAA,GAAf,CAThB;AAAA;AAAA,MASjBnE,YATiB;AAAA,MASHuE,eATG;;AAUxB,MAAMC,kBAAkB,GAAGlF,KAAK,CAACmF,OAAN,CAAc,YAAM;AAC7C,QAAMC,eAAe,GAAG9E,mBAAmB,CAACuE,aAAD,EAAgB,KAAhB,CAA3C;;AACA,QAAIO,eAAe,CAAChB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,aAAOgB,eAAP;AACD;;AACD,QAAIC,8BAA8B,GAAG,IAArC;AACA,QAAIC,2BAA2B,GAAG,IAAlC;AACAF,IAAAA,eAAe,CAACzE,OAAhB,CAAwB,UAAA4E,KAAK,EAAI;AAAA,UAE7BhE,YAF6B,GAG3BgE,KAH2B,CAE7BhE,YAF6B;;AAI/B,UAAIA,YAAY,KAAKI,SAArB,EAAgC;AAC9B0D,QAAAA,8BAA8B,GAAG,KAAjC;AACD,OAFD,MAEO;AACLC,QAAAA,2BAA2B,GAAG,KAA9B;AACD;AACF,KATD,EAP6C,CAiB7C;;AACA,QAAID,8BAAJ,EAAoC;AAClC;AACA,UAAMG,OAAO,GAAG,CAACX,aAAa,IAAI,EAAlB,EAAsB1D,GAAtB,CAA0B,UAACP,MAAD,EAASC,KAAT;AAAA,eAAmBX,YAAY,CAACU,MAAD,EAAST,YAAY,CAACU,KAAD,CAArB,CAA/B;AAAA,OAA1B,CAAhB;AACA,aAAOH,YAAY,CAACkD,MAAb,CAAoB,UAAA6B,KAAK,EAAI;AAAA,YAEhCnE,GAFgC,GAG9BmE,KAH8B,CAEhCnE,GAFgC;AAIlC,eAAOkE,OAAO,CAAC1B,QAAR,CAAiBxC,GAAjB,CAAP;AACD,OALM,EAKJH,GALI,CAKA,UAAAuE,IAAI,EAAI;AACb,YAAMC,GAAG,GAAGd,aAAa,CAACW,OAAO,CAAChB,SAAR,CAAkB,UAAAlD,GAAG;AAAA,iBAAIA,GAAG,KAAKoE,IAAI,CAACpE,GAAjB;AAAA,SAArB,CAAD,CAAzB;AACA,eAAOuB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB4C,IAAlB,CAAd,EAAuC;AAC5C9E,UAAAA,MAAM,EAAEiC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB4C,IAAI,CAAC9E,MAAvB,CAAd,EAA8C+E,GAA9C,CADoC;AAE5CnE,UAAAA,aAAa,EAAEmE,GAAG,CAAClE;AAFyB,SAAvC,CAAP;AAID,OAXM,CAAP;AAYD;;AACDmE,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC7F,OAAO,CAACqF,2BAAD,EAA8B,OAA9B,EAAuC,4EAAvC,CAA/C,GAAsK,KAAK,CAA3K;AACA,WAAOF,eAAP;AACD,GApC0B,EAoCxB,CAACP,aAAD,EAAgBnE,YAAhB,CApCwB,CAA3B;AAqCA,MAAMM,OAAO,GAAGhB,KAAK,CAACmF,OAAN,CAAc;AAAA,WAAM5B,kBAAkB,CAAC2B,kBAAD,CAAxB;AAAA,GAAd,EAA4D,CAACA,kBAAD,CAA5D,CAAhB;;AACA,MAAMjD,aAAa,GAAG,SAAhBA,aAAgB,CAAAS,WAAW,EAAI;AACnC,QAAMqD,eAAe,GAAGb,kBAAkB,CAACtB,MAAnB,CAA0B,UAAAoC,KAAK,EAAI;AAAA,UAEvD1E,GAFuD,GAGrD0E,KAHqD,CAEvD1E,GAFuD;AAIzD,aAAOA,GAAG,KAAKoB,WAAW,CAACpB,GAA3B;AACD,KALuB,CAAxB;AAMAyE,IAAAA,eAAe,CAAC1E,IAAhB,CAAqBqB,WAArB;AACAuC,IAAAA,eAAe,CAACc,eAAD,CAAf;AACAjB,IAAAA,cAAc,CAACvB,kBAAkB,CAACwC,eAAD,CAAnB,EAAsCA,eAAtC,CAAd;AACD,GAVD;;AAWA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,YAAY;AAAA,WAAIpE,YAAY,CAACC,SAAD,EAAYC,iBAAZ,EAA+BkE,YAA/B,EAA6ChB,kBAA7C,EAAiEjD,aAAjE,EAAgFC,iBAAhF,EAAmG6C,WAAnG,CAAhB;AAAA,GAArC;;AACA,SAAO,CAACkB,gBAAD,EAAmBf,kBAAnB,EAAuClE,OAAvC,CAAP;AACD;;AACD,eAAe2D,SAAf","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport warning from '../../../_util/warning';\nimport { getColumnKey, getColumnPos, renderColumnTitle } from '../../util';\nimport FilterDropdown from './FilterDropdown';\nfunction collectFilterStates(columns, init, pos) {\n  let filterStates = [];\n  (columns || []).forEach((column, index) => {\n    var _a;\n    const columnPos = getColumnPos(index, pos);\n    if (column.filters || 'filterDropdown' in column || 'onFilter' in column) {\n      if ('filteredValue' in column) {\n        // Controlled\n        let filteredValues = column.filteredValue;\n        if (!('filterDropdown' in column)) {\n          filteredValues = (_a = filteredValues === null || filteredValues === void 0 ? void 0 : filteredValues.map(String)) !== null && _a !== void 0 ? _a : filteredValues;\n        }\n        filterStates.push({\n          column,\n          key: getColumnKey(column, columnPos),\n          filteredKeys: filteredValues,\n          forceFiltered: column.filtered\n        });\n      } else {\n        // Uncontrolled\n        filterStates.push({\n          column,\n          key: getColumnKey(column, columnPos),\n          filteredKeys: init && column.defaultFilteredValue ? column.defaultFilteredValue : undefined,\n          forceFiltered: column.filtered\n        });\n      }\n    }\n    if ('children' in column) {\n      filterStates = [].concat(_toConsumableArray(filterStates), _toConsumableArray(collectFilterStates(column.children, init, columnPos)));\n    }\n  });\n  return filterStates;\n}\nfunction injectFilter(prefixCls, dropdownPrefixCls, columns, filterStates, triggerFilter, getPopupContainer, locale, pos) {\n  return columns.map((column, index) => {\n    const columnPos = getColumnPos(index, pos);\n    const {\n      filterMultiple = true,\n      filterMode,\n      filterSearch\n    } = column;\n    let newColumn = column;\n    if (newColumn.filters || newColumn.filterDropdown) {\n      const columnKey = getColumnKey(newColumn, columnPos);\n      const filterState = filterStates.find(_ref => {\n        let {\n          key\n        } = _ref;\n        return columnKey === key;\n      });\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        title: renderProps => /*#__PURE__*/React.createElement(FilterDropdown, {\n          tablePrefixCls: prefixCls,\n          prefixCls: `${prefixCls}-filter`,\n          dropdownPrefixCls: dropdownPrefixCls,\n          column: newColumn,\n          columnKey: columnKey,\n          filterState: filterState,\n          filterMultiple: filterMultiple,\n          filterMode: filterMode,\n          filterSearch: filterSearch,\n          triggerFilter: triggerFilter,\n          locale: locale,\n          getPopupContainer: getPopupContainer\n        }, renderColumnTitle(column.title, renderProps))\n      });\n    }\n    if ('children' in newColumn) {\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        children: injectFilter(prefixCls, dropdownPrefixCls, newColumn.children, filterStates, triggerFilter, getPopupContainer, locale, columnPos)\n      });\n    }\n    return newColumn;\n  });\n}\nexport function flattenKeys(filters) {\n  let keys = [];\n  (filters || []).forEach(_ref2 => {\n    let {\n      value,\n      children\n    } = _ref2;\n    keys.push(value);\n    if (children) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(flattenKeys(children)));\n    }\n  });\n  return keys;\n}\nfunction generateFilterInfo(filterStates) {\n  const currentFilters = {};\n  filterStates.forEach(_ref3 => {\n    let {\n      key,\n      filteredKeys,\n      column\n    } = _ref3;\n    const {\n      filters,\n      filterDropdown\n    } = column;\n    if (filterDropdown) {\n      currentFilters[key] = filteredKeys || null;\n    } else if (Array.isArray(filteredKeys)) {\n      const keys = flattenKeys(filters);\n      currentFilters[key] = keys.filter(originKey => filteredKeys.includes(String(originKey)));\n    } else {\n      currentFilters[key] = null;\n    }\n  });\n  return currentFilters;\n}\nexport function getFilterData(data, filterStates) {\n  return filterStates.reduce((currentData, filterState) => {\n    const {\n      column: {\n        onFilter,\n        filters\n      },\n      filteredKeys\n    } = filterState;\n    if (onFilter && filteredKeys && filteredKeys.length) {\n      return currentData.filter(record => filteredKeys.some(key => {\n        const keys = flattenKeys(filters);\n        const keyIndex = keys.findIndex(k => String(k) === String(key));\n        const realKey = keyIndex !== -1 ? keys[keyIndex] : key;\n        return onFilter(realKey, record);\n      }));\n    }\n    return currentData;\n  }, data);\n}\nfunction useFilter(_ref4) {\n  let {\n    prefixCls,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer,\n    locale: tableLocale\n  } = _ref4;\n  const [filterStates, setFilterStates] = React.useState(() => collectFilterStates(mergedColumns, true));\n  const mergedFilterStates = React.useMemo(() => {\n    const collectedStates = collectFilterStates(mergedColumns, false);\n    if (collectedStates.length === 0) {\n      return collectedStates;\n    }\n    let filteredKeysIsAllNotControlled = true;\n    let filteredKeysIsAllControlled = true;\n    collectedStates.forEach(_ref5 => {\n      let {\n        filteredKeys\n      } = _ref5;\n      if (filteredKeys !== undefined) {\n        filteredKeysIsAllNotControlled = false;\n      } else {\n        filteredKeysIsAllControlled = false;\n      }\n    });\n    // Return if not controlled\n    if (filteredKeysIsAllNotControlled) {\n      // Filter column may have been removed\n      const keyList = (mergedColumns || []).map((column, index) => getColumnKey(column, getColumnPos(index)));\n      return filterStates.filter(_ref6 => {\n        let {\n          key\n        } = _ref6;\n        return keyList.includes(key);\n      }).map(item => {\n        const col = mergedColumns[keyList.findIndex(key => key === item.key)];\n        return Object.assign(Object.assign({}, item), {\n          column: Object.assign(Object.assign({}, item.column), col),\n          forceFiltered: col.filtered\n        });\n      });\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(filteredKeysIsAllControlled, 'Table', 'Columns should all contain `filteredValue` or not contain `filteredValue`.') : void 0;\n    return collectedStates;\n  }, [mergedColumns, filterStates]);\n  const filters = React.useMemo(() => generateFilterInfo(mergedFilterStates), [mergedFilterStates]);\n  const triggerFilter = filterState => {\n    const newFilterStates = mergedFilterStates.filter(_ref7 => {\n      let {\n        key\n      } = _ref7;\n      return key !== filterState.key;\n    });\n    newFilterStates.push(filterState);\n    setFilterStates(newFilterStates);\n    onFilterChange(generateFilterInfo(newFilterStates), newFilterStates);\n  };\n  const transformColumns = innerColumns => injectFilter(prefixCls, dropdownPrefixCls, innerColumns, mergedFilterStates, triggerFilter, getPopupContainer, tableLocale);\n  return [transformColumns, mergedFilterStates, filters];\n}\nexport default useFilter;"]},"metadata":{},"sourceType":"module"}