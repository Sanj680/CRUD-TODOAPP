{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken, PresetColors } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\n\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusPreset = PresetColors.reduce((prev, colorKey) => {\n    const darkColor = token[`${colorKey}-6`];\n    return Object.assign(Object.assign({}, prev), {\n      [`${componentCls}-status-${colorKey}`]: {\n        background: darkColor\n      }\n    });\n  }, {});\n  const statusRibbonPreset = PresetColors.reduce((prev, colorKey) => {\n    const darkColor = token[`${colorKey}-6`];\n    return Object.assign(Object.assign({}, prev), {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    });\n  }, {});\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: `${token.badgeHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: `${badgeHeightSm}px`,\n        borderRadius: badgeHeightSm / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: token.motionDurationMid,\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: Object.assign(Object.assign({\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          position: 'relative',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        }\n      }, statusPreset), {\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }),\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        direction: 'ltr',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          insetInlineEnd: 'auto'\n        }\n      }\n    }),\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      height: badgeFontHeight,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/badge/style/index.js"],"names":["Keyframes","genComponentStyleHook","mergeToken","PresetColors","resetComponent","antStatusProcessing","transform","opacity","antZoomBadgeIn","antZoomBadgeOut","antNoWrapperZoomBadgeIn","antNoWrapperZoomBadgeOut","antBadgeLoadingCircle","transformOrigin","genSharedBadgeStyle","token","componentCls","iconCls","antCls","badgeFontHeight","badgeShadowSize","badgeHeightSm","motionDurationSlow","badgeStatusSize","marginXS","badgeRibbonOffset","numberPrefixCls","ribbonPrefixCls","ribbonWrapperPrefixCls","statusPreset","reduce","prev","colorKey","darkColor","Object","assign","background","statusRibbonPreset","color","position","display","width","lineHeight","zIndex","badgeZIndex","minWidth","badgeHeight","height","badgeTextColor","fontWeight","badgeFontWeight","fontSize","badgeFontSize","whiteSpace","textAlign","badgeColor","borderRadius","boxShadow","badgeShadowColor","transition","motionDurationMid","a","badgeColorHover","badgeFontSizeSm","padding","paddingXS","badgeDotSize","top","insetInlineEnd","animationName","animationDuration","animationIterationCount","animationTimingFunction","verticalAlign","backgroundColor","colorSuccess","colorPrimary","insetInlineStart","borderWidth","borderStyle","borderColor","badgeProcessingDuration","content","colorTextPlaceholder","colorError","colorWarning","marginInlineStart","colorText","motionEaseOutBack","animationFillMode","overflow","direction","WebkitTransformStyle","WebkitBackfaceVisibility","margin","borderRadiusSM","colorTextLightSolid","border","badgeRibbonCornerTransform","filter","badgeRibbonCornerFilter","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","borderEndStartRadius","borderInlineStartColor","fontSizeSM","lineWidth","colorBorderBg","Math","round","colorBgContainer","colorErrorHover","badgeToken"],"mappings":"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","sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken, PresetColors } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusPreset = PresetColors.reduce((prev, colorKey) => {\n    const darkColor = token[`${colorKey}-6`];\n    return Object.assign(Object.assign({}, prev), {\n      [`${componentCls}-status-${colorKey}`]: {\n        background: darkColor\n      }\n    });\n  }, {});\n  const statusRibbonPreset = PresetColors.reduce((prev, colorKey) => {\n    const darkColor = token[`${colorKey}-6`];\n    return Object.assign(Object.assign({}, prev), {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    });\n  }, {});\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: `${token.badgeHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: `${badgeHeightSm}px`,\n        borderRadius: badgeHeightSm / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: token.motionDurationMid,\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: Object.assign(Object.assign({\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          position: 'relative',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        }\n      }, statusPreset), {\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }),\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        direction: 'ltr',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          insetInlineEnd: 'auto'\n        }\n      }\n    }),\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      height: badgeFontHeight,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});"]},"metadata":{},"sourceType":"module"}