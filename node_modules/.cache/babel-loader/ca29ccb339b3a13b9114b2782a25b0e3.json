{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\n/* eslint-disable import/prefer-default-export */\nimport classNames from 'classnames';\nimport { PresetColorTypes } from '../_util/colors';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nexport function parseColor(prefixCls, color) {\n  var className = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-\").concat(color), color && PresetColorRegex.test(color)));\n  var overlayStyle = {};\n  var arrowStyle = {};\n\n  if (color && !PresetColorRegex.test(color)) {\n    overlayStyle.background = color; // @ts-ignore\n\n    arrowStyle['--antd-arrow-background-color'] = color;\n  }\n\n  return {\n    className: className,\n    overlayStyle: overlayStyle,\n    arrowStyle: arrowStyle\n  };\n}","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/tooltip/util.js"],"names":["classNames","PresetColorTypes","PresetColorRegex","RegExp","join","parseColor","prefixCls","color","className","test","overlayStyle","arrowStyle","background"],"mappings":";;AAAA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,IAAMC,gBAAgB,GAAG,IAAIC,MAAJ,aAAgBF,gBAAgB,CAACG,IAAjB,CAAsB,GAAtB,CAAhB,mBAAzB;AACA,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,KAA/B,EAAsC;AAC3C,MAAMC,SAAS,GAAGR,UAAU,+BACtBM,SADsB,cACTC,KADS,GACCA,KAAK,IAAIL,gBAAgB,CAACO,IAAjB,CAAsBF,KAAtB,CADV,EAA5B;AAGA,MAAMG,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,EAAnB;;AACA,MAAIJ,KAAK,IAAI,CAACL,gBAAgB,CAACO,IAAjB,CAAsBF,KAAtB,CAAd,EAA4C;AAC1CG,IAAAA,YAAY,CAACE,UAAb,GAA0BL,KAA1B,CAD0C,CAE1C;;AACAI,IAAAA,UAAU,CAAC,+BAAD,CAAV,GAA8CJ,KAA9C;AACD;;AACD,SAAO;AACLC,IAAAA,SAAS,EAATA,SADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLC,IAAAA,UAAU,EAAVA;AAHK,GAAP;AAKD","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport classNames from 'classnames';\nimport { PresetColorTypes } from '../_util/colors';\nconst PresetColorRegex = new RegExp(`^(${PresetColorTypes.join('|')})(-inverse)?$`);\nexport function parseColor(prefixCls, color) {\n  const className = classNames({\n    [`${prefixCls}-${color}`]: color && PresetColorRegex.test(color)\n  });\n  const overlayStyle = {};\n  const arrowStyle = {};\n  if (color && !PresetColorRegex.test(color)) {\n    overlayStyle.background = color;\n    // @ts-ignore\n    arrowStyle['--antd-arrow-background-color'] = color;\n  }\n  return {\n    className,\n    overlayStyle,\n    arrowStyle\n  };\n}"]},"metadata":{},"sourceType":"module"}