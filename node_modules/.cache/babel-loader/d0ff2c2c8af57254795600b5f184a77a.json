{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport LocaleReceiver from '../../locale/LocaleReceiver';\nimport defaultLocale from '../../locale/en_US';\nimport ConfirmDialog from '../ConfirmDialog';\n\nconst HookModal = (_ref, ref) => {\n  let {\n    afterClose,\n    config\n  } = _ref;\n\n  var _a;\n\n  const [open, setOpen] = React.useState(true);\n  const [innerConfig, setInnerConfig] = React.useState(config);\n  const {\n    direction,\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('modal');\n  const rootPrefixCls = getPrefixCls();\n\n  const close = function () {\n    setOpen(false);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const triggerCancel = args.some(param => param && param.triggerCancel);\n\n    if (innerConfig.onCancel && triggerCancel) {\n      innerConfig.onCancel.apply(innerConfig, [() => {}].concat(_toConsumableArray(args.slice(1))));\n    }\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    destroy: close,\n    update: newConfig => {\n      setInnerConfig(originConfig => Object.assign(Object.assign({}, originConfig), newConfig));\n    }\n  }));\n  const mergedOkCancel = (_a = innerConfig.okCancel) !== null && _a !== void 0 ? _a : innerConfig.type === 'confirm';\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Modal\",\n    defaultLocale: defaultLocale.Modal\n  }, contextLocale => /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({\n    prefixCls: prefixCls,\n    rootPrefixCls: rootPrefixCls\n  }, innerConfig, {\n    close: close,\n    open: open,\n    afterClose: afterClose,\n    okText: innerConfig.okText || (mergedOkCancel ? contextLocale.okText : contextLocale.justOkText),\n    direction: direction,\n    cancelText: innerConfig.cancelText || contextLocale.cancelText\n  })));\n};\n\nexport default /*#__PURE__*/React.forwardRef(HookModal);","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/modal/useModal/HookModal.js"],"names":["_toConsumableArray","React","ConfigContext","LocaleReceiver","defaultLocale","ConfirmDialog","HookModal","_ref","ref","afterClose","config","_a","open","setOpen","useState","innerConfig","setInnerConfig","direction","getPrefixCls","useContext","prefixCls","rootPrefixCls","close","_len","arguments","length","args","Array","_key","triggerCancel","some","param","onCancel","apply","concat","slice","useImperativeHandle","destroy","update","newConfig","originConfig","Object","assign","mergedOkCancel","okCancel","type","createElement","componentName","Modal","contextLocale","okText","justOkText","cancelText","forwardRef"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport LocaleReceiver from '../../locale/LocaleReceiver';\nimport defaultLocale from '../../locale/en_US';\nimport ConfirmDialog from '../ConfirmDialog';\nconst HookModal = (_ref, ref) => {\n  let {\n    afterClose,\n    config\n  } = _ref;\n  var _a;\n  const [open, setOpen] = React.useState(true);\n  const [innerConfig, setInnerConfig] = React.useState(config);\n  const {\n    direction,\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('modal');\n  const rootPrefixCls = getPrefixCls();\n  const close = function () {\n    setOpen(false);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const triggerCancel = args.some(param => param && param.triggerCancel);\n    if (innerConfig.onCancel && triggerCancel) {\n      innerConfig.onCancel.apply(innerConfig, [() => {}].concat(_toConsumableArray(args.slice(1))));\n    }\n  };\n  React.useImperativeHandle(ref, () => ({\n    destroy: close,\n    update: newConfig => {\n      setInnerConfig(originConfig => Object.assign(Object.assign({}, originConfig), newConfig));\n    }\n  }));\n  const mergedOkCancel = (_a = innerConfig.okCancel) !== null && _a !== void 0 ? _a : innerConfig.type === 'confirm';\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Modal\",\n    defaultLocale: defaultLocale.Modal\n  }, contextLocale => /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({\n    prefixCls: prefixCls,\n    rootPrefixCls: rootPrefixCls\n  }, innerConfig, {\n    close: close,\n    open: open,\n    afterClose: afterClose,\n    okText: innerConfig.okText || (mergedOkCancel ? contextLocale.okText : contextLocale.justOkText),\n    direction: direction,\n    cancelText: innerConfig.cancelText || contextLocale.cancelText\n  })));\n};\nexport default /*#__PURE__*/React.forwardRef(HookModal);"]},"metadata":{},"sourceType":"module"}