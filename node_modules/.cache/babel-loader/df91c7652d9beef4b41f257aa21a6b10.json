{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sanja\\\\Downloads\\\\todo-react-main\\\\todo-react-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nvar skeletonClsLoading = new Keyframes(\"ant-skeleton-loading\", {\n  '0%': {\n    transform: 'translateX(-37.5%)'\n  },\n  '100%': {\n    transform: 'translateX(37.5%)'\n  }\n});\n\nvar genSkeletonElementCommonSize = function genSkeletonElementCommonSize(size) {\n  return {\n    height: size,\n    lineHeight: \"\".concat(size, \"px\")\n  };\n};\n\nvar genSkeletonElementAvatarSize = function genSkeletonElementAvatarSize(size) {\n  return Object.assign({\n    width: size\n  }, genSkeletonElementCommonSize(size));\n};\n\nvar genSkeletonColor = function genSkeletonColor(token) {\n  return {\n    position: 'relative',\n    // fix https://github.com/ant-design/ant-design/issues/36444\n    // https://monshin.github.io/202109/css/safari-border-radius-overflow-hidden/\n\n    /* stylelint-disable-next-line property-no-vendor-prefix,value-no-vendor-prefix */\n    zIndex: 0,\n    overflow: 'hidden',\n    background: 'transparent',\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: '-150%',\n      bottom: 0,\n      insetInlineStart: '-150%',\n      background: token.skeletonLoadingBackground,\n      animationName: skeletonClsLoading,\n      animationDuration: token.skeletonLoadingMotionDuration,\n      animationTimingFunction: 'ease',\n      animationIterationCount: 'infinite',\n      content: '\"\"'\n    }\n  };\n};\n\nvar genSkeletonElementInputSize = function genSkeletonElementInputSize(size) {\n  return Object.assign({\n    width: size * 5,\n    minWidth: size * 5\n  }, genSkeletonElementCommonSize(size));\n};\n\nvar genSkeletonElementAvatar = function genSkeletonElementAvatar(token) {\n  var _ref;\n\n  var skeletonAvatarCls = token.skeletonAvatarCls,\n      color = token.color,\n      controlHeight = token.controlHeight,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM;\n  return _ref = {}, _defineProperty(_ref, \"\".concat(skeletonAvatarCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: color\n  }, genSkeletonElementAvatarSize(controlHeight))), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-lg\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG))), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-sm\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))), _ref;\n};\n\nvar genSkeletonElementInput = function genSkeletonElementInput(token) {\n  var _ref2;\n\n  var controlHeight = token.controlHeight,\n      borderRadiusSM = token.borderRadiusSM,\n      skeletonInputCls = token.skeletonInputCls,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM,\n      color = token.color;\n  return _ref2 = {}, _defineProperty(_ref2, \"\".concat(skeletonInputCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: color,\n    borderRadius: borderRadiusSM\n  }, genSkeletonElementInputSize(controlHeight))), _defineProperty(_ref2, \"\".concat(skeletonInputCls, \"-lg\"), Object.assign({}, genSkeletonElementInputSize(controlHeightLG))), _defineProperty(_ref2, \"\".concat(skeletonInputCls, \"-sm\"), Object.assign({}, genSkeletonElementInputSize(controlHeightSM))), _ref2;\n};\n\nvar genSkeletonElementImageSize = function genSkeletonElementImageSize(size) {\n  return Object.assign({\n    width: size\n  }, genSkeletonElementCommonSize(size));\n};\n\nvar genSkeletonElementImage = function genSkeletonElementImage(token) {\n  var _Object$assign, _ref3;\n\n  var skeletonImageCls = token.skeletonImageCls,\n      imageSizeBase = token.imageSizeBase,\n      color = token.color,\n      borderRadiusSM = token.borderRadiusSM;\n  return _ref3 = {}, _defineProperty(_ref3, \"\".concat(skeletonImageCls), Object.assign(Object.assign({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    verticalAlign: 'top',\n    background: color,\n    borderRadius: borderRadiusSM\n  }, genSkeletonElementImageSize(imageSizeBase * 2)), (_Object$assign = {}, _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-path\"), {\n    fill: '#bfbfbf'\n  }), _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-svg\"), Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n    maxWidth: imageSizeBase * 4,\n    maxHeight: imageSizeBase * 4\n  })), _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-svg\").concat(skeletonImageCls, \"-svg-circle\"), {\n    borderRadius: '50%'\n  }), _Object$assign))), _defineProperty(_ref3, \"\".concat(skeletonImageCls).concat(skeletonImageCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _ref3;\n};\n\nvar genSkeletonElementButtonShape = function genSkeletonElementButtonShape(token, size, buttonCls) {\n  var _ref4;\n\n  var skeletonButtonCls = token.skeletonButtonCls;\n  return _ref4 = {}, _defineProperty(_ref4, \"\".concat(buttonCls).concat(skeletonButtonCls, \"-circle\"), {\n    width: size,\n    minWidth: size,\n    borderRadius: '50%'\n  }), _defineProperty(_ref4, \"\".concat(buttonCls).concat(skeletonButtonCls, \"-round\"), {\n    borderRadius: size\n  }), _ref4;\n};\n\nvar genSkeletonElementButtonSize = function genSkeletonElementButtonSize(size) {\n  return Object.assign({\n    width: size * 2,\n    minWidth: size * 2\n  }, genSkeletonElementCommonSize(size));\n};\n\nvar genSkeletonElementButton = function genSkeletonElementButton(token) {\n  var borderRadiusSM = token.borderRadiusSM,\n      skeletonButtonCls = token.skeletonButtonCls,\n      controlHeight = token.controlHeight,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM,\n      color = token.color;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(_defineProperty({}, \"\".concat(skeletonButtonCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: color,\n    borderRadius: borderRadiusSM,\n    width: controlHeight * 2,\n    minWidth: controlHeight * 2\n  }, genSkeletonElementButtonSize(controlHeight))), genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), _defineProperty({}, \"\".concat(skeletonButtonCls, \"-lg\"), Object.assign({}, genSkeletonElementButtonSize(controlHeightLG)))), genSkeletonElementButtonShape(token, controlHeightLG, \"\".concat(skeletonButtonCls, \"-lg\"))), _defineProperty({}, \"\".concat(skeletonButtonCls, \"-sm\"), Object.assign({}, genSkeletonElementButtonSize(controlHeightSM)))), genSkeletonElementButtonShape(token, controlHeightSM, \"\".concat(skeletonButtonCls, \"-sm\")));\n}; // =============================== Base ===============================\n\n\nvar genBaseStyle = function genBaseStyle(token) {\n  var _$concat, _$concat3, _$concat4, _$concat$concat2, _ref5;\n\n  var componentCls = token.componentCls,\n      skeletonAvatarCls = token.skeletonAvatarCls,\n      skeletonTitleCls = token.skeletonTitleCls,\n      skeletonParagraphCls = token.skeletonParagraphCls,\n      skeletonButtonCls = token.skeletonButtonCls,\n      skeletonInputCls = token.skeletonInputCls,\n      skeletonImageCls = token.skeletonImageCls,\n      controlHeight = token.controlHeight,\n      controlHeightLG = token.controlHeightLG,\n      controlHeightSM = token.controlHeightSM,\n      color = token.color,\n      padding = token.padding,\n      marginSM = token.marginSM,\n      borderRadius = token.borderRadius,\n      skeletonTitleHeight = token.skeletonTitleHeight,\n      skeletonBlockRadius = token.skeletonBlockRadius,\n      skeletonParagraphLineHeight = token.skeletonParagraphLineHeight,\n      controlHeightXS = token.controlHeightXS,\n      skeletonParagraphMarginTop = token.skeletonParagraphMarginTop;\n  return _ref5 = {}, _defineProperty(_ref5, \"\".concat(componentCls), (_$concat4 = {\n    display: 'table',\n    width: '100%'\n  }, _defineProperty(_$concat4, \"\".concat(componentCls, \"-header\"), (_$concat = {\n    display: 'table-cell',\n    paddingInlineEnd: padding,\n    verticalAlign: 'top'\n  }, _defineProperty(_$concat, \"\".concat(skeletonAvatarCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: color\n  }, genSkeletonElementAvatarSize(controlHeight))), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-lg\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG))), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-sm\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))), _$concat)), _defineProperty(_$concat4, \"\".concat(componentCls, \"-content\"), (_$concat3 = {\n    display: 'table-cell',\n    width: '100%',\n    verticalAlign: 'top'\n  }, _defineProperty(_$concat3, \"\".concat(skeletonTitleCls), _defineProperty({\n    width: '100%',\n    height: skeletonTitleHeight,\n    background: color,\n    borderRadius: skeletonBlockRadius\n  }, \"+ \".concat(skeletonParagraphCls), {\n    marginBlockStart: controlHeightSM\n  })), _defineProperty(_$concat3, \"\".concat(skeletonParagraphCls), {\n    padding: 0,\n    '> li': {\n      width: '100%',\n      height: skeletonParagraphLineHeight,\n      listStyle: 'none',\n      background: color,\n      borderRadius: skeletonBlockRadius,\n      '+ li': {\n        marginBlockStart: controlHeightXS\n      }\n    }\n  }), _defineProperty(_$concat3, \"\".concat(skeletonParagraphCls, \"> li:last-child:not(:first-child):not(:nth-child(2))\"), {\n    width: '61%'\n  }), _$concat3)), _defineProperty(_$concat4, \"&-round \".concat(componentCls, \"-content\"), _defineProperty({}, \"\".concat(skeletonTitleCls, \", \").concat(skeletonParagraphCls, \" > li\"), {\n    borderRadius: borderRadius\n  })), _$concat4)), _defineProperty(_ref5, \"\".concat(componentCls, \"-with-avatar \").concat(componentCls, \"-content\"), _defineProperty({}, \"\".concat(skeletonTitleCls), _defineProperty({\n    marginBlockStart: marginSM\n  }, \"+ \".concat(skeletonParagraphCls), {\n    marginBlockStart: skeletonParagraphMarginTop\n  }))), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-element\"), Object.assign(Object.assign(Object.assign(Object.assign({\n    display: 'inline-block',\n    width: 'auto'\n  }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token))), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-block\"), (_$concat$concat2 = {\n    width: '100%'\n  }, _defineProperty(_$concat$concat2, \"\".concat(skeletonButtonCls), {\n    width: '100%'\n  }), _defineProperty(_$concat$concat2, \"\".concat(skeletonInputCls), {\n    width: '100%'\n  }), _$concat$concat2)), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-active\"), _defineProperty({}, \"\\n        \".concat(skeletonTitleCls, \",\\n        \").concat(skeletonParagraphCls, \" > li,\\n        \").concat(skeletonAvatarCls, \",\\n        \").concat(skeletonButtonCls, \",\\n        \").concat(skeletonInputCls, \",\\n        \").concat(skeletonImageCls, \"\\n      \"), Object.assign({}, genSkeletonColor(token)))), _ref5;\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Skeleton', function (token) {\n  var componentCls = token.componentCls;\n  var skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: \"\".concat(componentCls, \"-avatar\"),\n    skeletonTitleCls: \"\".concat(componentCls, \"-title\"),\n    skeletonParagraphCls: \"\".concat(componentCls, \"-paragraph\"),\n    skeletonButtonCls: \"\".concat(componentCls, \"-button\"),\n    skeletonInputCls: \"\".concat(componentCls, \"-input\"),\n    skeletonImageCls: \"\".concat(componentCls, \"-image\"),\n    imageSizeBase: token.controlHeight * 1.5,\n    skeletonTitleHeight: token.controlHeight / 2,\n    skeletonBlockRadius: token.borderRadiusSM,\n    skeletonParagraphLineHeight: token.controlHeight / 2,\n    skeletonParagraphMarginTop: token.marginLG + token.marginXXS,\n    borderRadius: 100,\n    skeletonLoadingBackground: \"linear-gradient(90deg, \".concat(token.color, \" 25%, \").concat(token.colorGradientEnd, \" 37%, \").concat(token.color, \" 63%)\"),\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, function (token) {\n  var colorFillContent = token.colorFillContent,\n      colorFill = token.colorFill;\n  return {\n    color: colorFillContent,\n    colorGradientEnd: colorFill\n  };\n});","map":{"version":3,"sources":["C:/Users/sanja/Downloads/todo-react-main/todo-react-main/node_modules/antd/es/skeleton/style/index.js"],"names":["Keyframes","genComponentStyleHook","mergeToken","skeletonClsLoading","transform","genSkeletonElementCommonSize","size","height","lineHeight","genSkeletonElementAvatarSize","Object","assign","width","genSkeletonColor","token","position","zIndex","overflow","background","top","insetInlineEnd","bottom","insetInlineStart","skeletonLoadingBackground","animationName","animationDuration","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","content","genSkeletonElementInputSize","minWidth","genSkeletonElementAvatar","skeletonAvatarCls","color","controlHeight","controlHeightLG","controlHeightSM","display","verticalAlign","borderRadius","genSkeletonElementInput","borderRadiusSM","skeletonInputCls","genSkeletonElementImageSize","genSkeletonElementImage","skeletonImageCls","imageSizeBase","alignItems","justifyContent","fill","maxWidth","maxHeight","genSkeletonElementButtonShape","buttonCls","skeletonButtonCls","genSkeletonElementButtonSize","genSkeletonElementButton","genBaseStyle","componentCls","skeletonTitleCls","skeletonParagraphCls","padding","marginSM","skeletonTitleHeight","skeletonBlockRadius","skeletonParagraphLineHeight","controlHeightXS","skeletonParagraphMarginTop","paddingInlineEnd","marginBlockStart","listStyle","skeletonToken","marginLG","marginXXS","colorGradientEnd","colorFillContent","colorFill"],"mappings":"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","sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    transform: 'translateX(-37.5%)'\n  },\n  '100%': {\n    transform: 'translateX(37.5%)'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: `${size}px`\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  position: 'relative',\n  // fix https://github.com/ant-design/ant-design/issues/36444\n  // https://monshin.github.io/202109/css/safari-border-radius-overflow-hidden/\n  /* stylelint-disable-next-line property-no-vendor-prefix,value-no-vendor-prefix */\n  zIndex: 0,\n  overflow: 'hidden',\n  background: 'transparent',\n  '&::after': {\n    position: 'absolute',\n    top: 0,\n    insetInlineEnd: '-150%',\n    bottom: 0,\n    insetInlineStart: '-150%',\n    background: token.skeletonLoadingBackground,\n    animationName: skeletonClsLoading,\n    animationDuration: token.skeletonLoadingMotionDuration,\n    animationTimingFunction: 'ease',\n    animationIterationCount: 'infinite',\n    content: '\"\"'\n  }\n});\nconst genSkeletonElementInputSize = size => Object.assign({\n  width: size * 5,\n  minWidth: size * 5\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    color,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [`${skeletonAvatarCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    color\n  } = token;\n  return {\n    [`${skeletonInputCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    color,\n    borderRadiusSM\n  } = token;\n  return {\n    [`${skeletonImageCls}`]: Object.assign(Object.assign({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(imageSizeBase * 2)), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: imageSizeBase * 4,\n        maxHeight: imageSizeBase * 4\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = size => Object.assign({\n  width: size * 2,\n  minWidth: size * 2\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    color\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [`${skeletonButtonCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM,\n      width: controlHeight * 2,\n      minWidth: controlHeight * 2\n    }, genSkeletonElementButtonSize(controlHeight))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    color,\n    padding,\n    marginSM,\n    borderRadius,\n    skeletonTitleHeight,\n    skeletonBlockRadius,\n    skeletonParagraphLineHeight,\n    controlHeightXS,\n    skeletonParagraphMarginTop\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [`${skeletonAvatarCls}`]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: color\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [`${skeletonTitleCls}`]: {\n          width: '100%',\n          height: skeletonTitleHeight,\n          background: color,\n          borderRadius: skeletonBlockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [`${skeletonParagraphCls}`]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: skeletonParagraphLineHeight,\n            listStyle: 'none',\n            background: color,\n            borderRadius: skeletonBlockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [`${skeletonTitleCls}`]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: skeletonParagraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [`${skeletonButtonCls}`]: {\n        width: '100%'\n      },\n      [`${skeletonInputCls}`]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Skeleton', token => {\n  const {\n    componentCls\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: token.controlHeight * 1.5,\n    skeletonTitleHeight: token.controlHeight / 2,\n    skeletonBlockRadius: token.borderRadiusSM,\n    skeletonParagraphLineHeight: token.controlHeight / 2,\n    skeletonParagraphMarginTop: token.marginLG + token.marginXXS,\n    borderRadius: 100,\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.color} 25%, ${token.colorGradientEnd} 37%, ${token.color} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  return {\n    color: colorFillContent,\n    colorGradientEnd: colorFill\n  };\n});"]},"metadata":{},"sourceType":"module"}